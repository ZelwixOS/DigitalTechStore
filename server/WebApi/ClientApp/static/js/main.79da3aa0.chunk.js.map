{"version":3,"sources":["Requests/PostRequests.ts","Requests/DeleteRequests.ts","Components/Parts/PoductCounter.tsx","Components/Parts/ProductCard.tsx","Requests/AccountRequests.ts","Types/Roles.ts","Requests/GetRequests.ts","Components/Parts/CategorySelector.tsx","Components/Parts/ErrorSnackBar.tsx","Components/Parts/LoginForm.tsx","Components/Parts/LoginModal.tsx","Components/Parts/UserAvatar.tsx","Components/Parts/UserMiniPanel.tsx","Components/Parts/CityNavigation.tsx","Components/Parts/NavigationBar.tsx","Components/Parts/SortBar.tsx","Components/Parts/RangeFilter.tsx","Components/Parts/ListFilter.tsx","Components/Parts/FilterBlock.tsx","Components/Parts/FilterBar.tsx","Components/Parts/ProductListParams.tsx","Components/Pages/CategoryPage.tsx","Components/Pages/ProductsPage.tsx","Components/Parts/OutletInfo.tsx","Components/Parts/OutletCount.tsx","Components/Parts/UnitProducts.tsx","Components/Parts/PriceLikeBuyCard.tsx","Components/Parts/DetailedProductCard.tsx","Components/Parts/ProductDescription.tsx","Components/Parts/ProductParameter.tsx","Components/Parts/ProductParams.tsx","Components/Parts/ReviewBlock.tsx","Components/Parts/ReviewForm.tsx","Components/Parts/ProductReviews.tsx","Components/Parts/ProductInfoPanel.tsx","Components/Pages/ProductPage.tsx","Components/Parts/RegistrationForm.tsx","Components/Pages/RegistrationPage.tsx","Requests/PutRequests.ts","Components/Pages/CartPage.tsx","Components/Pages/WishlistPage.tsx","Components/Parts/CategoryCard.tsx","Components/Pages/CommonCategoryPage.tsx","Types/PurchaseStatus.ts","Components/Parts/PurchasingItemsList.tsx","Components/Parts/PurchaseDetailedInfo.tsx","Components/Pages/PurchasingPage.tsx","Components/Pages/UserPurchases.tsx","Components/Admin/Parts/HiddenNavigation.tsx","Components/Admin/Parts/NavigationBar.tsx","Components/Admin/Parts/TableStructure.tsx","Components/Admin/Parts/TableBasement.tsx","Components/Admin/Parts/ModalFormDialog.tsx","Components/Admin/Parts/CreateCommonCategory.tsx","Components/Admin/Parts/TransferList.tsx","Components/Admin/Parts/CreateCategory.tsx","Components/Admin/Parts/EditCategory.tsx","Components/Admin/Parts/CompactCategoryList.tsx","Components/Admin/Parts/EditCommonCategory.tsx","Components/Admin/Pages/CommonCategoryList.tsx","Components/Admin/Pages/CategoryList.tsx","Components/Admin/Parts/DataGraph.tsx","Components/Admin/Parts/DonutSalesStatisticsDiagram.tsx","Components/Admin/Parts/CreateFileReport.tsx","Components/Admin/Parts/DonutSellers.tsx","Components/Admin/Pages/AdminPage.tsx","Components/Admin/Parts/CreateParameterBlock.tsx","Components/Admin/Parts/EditParameterBlock.tsx","Components/Admin/Pages/ParameterBlockList.tsx","Components/Admin/Parts/CreateParameter.tsx","Components/Admin/Parts/CreateParameterValue.tsx","Components/Admin/Parts/EditParameterValue.tsx","Components/Admin/Parts/ParameterValueList.tsx","Components/Admin/Parts/EditParameter.tsx","Components/Admin/Pages/TechParameterList.tsx","Components/Admin/Parts/RegisterWorker.tsx","Components/Admin/Parts/UserTable.tsx","Components/Admin/Parts/EditWorkerInfo.tsx","Components/Admin/Pages/WorkersPage.tsx","Components/Admin/Parts/CreateProductParameter.tsx","Components/Admin/Pages/ProductParameterList.tsx","Components/Admin/Parts/ProductTable.tsx","Components/Admin/Parts/CreateProduct.tsx","Components/Admin/Parts/EditProduct.tsx","Components/Admin/Parts/ProductValueList.tsx","Components/Admin/Parts/CreateRegion.tsx","Components/Admin/Parts/CreateCity.tsx","Components/Admin/Parts/EditCity.tsx","Components/Admin/Parts/CityList.tsx","Components/Admin/Parts/EditRegion.tsx","Components/Admin/Pages/RegionList.tsx","Components/Admin/Parts/CreateOutlet.tsx","Components/Admin/Parts/EditOutlet.tsx","Components/Admin/Pages/OutletList.tsx","Components/Admin/Parts/CreateWarehouse.tsx","Components/Admin/Parts/EditWarehouse.tsx","Components/Admin/Pages/WarehouseList.tsx","Components/Admin/Pages/ClientsList.tsx","Components/Pages/OutletOrdersPage.tsx","Components/Pages/HistoricalOrdersPage.tsx","Components/Parts/Footer.tsx","Components/Pages/Shops.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["post","url","data","a","axios","addToCart","productId","count","addToWishlist","createReview","mark","description","getPrepurchaseInfo","items","cityId","localStorage","getItem","purchaseItems","createPurchase","parseInt","delivery","createCommonCategory","name","createCategory","deliveryPrice","commonCategoryId","setCategoryParameterBlocks","categoryId","blocks","createParameterBlock","banUser","id","unbanUser","registerWorker","login","password","email","phoneNumber","firstName","secondName","roleName","outletId","warehouseId","outletWorker","createParameter","important","range","minValue","maxValue","parameterBlockId","createParameterValue","techParameterId","value","createProductParameter","parameterId","parameterValueId","cloneProduct","publishProduct","unpublishProduct","createProduct","price","priceWithoutDiscount","vendorCode","picFile","parameters","formData","FormData","append","parameterString","JSON","stringify","createRegion","createCity","regionId","createOutlet","streetName","building","postalCode","noteForUser","createWarehouse","banReview","deleteRequest","delete","deleteFromCart","deleteFromWishlist","deleteCommonCategory","deleteCategory","deleteParameterBlock","deleteParameter","deleteParameterValue","deleteProductParameter","deleteProduct","deleteRegion","deleteCity","deleteOutlet","deleteWarehouse","useStyles","makeStyles","theme","createStyles","root","padding","spacing","PoductCounter","props","useState","currentCount","setCount","classes","onCount","newCount","countValue","onlyNubmers","Grid","className","container","direction","justifyContent","alignItems","Button","variant","onClick","TextField","onChange","event","curStringCount","target","test","display","minHeight","marginBottom","details","flexDirection","content","flex","button","buttonright","paddingLeft","paddingTop","paddingBottom","cover","maxWidth","maxHeight","margin","bold","fontWeight","thinbold","crossed","textDecoration","rating","ratingNum","marginLeft","ProductCard","role","sessionStorage","isShown","setIsShown","isChecked","setChecked","picUrl","product","picURL","picture","setPicture","useEffect","isMounted","img","Image","src","cart","inCart","includes","setInCart","onerror","inWishlist","setInWishlist","addProductToCart","onBuy","setItem","addProductToWishlist","onWished","setOpen","deleteProductFromWishlist","onDelete","bind","React","open","handleClose","reason","Card","onMouseEnter","onMouseLeave","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","onChecked","item","xs","sm","Checkbox","color","checked","alt","Typography","CardContent","align","component","Link","href","Fragment","alignContent","Rating","readOnly","hideLike","IconButton","aria-label","hideBuy","showCounter","serverAnswers","authViaGoogle","token","logInRequest","logInData","registrationRequest","registrationData","regViaGoogleRequest","getRole","get","getUserInfo","logOut","Roles","guest","admin","customer","getRequest","getProducts","currentPage","itemsOnPage","sortType","sortparams","sortTypeParsing","params","URLSearchParams","location","search","type","reverse","getSearchedProducts","getCart","getCartUnsigned","getWishlist","getCategories","commonCategory","getAllCategories","getCommonCategories","getReviews","getProduct","getParameters","getRegions","getAllRegions","getCategoryById","getRegionCities","getProductsOfCategory","categoryName","filters","filter","itemIds","length","join","split","getPurchases","getOutletPurchases","getOutletHistoricalPurchases","getCommonCategory","getCategoryParamBlocks","getParamBlocks","getParameterBlock","getTechParameters","getTechListParameters","getParameter","getOutlets","getWarehouses","getWorkers","getWorker","getParameterValue","getProductParameter","getRegion","getValuesOfParameter","getCity","getAllOutlets","getAllWarehouses","getOutlet","getWarehouse","getOrdersForMonth","finished","getMonthSales","getTotalSales","getClients","getCityOulets","getStatFile","fromDate","toDate","toISOString","getWorkersSales","paper","marginRight","menu","paddingRight","largeObject","breakpoints","down","smallObject","up","CategorySelector","comCategories","setComCategories","anchorRef","useRef","handleToggle","prevOpen","current","focus","res","getCategs","ref","size","aria-controls","undefined","aria-haspopup","endIcon","Popper","anchorEl","transition","disablePortal","Paper","ClickAwayListener","onClickAway","contains","MenuList","autoFocusItem","onKeyDown","key","preventDefault","Array","map","comCategory","index","MenuItem","document","ErrorSnackBar","AlertTitle","message","errors","er","spaces","marginTop","LoginForm","rememberMe","loginData","setLoginData","setErrors","setMessage","handleGoogleLoginSuccess","googleData","getAuthResponse","googleRedirectTo","logInButtonClicked","redirectTo","response","code","window","replace","id_token","serverResult","redirectToRegistrationPage","profile","getBasicProfile","regData","getEmail","getGivenName","getFamilyName","history","pushState","label","FormControlLabel","control","clientId","buttonText","onSuccess","cookiePolicy","buttons","LoginModal","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","UserAvatar","picPath","userInfo","avatar","stringToColor","string","i","hash","charCodeAt","toString","substr","Avatar","userName","sx","bgcolor","children","UserMiniPanel","setUserInfo","getUserInformation","userInformation","signOut","removeItem","Divider","bar","backgroundColor","CityNavigation","city","setCity","regions","setRegions","getRegionsInfo","cityName","onCityClick","currentTarget","reg","find","r","cities","c","cit","pickCity","region","cityAutoPicked","Accordion","AccordionSummary","expandIcon","AccordionDetails","List","ind","ListItem","position","borderRadius","shape","palette","common","white","width","inputRoot","inputInput","transitions","create","searchIcon","height","pointerEvents","logoButton","fontSize","fontFamily","logoIcon","realElement","NavigationBar","isAuth","setAuth","loaded","setLoaded","setSearch","checkAuth","authres","AppBar","Toolbar","startIcon","InputBase","str","placeholder","input","inputProps","ButtonGroup","selector","formControl","minWidth","SortBar","handleOpen","handleSortTypeChanged","FormControl","InputLabel","Select","labelId","heading","beforeText","RangeFilter","setMinValue","setMaxValue","paramValue","pickedParams","parameter","handleMinChange","setParameter","handleMaxChange","checkboxField","overflow","ListFilter","picked","setPicked","parameterValues","p","pic","getChecked","onCheckboxChanged","pickedValues","push","findIndex","v","splice","val","typography","FilterBlock","parameterBlock","rightTextField","leftTextField","FilterBar","setPrices","gutterBottom","priceRange","pickedPrices","InputProps","endAdornment","InputAdornment","parameterBlocks","applyChanges","createProdParams","getItems","pickedPrice","productList","lastPage","handlePageChange","this","setPage","createURL","setSortType","filtersApplied","setInfo","prodList","maxPage","minPrice","maxPrice","checkPickedPrices","newValue","setParams","currPage","sort","isItNumber","isNaN","setParameterValue","param","f","setFilters","keys","next","done","set","productGrid","categoryWord","filterPanel","CategoryPage","useParams","object","products","useLocalObservable","qParams","Pagination","page","ProductsPage","getProd","OutletInfo","outlet","userNote","OutletCount","dialog","outlets","isInWarehouse","o","grid","toLeft","PriceLikeBuyCard","checkInCart","UnitProducts","image","card","DetailedProductCard","strinTechParams","paramBlocks","block","substring","paramString","outletProducts","prodName","fontWeightBold","descriptionText","ProductDescription","productName","productDescription","line","borderBottom","divider","ProductParameter","ProductParams","reviewHeader","commentSection","ReviewBlock","showBan","show","setShow","ban","review","cardPart","ReviewForm","setReview","submit","addReview","multiline","rows","fullWidth","ProductReviews","getProductReviews","setReviews","reviewed","setReviewed","reviews","newReview","newVar","pop","saveReviewed","TabPanel","other","hidden","a11yProps","background","tabs","borderRight","ProductInfoPanel","setValue","Tabs","orientation","textColor","Tab","ProductPage","setProduct","setParameters","productID","onload","RegistrationForm","newObject","oldData","rerendered","setRererendered","setRegData","registerButtonClicked","newData","RegistrationPage","async","defer","style","state","put","updateCommonCategory","updateParameterBlock","updateCategory","updateParameter","updateWorker","updateParameterValue","updateProduct","updateRegion","updateCity","updateOutlet","updateWarehouse","updatePurchaseStatus","status","cancelPurchaseStatus","pageName","empty","CartPage","setCartItems","updateCurrentSumm","pickedProducts","cartItems","prod","summ","element","setCurrentSumm","updateCartItem","itemId","deleteItem","console","log","result","arr","deleted","newCartItems","deletedPicked","setPickedProducts","added","newPicked","currentSumm","cartItem","disabled","WishlistPage","setWishlistItems","wishlistItems","newWishlistItems","wishlistItem","CategoryCard","redirectionURL","category","CardActionArea","CommonCategoryPage","categories","setCategories","commonCategoryName","array","createRow","PurchaseStatus","getStatusString","text","PurchasingItemsList","PurchaseDetailedInfo","purchase","setStatus","completed","cancel","refuse","cardName","customerName","sellerName","totalCost","hideDelivery","recieverName","deliveryAdress","deliveryCost","deliveryOutlet","showCancel","showFinish","showRefuse","topCard","field","textSep","PurchasingPage","getPreInfo","parseParams","setPrepurchaseInfo","setSum","sum","dataArr","toParse","createNewCustomerInfo","curr","customerFullName","customerTelephone","prepurchaseInfo","customerInfo","setCustomerInfo","deliveryType","setDeliveryType","setRecieverName","recieverAdress","setRecieverAdress","setOutlet","operationResult","setResult","err","deliveryOutletId","itemArr","e","newVal","RadioGroup","row","Radio","UserPurchases","setPurchases","purchases","date","createdDate","Date","toLocaleString","HiddenNavigation","setState","setRole","toggleDrawer","onMenuItemClick","loc","commonCategories","workers","clients","warehouses","menuItem","click","ListItemText","Drawer","anchor","floating","fabBlue","fabRed","fabViolet","TableStructure","getData","setData","refreshData","pageSize","dataPage","pageNum","setPageNum","selectedItem","setSelectedItem","deleteSelected","onCreate","createNew","onEdit","editSelected","error","compact","rowCount","columns","rowsPerPageOptions","onPageChange","paged","onSelectionModelChange","selectionModel","setSelected","Fab","TableBasement","ModalFormDialog","ArrowBack","form","CreateCommonCategory","commonCategoryData","setCommonCategoryData","refresher","refresh","not","b","indexOf","intersection","TransferList","leftChecked","left","rightChecked","right","currentIndex","newChecked","customList","dense","ListItemIcon","tabIndex","disableRipple","primary","setRight","concat","setLeft","CreateCategory","setLoading","comCats","setCommonCategories","cloneData","categoryData","getFinalData","parBlocks","unimportant","setCategoryData","setImportant","setUnimportant","loading","step","setStep","onNext","onBack","CircularProgress","newPrice","select","comCat","EditCategory","includedBlocks","excludedBlocks","setStartImportant","startImportant","resBlocks","imp","unimp","CompactCategoryList","setError","createOpen","setCreateOpen","editOpen","setEditOpen","refreshFunction","setRefrFun","selected","headerName","refrFun","selectedId","EditCommonCategory","CommonCategoryList","CategoryList","title","textShadow","chart","DataGraph","useTheme","LineChart","Line","dataKey","stroke","yName","XAxis","xName","Tooltip","ChartJS","register","ArcElement","Legend","doughnut","DonutSalesStatisticsDiagram","pieChartData","labels","datasets","notCompleted","refused","canceled","colors","hoverOffset","CreateFileReport","now","monthBegginig","getFullYear","getMonth","monthEnd","selectedFromDate","setFromSelectedDate","selectedToDate","setToSelectedDate","link","createElement","download","body","appendChild","removeChild","utils","DateFnsUtils","format","KeyboardButtonProps","DonutSellers","names","mainTitle","mainGrid","AdminPage","resPFM","resPrCFM","resMAFM","resPFMA","resPrCFMA","resMAFMA","resPTA","resPrCTA","resMATA","resPFMW","resPrCFMW","resMAFMW","setPurchasesForMonth","arrDateParser","setProductsForMonth","setMoneyForMonth","setPurchasesForMonthAll","setProductsForMonthAll","setMoneyForMonthAll","setPurchasesTotalAll","setProductsTotalAll","setMoneyTotalAll","setPurchasesWorkers","setProductsWorkers","setMoneyWorkers","orig","forEach","newItem","dateParse","toLocaleDateString","purchasesForMonth","productsForMonth","moneyForMonth","purchasesForMonthAll","productsForMonthAll","moneyForMonthAll","purchasesTotalAll","productsTotalAll","moneyTotalAll","purchasesWorkers","productsWorkers","moneyWorkers","elevation","CreateParameterBlock","setName","EditParameterBlock","ParameterBlockList","CreateParameter","setParameterBlocks","parameterData","setParameterData","CreateParameterValue","EditParameterValue","ParameterValueList","EditParameter","TechParameterList","RegisterWorker","setCities","setOutlets","setWarehouses","handleCityChange","ores","wres","fabGreen","UserTable","onBan","banSelected","onUnban","unbanSelected","s","banned","EditWorkerInfo","handleRoleChange","WorkersPage","CreateProductParameter","prods","setProducts","found","ProductParameterList","fabSkyBlue","fabOrange","ProductTable","getDataPage","d","setPageCount","pageCount","refreshByPage","pg","onClone","onPublish","onUnpublish","query","searchQuery","refreshByFilter","sortable","valueGetter","published","CreateProduct","cats","loadCategoryData","productData","getCategoryData","setProductData","paramVals","setParamVals","setPic","setPicUrl","handleRangeParameterChange","foundObject","handleListParameterChange","cat","accept","file","files","URL","createObjectURL","CardMedia","htmlFor","pb","pv","EditProduct","initValues","setInitialPValues","parseInitValues","hashInit","initialPValues","newBlock","ProductValueList","CreateRegion","CreateCity","EditCity","CityList","getCities","EditRegion","RegionList","CreateOutlet","outletData","setOutletData","setRegion","EditOutlet","OutletList","CreateWarehouse","EditWarehouse","WarehouseList","ClientsList","OutletOrdersPage","handleSearchChange","Footer","Box","Container","outletGrid","Shops","innerTheme","createTheme","main","secondary","App","ThemeProvider","path","HistoricalOrdersPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kdAQeA,E,gFAAf,WAAuBC,EAAaC,GAApC,SAAAC,EAAA,sEACgBC,IAAMJ,KAAKC,EAAKC,GADhC,uCACuCA,MADvC,4C,+BAIeG,E,gFAAf,WAAyBC,EAAmBC,GAA5C,SAAAJ,EAAA,sEACeH,EAAK,2BAA4B,CAAEM,UAAWA,EAAWC,MAAOA,IAD/E,oF,+BAIeC,E,8EAAf,WAA6BF,GAA7B,SAAAH,EAAA,sEACeH,EAAK,+BAAD,OAAgCM,EAAhC,KAA8C,MADjE,oF,+BAIeG,E,kFAAf,WAA4BH,EAAmBI,EAAcC,GAA7D,SAAAR,EAAA,sEACeH,EAAK,eAAgB,CAAEM,UAAWA,EAAWI,KAAMA,EAAMC,YAAaA,IADrF,oF,+BAIeC,E,8EAAf,WAAkCC,GAAlC,iBAAAV,EAAA,6DACQW,EAASC,aAAaC,QAAQ,UAC9Bd,EAAO,CAAEY,OAAQA,EAAQG,cAAeJ,GAFhD,SAGeb,EAAK,wBAAyBE,GAH7C,oF,+BAMegB,E,8EAAf,WAA8BhB,GAA9B,eAAAC,EAAA,6DACQW,EAASC,aAAaC,QAAQ,UACpCd,EAAKY,OAASK,SAASL,GACnBZ,EAAKkB,WACPlB,EAAKkB,SAASN,OAASK,SAASL,IAJpC,SAOed,EAAK,iBAAkBE,GAPtC,oF,+BAUemB,E,gFAAf,WAAoCC,EAAcX,GAAlD,eAAAR,EAAA,6DACQD,EAAO,CAAEoB,KAAMA,EAAMX,YAAaA,GAD1C,SAEeX,EAAK,sBAAuBE,GAF3C,oF,+BAKeqB,E,oFAAf,WAA8BD,EAAcX,EAAqBa,EAAuBC,GAAxF,eAAAtB,EAAA,6DACQD,EAAO,CAAEoB,KAAMA,EAAMX,YAAaA,EAAaa,gBAAeC,oBADtE,SAEezB,EAAK,gBAAiBE,GAFrC,oF,+BAKewB,E,gFAAf,WAA0CC,EAAoBC,GAA9D,SAAAzB,EAAA,sEACeH,EAAK,+BAAD,OAAgC2B,GAAcC,GADjE,oF,+BAIeC,G,iFAAf,WAAoCP,GAApC,eAAAnB,EAAA,6DACQD,EAAO,CAAEoB,QADjB,SAEetB,EAAK,uBAAwBE,GAF5C,oF,+BAKe4B,G,iFAAf,WAAuBC,GAAvB,SAAA5B,EAAA,sEACeH,EAAK,oBAAD,OAAqB+B,GAAM,MAD9C,oF,+BAIeC,G,iFAAf,WAAyBD,GAAzB,SAAA5B,EAAA,sEACeH,EAAK,sBAAD,OAAuB+B,GAAM,MADhD,oF,+BAIeE,G,mGAAf,WACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAVF,eAAAxC,EAAA,6DAYQD,EAAO,CACXgC,QACAC,WACAC,QACAC,cACAC,YACAC,aACAC,WACAC,SAAUE,EAAeF,EAAW,KACpCC,YAAaC,EAAe,KAAOD,GArBvC,SAuBe1C,EAAK,+BAAgCE,GAvBpD,oF,+BA0Be0C,G,2FAAf,WACEtB,EACAuB,EACAC,EACAC,EACAC,EACAC,GANF,eAAA9C,EAAA,6DAQQD,EAAO,CAAEoB,OAAMuB,YAAWC,QAAOC,WAAUC,WAAUC,oBAR7D,SASejD,EAAK,sBAAuBE,GAT3C,oF,+BAYegD,G,mFAAf,WAAoCC,EAAyBC,GAA7D,eAAAjD,EAAA,6DACQD,EAAO,CAAEkD,QAAOD,mBADxB,SAEenD,EAAK,sBAAuBE,GAF3C,oF,+BAKemD,G,uFAAf,WACE/C,EACA8C,EACAE,EACAC,GAJF,eAAApD,EAAA,6DAMQD,EAAO,CAAEI,YAAW8C,QAAOE,cAAaC,oBANhD,SAOevD,EAAK,wBAAyBE,GAP7C,oF,+BAUesD,G,iFAAf,WAA4BlD,GAA5B,SAAAH,EAAA,sEACeH,EAAK,sBAAD,OAAuBM,GAAa,MADvD,oF,+BAIemD,G,iFAAf,WAA8BnD,GAA9B,SAAAH,EAAA,sEACeH,EAAK,wBAAD,OAAyBM,GAAa,MADzD,oF,+BAIeoD,G,iFAAf,WAAgCpD,GAAhC,SAAAH,EAAA,sEACeH,EAAK,0BAAD,OAA2BM,GAAa,MAD3D,oF,+BAIeqD,G,+FAAf,WACErC,EACAX,EACAiD,EACAC,EACAlC,EACAmC,EACAC,EACAC,GARF,iBAAA7D,EAAA,6DAUQ8D,EAAW,IAAIC,UACZC,OAAO,OAAQ7C,GACxB2C,EAASE,OAAO,cAAexD,GAC/BsD,EAASE,OAAO,QAAhB,UAA4BP,IAC5BK,EAASE,OAAO,uBAAhB,UAA2CN,IAC3CI,EAASE,OAAO,aAAcxC,GAC9BsC,EAASE,OAAO,aAAcL,GAC1BC,GACFE,EAASE,OAAO,UAAWJ,GAGvBK,EAAkBC,KAAKC,UAAUN,GACvCC,EAASE,OAAT,kBAAmCC,GAtBrC,UAwBepE,EAAK,eAAgBiE,GAxBpC,sF,+BA2BeM,G,iFAAf,WAA4BjD,GAA5B,eAAAnB,EAAA,6DACQD,EAAO,CAAEoB,QADjB,SAEetB,EAAK,wBAAyBE,GAF7C,oF,+BAKesE,G,mFAAf,WAA0BlD,EAAcmD,GAAxC,eAAAtE,EAAA,6DACQD,EAAO,CAAEoB,OAAMmD,YADvB,SAEezE,EAAK,sBAAuBE,GAF3C,oF,+BAKewE,G,6FAAf,WACEpD,EACAR,EACA6D,EACAC,EACAC,EACAC,EACAzC,GAPF,eAAAlC,EAAA,6DASQD,EAAO,CAAEoB,OAAMR,SAAQ6D,aAAYC,WAAUC,aAAYC,cAAazC,eAT9E,SAUerC,EAAK,qBAAsBE,GAV1C,oF,+BAae6E,G,2FAAf,WACEzD,EACAR,EACA6D,EACAC,EACAC,EACAxC,GANF,eAAAlC,EAAA,6DAQQD,EAAO,CAAEoB,OAAMR,SAAQ6D,aAAYC,WAAUC,aAAYxC,eARjE,SASerC,EAAK,wBAAyBE,GAT7C,oF,+BAYe8E,G,iFAAf,WAAyBjD,GAAzB,SAAA5B,EAAA,sEACeH,EAAK,mBAAD,OAAoB+B,GAAM,MAD7C,oF,+BChMekD,G,mFAAf,WAAgChF,EAAaC,GAA7C,SAAAC,EAAA,sEACgBC,IAAM8E,OAAOjF,EAAKC,GADlC,uCACyCA,MADzC,4C,+BAIeiF,G,iFAAf,WAA8B7E,GAA9B,SAAAH,EAAA,sEACe8E,GAAc,2BAAD,OAA4B3E,GAAa,MADrE,oF,+BAIe8E,G,iFAAf,WAAkC9E,GAAlC,SAAAH,EAAA,sEACe8E,GAAc,+BAAD,OAAgC3E,GAAa,MADzE,oF,+BAIe+E,G,iFAAf,WAAoCtD,GAApC,SAAA5B,EAAA,sEACe8E,GAAc,uBAAD,OAAwBlD,GAAM,MAD1D,oF,+BAIeuD,G,iFAAf,WAA8BvD,GAA9B,SAAA5B,EAAA,sEACe8E,GAAc,iBAAD,OAAkBlD,GAAM,MADpD,oF,+BAIewD,G,iFAAf,WAAoCxD,GAApC,SAAA5B,EAAA,sEACe8E,GAAc,uBAAD,OAAwBlD,GAAM,MAD1D,oF,+BAIeyD,G,iFAAf,WAA+BzD,GAA/B,SAAA5B,EAAA,sEACe8E,GAAc,sBAAD,OAAuBlD,GAAM,MADzD,oF,+BAIe0D,G,iFAAf,WAAoC1D,GAApC,SAAA5B,EAAA,sEACe8E,GAAc,uBAAD,OAAwBlD,GAAM,MAD1D,oF,+BAIe2D,G,iFAAf,WAAsC3D,GAAtC,SAAA5B,EAAA,sEACe8E,GAAc,yBAAD,OAA0BlD,GAAM,MAD5D,oF,+BAIe4D,G,iFAAf,WAA6B5D,GAA7B,SAAA5B,EAAA,sEACe8E,GAAc,gBAAD,OAAiBlD,GAAM,MADnD,oF,+BAIe6D,G,iFAAf,WAA4B7D,GAA5B,SAAA5B,EAAA,sEACe8E,GAAc,yBAAD,OAA0BlD,GAAM,MAD5D,oF,+BAIe8D,G,iFAAf,WAA0B9D,GAA1B,SAAA5B,EAAA,sEACe8E,GAAc,uBAAD,OAAwBlD,GAAM,MAD1D,oF,+BAIe+D,G,iFAAf,WAA4B/D,GAA5B,SAAA5B,EAAA,sEACe8E,GAAc,sBAAD,OAAuBlD,GAAM,MADzD,oF,+BAIegE,G,iFAAf,WAA+BhE,GAA/B,SAAA5B,EAAA,sEACe8E,GAAc,yBAAD,OAA0BlD,GAAM,MAD5D,oF,4CChDMiE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAASH,EAAMI,QAAQ,SAiEdC,GAtDiC,SAAAC,GAC9C,MAAiCC,mBAAiBD,EAAMjG,OAAxD,mBAAOmG,EAAP,KAAqBC,EAArB,KACMC,EAAUZ,KAEVa,EAAU,SAACC,GACf,IAAIC,EAAaD,EACbA,EAAW,GACbC,EAAa,GACJD,EAAW,IACpBC,EAAa,GAGXL,IAAiBK,IACfP,EAAMK,SACRL,EAAMK,QAAQE,EAAYP,EAAMzE,IAGlC4E,EAASI,KAcPC,EAAc,YAUpB,OACE,gBAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQR,KAAMe,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAA/F,UACE,eAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAtBd,WAEfZ,EADiBH,EAAe,IAqB9B,eAGA,eAACgB,GAAA,EAAD,CAAW3F,GAAG,UAAUqB,MAAOsD,EAAciB,SAd3B,SAACC,GACrB,IAAMC,EAAiBD,EAAME,OAAO1E,MAChC4D,EAAYe,KAAKF,GACnBhB,EAAQ1F,SAAS0G,IAEjBhB,EAAQ,IAS8DW,QAAQ,aAC9E,eAACD,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QArBd,WAEfZ,EADiBH,EAAe,IAoB9B,mBChCAV,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ4B,QAAS,OACTC,UAAW,IACXC,aAAchC,EAAMI,QAAQ,IAE9B6B,QAAS,CACPH,QAAS,OACTI,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERC,OAAQ,CACNlC,QAASH,EAAMI,QAAQ,IAEzBkC,YAAa,CACXC,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/BsC,MAAO,CACLC,SAAU,IACVC,UAAW,IACXC,OAAQ7C,EAAMI,QAAQ,IAExB0C,KAAM,CACJC,WAAY,KAEdC,SAAU,CACRD,WAAY,KAEdE,QAAS,CACPC,eAAgB,gBAElBC,OAAQ,CACNN,OAAQ7C,EAAMI,QAAQ,IAExBgD,UAAW,CACTC,WAAYrD,EAAMI,QAAQ,SAgOjBkD,GA3N6B,SAAAhD,GAAU,IAAD,IAC7CiD,EAAOC,eAAe1I,QAAQ,UACpC,EAA8ByF,oBAAS,GAAvC,mBAAOkD,EAAP,KAAgBC,EAAhB,KACA,EAAgCnD,mBAAQ,UAACD,EAAMqD,iBAAP,UAAxC,mBAAOA,EAAP,KAAkBC,EAAlB,KACMC,EAAS,mCACf,EAA8BtD,mBAAS,GAAD,OAAIsD,GAAJ,OAAavD,EAAMwD,QAAQC,SAAjE,mBAAOC,EAAP,KAAgBC,EAAhB,KACMvD,EAAUZ,KAEhBoE,qBAAU,WACR,IAAIC,GAAY,EACVC,EAAM,IAAIC,MAGhB,GAFAD,EAAIE,IAAJ,UAAaT,GAAb,OAAsBvD,EAAMwD,QAAQC,SAE/BR,GAAiB,UAATA,EAAkB,CAC7B,IAAMgB,EAAO1J,aAAaC,QAAQ,aAC9ByJ,IACFjE,EAAMwD,QAAQU,OAASD,EAAKE,SAASnE,EAAMwD,QAAQjI,IACnD6I,EAAUpE,EAAMwD,QAAQU,SAQ5B,OAJIL,IACFC,EAAIO,QAAU,kBAAMV,EAAW,GAAD,OAAIJ,EAAJ,gBAGzB,WACLM,GAAY,MAIhB,MAA4B5D,mBAASD,EAAMwD,QAAQU,QAAnD,mBAAOA,EAAP,KAAeE,EAAf,KACA,EAAoCnE,mBAASD,EAAMwD,QAAQc,YAA3D,mBAAOA,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,uCAAG,4BAAA7K,EAAA,0DACnBsJ,GAAiB,UAATA,EADW,gCAEEpJ,EAAUmG,EAAMwD,QAAQjI,GAAI,GAF9B,OAGJ,OAHI,SAInB6I,GAAU,GACNpE,EAAMyE,OACRzE,EAAMyE,SANW,4BAUfpK,EAAQE,aAAaC,QAAQ,cAVd,qBAafH,EAAM8J,SAASnE,EAAMwD,QAAQjI,IAbd,mDAgBnBhB,aAAamK,QAAQ,YAArB,UAAqCrK,EAArC,YAA8C2F,EAAMwD,QAAQjI,KAhBzC,wBAkBnBhB,aAAamK,QAAQ,YAAa1E,EAAMwD,QAAQjI,IAlB7B,4CAAH,qDAuBhBoJ,EAAoB,uCAAG,sBAAAhL,EAAA,0DACvBsJ,EADuB,gCAEFjJ,EAAcgG,EAAMwD,QAAQjI,IAF1B,OAGR,OAHQ,SAIvBgJ,GAAc,GACVvE,EAAM4E,UACR5E,EAAM4E,YANe,sBAUzBC,GAAQ,GAViB,2CAAH,qDAcpBC,EAAyB,uCAAG,sBAAAnL,EAAA,sEACTiF,GAAmBoB,EAAMwD,QAAQjI,IADxB,OAEf,IAFe,SAG9BgJ,GAAc,GACVvE,EAAM4E,UACR5E,EAAM4E,YALsB,2CAAH,qDAUzBG,EAAQ,UAAG/E,EAAM+E,gBAAT,aAAG,EAAgBC,K,UAAWhF,EAAMwD,QAAQjI,IAU1D,EAAwB0J,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KAEMM,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGV,OACE,gBAACQ,EAAA,EAAD,CACErE,QAAQ,WACRN,UAAWN,EAAQR,KACnB0F,aAAc,kBAAMlC,GAAW,IAC/BmC,aAAc,kBAAMnC,GAAW,IAJjC,UAME,eAACoC,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAACW,EAAA,EAAD,CAAOD,QAASV,GAAaY,SAAS,OAAtC,4WAIF,gBAACtF,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAME,WAAW,SAASD,eAAe,SAAnE,UACGb,EAAMgG,WACL,eAACvF,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASqF,MAAI,EAACnF,WAAW,SAASD,eAAe,SAASqF,GAAI,GAAIC,GAAI,EAAhG,SACE,eAACC,EAAA,EAAD,CAAUC,MAAM,UAAUlF,SAtCnB,WACXnB,EAAMgG,WACRhG,EAAMgG,UAAUhG,EAAMwD,SAAUH,GAGlCC,GAAYD,IAiC0CiD,QAASjD,MAG3D,gBAAC5C,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAhG,UACE,sBAAKzF,UAAWN,EAAQgC,MAAO4B,IAAKN,EAAS6C,IAAKvG,EAAMwD,QAAQ1I,OAChE,eAAC0L,EAAA,EAAD,CAAYxF,QAAQ,QAApB,SAA6BmC,GAAWnD,EAAMwD,QAAQlG,gBAExD,gBAACmD,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACC,UAAU,SAA9C,UACE,eAAC6F,EAAA,EAAD,CAAa/F,UAAWN,EAAQyB,QAAhC,SACE,gBAACpB,EAAA,EAAD,WACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAASC,UAAU,KAAK3F,QAAQ,KAAlD,SACE,eAAC4F,EAAA,EAAD,CAAMC,KAAI,mBAAc7G,EAAMwD,QAAQjI,IAAM8K,MAAM,UAAlD,SACGrG,EAAMwD,QAAQ1I,SAGlBkF,EAAMwD,QAAQnG,sBAAwB2C,EAAMwD,QAAQnG,qBAAuB2C,EAAMwD,QAAQpG,MACxF,gBAAC,IAAM0J,SAAP,WACE,gBAACN,EAAA,EAAD,CACEE,MAAM,SACN1F,QAAQ,KACRqF,MAAM,gBACN3F,UAAS,UAAKN,EAAQuC,QAAb,YAAwBvC,EAAQsC,UAJ3C,UAMG1C,EAAMwD,QAAQnG,qBANjB,YAQA,gBAACmJ,EAAA,EAAD,CAAYE,MAAM,SAASL,MAAM,UAAUM,UAAU,KAAK3F,QAAQ,KAAKN,UAAWN,EAAQoC,KAA1F,UACGxC,EAAMwD,QAAQpG,MADjB,eAKF,gBAACoJ,EAAA,EAAD,CAAYE,MAAM,SAASC,UAAU,KAAK3F,QAAQ,KAAKN,UAAWN,EAAQoC,KAA1E,UACGxC,EAAMwD,QAAQpG,MADjB,iBAMN,gBAACqD,EAAA,EAAD,CACEE,WAAS,EACTsF,MAAI,EACJC,GAAI,GACJrF,eAAe,SACfkG,aAAa,SACbnG,UAAU,MACVF,UAAWN,EAAQyC,OAPrB,UASE,eAACmE,EAAA,EAAD,CAAQlM,KAAK,YAAY8B,MAAOoD,EAAMwD,QAAQtJ,KAAM+M,UAAQ,IAC5D,eAACT,EAAA,EAAD,CAAY9F,UAAS,UAAKN,EAAQoC,KAAb,YAAqBpC,EAAQ0C,WAAlD,SAAgE9C,EAAMwD,QAAQtJ,aAGlF,gBAACuG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASmF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAA7F,WACInG,EAAMkH,UACN,eAACzG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACG7B,EACC,eAAC6C,EAAA,EAAD,CACEC,aAAW,YACXf,MAAM,UACN3F,UAAWN,EAAQ2B,OACnBd,QAAS6D,EAJX,SAME,eAAC,IAAD,MAGF,eAACqC,EAAA,EAAD,CAAYC,aAAW,YAAY1G,UAAWN,EAAQ2B,OAAQd,QAAS0D,EAAvE,SACE,eAAC,IAAD,SAKN3E,EAAMqH,SACN,eAAC5G,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACGjC,EACC,eAACnD,EAAA,EAAD,CAAQL,UAAWN,EAAQ2B,OAAQf,QAAQ,YAAYqF,MAAM,UAAUQ,KAAK,QAA5E,+DAIA,eAAC9F,EAAA,EAAD,CAAQL,UAAWN,EAAQ2B,OAAQf,QAAQ,WAAWC,QAASuD,EAA/D,oDAMLxE,EAAMsH,aACL,eAAC7G,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,GAAD,CAAe5K,GAAIyE,EAAMwD,QAAQjI,GAAIxB,MAAOiG,EAAMjG,MAAiBsG,QAASL,EAAMK,YAGrFL,EAAM+E,UACL,eAACtE,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACgB,EAAA,EAAD,CAAYC,aAAW,YAAY1G,UAAWN,EAAQ4B,YAAaf,QAAS8D,EAA5E,SACE,eAAC,IAAD,kB,qIC1RVwC,GACO,EADPA,GAEM,EAFNA,GAGU,GAGVC,GAAa,uCAAG,WAAOC,GAAP,SAAA9N,EAAA,sEACbC,IAAMJ,KAAK,0BAA2B,CAAEiO,MAAOA,IADlC,uCAC4C/N,MAD5C,2CAAH,sDAGbgO,GAAY,uCAAG,WAAOC,GAAP,SAAAhO,EAAA,sEACZC,IAAMJ,KAAK,qBAAsBmO,GADrB,uCACiCjO,MADjC,2CAAH,sDAGZkO,GAAmB,uCAAG,WAAOC,GAAP,SAAAlO,EAAA,sEACnBC,IAAMJ,KAAK,wBAAyBqO,GADjB,uCACoCnO,MADpC,2CAAH,sDAGnBoO,GAAmB,uCAAG,WAAOD,GAAP,SAAAlO,EAAA,sEACnBC,IAAMJ,KAAK,iCAAkCqO,GAD1B,uCAC6CnO,MAD7C,2CAAH,sDAGnBqO,GAAO,uCAAG,sBAAApO,EAAA,sEAAoCC,IAAMoO,IAAI,qBAA9C,uCAAoEtO,MAApE,2CAAH,qDAEPuO,GAAW,uCAAG,sBAAAtO,EAAA,sEAA0CC,IAAMoO,IAAI,mCAApD,uCAAwFtO,MAAxF,2CAAH,qDAEXwO,GAAM,uCAAG,sBAAAvO,EAAA,sEAAoCC,IAAMJ,KAAK,uBAA/C,uCAAuEE,MAAvE,2CAAH,qDCvBGyO,GAND,CACZC,MAAO,QACPC,MAAO,QACPC,SAAU,Y,8GCgBGC,G,iFAAf,WAA0B9O,GAA1B,SAAAE,EAAA,sEACgBC,IAAMoO,IAAIvO,GAD1B,uCACgCC,MADhC,4C,+BAIe8O,G,uFAAf,WAA2BC,EAAqBC,EAAqBC,EAAkBvL,GAAvF,qBAAAzD,EAAA,6DACQiP,EAAsBC,GAAgBF,GACtCG,EAAS,IAAIC,gBAAgBC,SAASC,QACtCA,EAASH,EAAOd,IAAI,UACtBvO,EAJN,kCAIuCgP,EAJvC,wBAIkEC,EAJlE,wBAI6FE,EAAWM,KAJxG,2BAI+HN,EAAWO,QAJ1I,qBAI8J/L,EAAM,GAJpK,qBAImLA,EAAM,IACnL6L,IACFxP,GAAG,kBAAewP,IANtB,SASeV,GAAW9O,GAT1B,oF,+BAYe2P,G,uFAAf,WAAmCX,EAAqBC,EAAqBC,EAAkBM,GAA/F,iBAAAtP,EAAA,6DACQiP,EAAsBC,GAAgBF,GACtClP,EAFR,kCAEyCgP,EAFzC,wBAEoEC,EAFpE,wBAE+FE,EAAWM,KAF1G,2BAEiIN,EAAWO,QAF5I,mBAE8JF,GAF9J,SAGeV,GAAW9O,GAH1B,oF,+BAMe4P,K,8EAAf,sBAAA1P,EAAA,+FAEe4O,GAFf,+G,+BAKee,K,8EAAf,8BAAA3P,EAAA,6DACQU,EAAQE,aAAaC,QAAQ,aAC7Bf,EAFR,sDAE6DY,GAF7D,SAGekO,GAAW9O,GAH1B,oF,+BAMe8P,K,8EAAf,sBAAA5P,EAAA,mGAEe4O,GAFf,mH,+BAKeiB,G,iFAAf,WAA6BC,GAA7B,SAAA9P,EAAA,sEACgB4O,GAAW,iBAAD,OAAkBkB,IAD5C,oF,+BAIeC,K,8EAAf,sBAAA/P,EAAA,sEACgB4O,GAAW,kBAD3B,oF,+BAIeoB,K,8EAAf,sBAAAhQ,EAAA,sEACgB4O,GAAW,uBAD3B,oF,+BAIeqB,G,iFAAf,WAA0B9P,GAA1B,SAAAH,EAAA,sEACe4O,GAAW,eAAD,OAAgBzO,IADzC,oF,+BAIe+P,G,iFAAf,WAA0BtO,GAA1B,eAAA5B,EAAA,6DACQW,EAASC,aAAaC,QAAQ,UADtC,SAEgB+N,GAAW,gBAAD,OAAiBhN,EAAjB,mBAA8BjB,IAFxD,oF,+BAKewP,G,iFAAf,WAA6BvO,GAA7B,SAAA5B,EAAA,sEACgB4O,GAAW,2BAAD,OAA4BhN,IADtD,oF,+BAIewO,K,8EAAf,sBAAApQ,EAAA,sEACgB4O,GAAW,0BAD3B,oF,+BAIeyB,K,8EAAf,sBAAArQ,EAAA,sEACgB4O,GAAW,6BAD3B,oF,+BAIe0B,G,iFAAf,WAA+B1O,GAA/B,SAAA5B,EAAA,sEACgB4O,GAAW,oBAAD,OAAqBhN,IAD/C,oF,+BAIe2O,G,iFAAf,WAA+B3O,GAA/B,SAAA5B,EAAA,sEACgB4O,GAAW,yBAAD,OAA0BhN,IADpD,oF,+BAIe4O,G,2FAAf,WACEC,EACA3B,EACAC,EACAC,EACAvL,EACAiN,GANF,yBAAA1Q,EAAA,sDAQQiP,EAAsBC,GAAgBF,GACxClP,EATN,6BASkC2Q,EATlC,uBAS6D3B,EAT7D,wBASwFC,EATxF,wBASmHE,EAAWM,KAT9H,2BASqJN,EAAWO,QAThK,qBASoL/L,EAAM,GAT1L,qBASyMA,EAAM,IAT/M,eAWuBiN,GAXvB,IAWE,4BAAWC,EAAmB,SACjBhO,OACLgO,EAAO/N,UAAY+N,EAAO9N,YACvB8N,EAAO/N,WACV+N,EAAO/N,SAAW,KAEf+N,EAAO9N,WACV8N,EAAO9N,SAAW,KAEpB/C,GAAG,WAAQ6Q,EAAO/O,GAAf,YAAqB+O,EAAO/N,SAA5B,YAAwC+N,EAAO9N,WAGhD8N,EAAOC,SAAWD,EAAOC,QAAQC,OAAS,IAC5C/Q,GAAG,WAAQ6Q,EAAO/O,GAAf,sBAAqB+O,EAAOC,eAA5B,aAAqB,EAAgBE,KAAK,OAxBrD,8CA6BelC,GAAW9O,GA7B1B,oF,sBAgCA,SAASoP,GAAgBF,GACvB,OAAIA,EAASxE,SAAS,WACb,CAAE+E,KAAMP,EAAS+B,MAAM,KAAK,GAAIvB,SAAS,GAEzC,CAAED,KAAMP,EAAS+B,MAAM,KAAK,GAAIvB,SAAS,G,SAIrCwB,K,8EAAf,sBAAAhR,EAAA,sEACgB4O,GAAW,iBAD3B,oF,+BAIeqC,G,iFAAf,WAAkC3B,GAAlC,SAAAtP,EAAA,sEACgB4O,GAAW,+BAAD,OAAgCU,IAD1D,oF,+BAIe4B,G,iFAAf,WAA4C5B,GAA5C,SAAAtP,EAAA,sEACgB4O,GAAW,sCAAD,OAAuCU,IADjE,oF,+BAIe6B,G,iFAAf,WAAiCvP,GAAjC,SAAA5B,EAAA,sEACgB4O,GAAW,uBAAD,OAAwBhN,IADlD,oF,+BAIewP,G,iFAAf,WAAsCxP,GAAtC,SAAA5B,EAAA,sEACgB4O,GAAW,iCAAD,OAAkChN,IAD5D,oF,+BAIeyP,K,8EAAf,sBAAArR,EAAA,sEACgB4O,GAAW,uBAD3B,oF,+BAIe0C,G,iFAAf,WAAiC1P,GAAjC,SAAA5B,EAAA,sEACgB4O,GAAW,uBAAD,OAAwBhN,IADlD,oF,+BAIe2P,K,8EAAf,sBAAAvR,EAAA,sEACgB4O,GAAW,sBAD3B,oF,+BAIe4C,K,8EAAf,sBAAAxR,EAAA,sEACgB4O,GAAW,4BAD3B,oF,+BAIe6C,G,iFAAf,WAA4B7P,GAA5B,SAAA5B,EAAA,sEACgB4O,GAAW,sBAAD,OAAuBhN,IADjD,oF,+BAIe8P,G,iFAAf,WAA0B9P,GAA1B,SAAA5B,EAAA,sEACgB4O,GAAW,uBAAD,OAAwBhN,IADlD,oF,+BAIe+P,G,iFAAf,WAA6B/P,GAA7B,SAAA5B,EAAA,sEACgB4O,GAAW,+BAAD,OAAgChN,IAD1D,oF,+BAIegQ,K,8EAAf,sBAAA5R,EAAA,sEACe4O,GAAW,2BAD1B,oF,+BAIeiD,G,iFAAf,WAAyBjQ,GAAzB,SAAA5B,EAAA,sEACe4O,GAAW,gBAAD,OAAiBhN,IAD1C,oF,+BAQekQ,G,iFAAf,WAAiClQ,GAAjC,SAAA5B,EAAA,sEACe4O,GAAW,uBAAD,OAAwBhN,IADjD,oF,+BAIemQ,K,8EAAf,sBAAA/R,EAAA,sEACe4O,GAAW,yBAD1B,oF,+BAIeoD,G,iFAAf,WAAyBpQ,GAAzB,SAAA5B,EAAA,sEACe4O,GAAW,yBAAD,OAA0BhN,IADnD,oF,+BAIeqQ,G,iFAAf,WAAoCrQ,GAApC,SAAA5B,EAAA,sEACe4O,GAAW,iCAAD,OAAkChN,IAD3D,oF,+BAIesQ,G,iFAAf,WAAuBtQ,GAAvB,SAAA5B,EAAA,sEACe4O,GAAW,uBAAD,OAAwBhN,IADjD,oF,+BAIeuQ,K,8EAAf,sBAAAnS,EAAA,sEACe4O,GAAW,wBAD1B,oF,+BAIewD,K,8EAAf,sBAAApS,EAAA,sEACe4O,GAAW,2BAD1B,oF,+BAIeyD,G,iFAAf,WAAyBzQ,GAAzB,SAAA5B,EAAA,sEACe4O,GAAW,sBAAD,OAAuBhN,IADhD,oF,+BAIe0Q,G,iFAAf,WAA4B1Q,GAA5B,SAAA5B,EAAA,sEACe4O,GAAW,yBAAD,OAA0BhN,IADnD,oF,+BAIe2Q,G,mFAAf,WAAiChD,EAAciD,GAA/C,SAAAxS,EAAA,sEACgB4O,GAAW,+BAAD,OAAgCW,EAAhC,qBAAiDiD,IAD3E,oF,+BAIeC,G,iFAAf,WAA6BlD,GAA7B,SAAAvP,EAAA,sEACgB4O,GAAW,8BAAD,OAA+BW,IADzD,oF,+BAIemD,G,iFAAf,WAA6BnD,GAA7B,SAAAvP,EAAA,sEACgB4O,GAAW,8BAAD,OAA+BW,IADzD,oF,+BAIeoD,K,8EAAf,sBAAA3S,EAAA,sEACe4O,GAAW,2BAD1B,oF,+BAIegE,K,8EAAf,4BAAA5S,EAAA,6DACQW,EAASC,aAAaC,QAAQ,UADtC,SAEe+N,GAAW,uBAAD,OAAwBjO,IAFjD,oF,+BAKekS,G,mFAAf,WAA2BC,EAAgBC,GAA3C,SAAA/S,EAAA,sEACe4O,GAAW,0CAAD,OACqBkE,EAASE,cAD9B,mBACsDD,EAAOC,gBAFtF,oF,+BAMeC,G,iFAAf,WAA+B1D,GAA/B,SAAAvP,EAAA,sEACgB4O,GAAW,gCAAD,OAAiCW,IAD3D,oF,sBAIeX,IC1PT/I,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ4B,QAAS,QAEXqL,MAAO,CACLC,YAAapN,EAAMI,QAAQ,IAE7BiN,KAAM,CACJlN,QAASH,EAAMI,QAAQ,IAEzBmG,KAAM,CACJ+G,aAActN,EAAMI,QAAQ,GAC5BmC,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/BmN,YAAY,gBACTvN,EAAMwN,YAAYC,KAAK,MAAQ,CAC9B3L,QAAS,SAGb4L,YAAY,gBACT1N,EAAMwN,YAAYG,GAAG,MAAQ,CAC5B7L,QAAS,cA4IF8L,GAtIoB,WACjC,IAAMlN,EAAUZ,KAEhB,EAAwByF,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0CI,IAAMhF,SAA2B,IAA3E,mBAAOsN,EAAP,KAAsBC,EAAtB,KAEMC,EAAYxI,IAAMyI,OAAuB,MAEzCC,EAAe,WACnB9I,GAAQ,SAAA+I,GAAQ,OAAKA,MAmBvB,IAAMA,EAAW3I,IAAMyI,OAAOxI,GAwB9B,OAvBAD,IAAMrB,WAAU,YACW,IAArBgK,EAASC,UAA6B,IAAT3I,GAAwC,OAAtBuI,EAAUI,SAC3DJ,EAAUI,QAAQC,QAGpBF,EAASC,QAAU3I,IAClB,CAACA,IAEJD,IAAMrB,WAAU,WACd,IAAIC,GAAY,EAShB,OARe,uCAAG,4BAAAlK,EAAA,sEACEgQ,KADF,OACVoE,EADU,OAEZlK,GACF2J,EAAiBO,GAHH,2CAAH,oDAMfC,GAEO,WACLnK,GAAY,KAEb,IAGD,uBAAKnD,UAAWN,EAAQR,KAAxB,UACE,uBAAKqO,IAAKR,EAAV,UACGvI,EACC,eAACnE,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACL7H,MAAM,YACN8H,gBAAejJ,EAAO,sBAAmBkJ,EACzCC,gBAAc,OACd3N,UAAWN,EAAQ6M,YACnBhM,QAAS0M,EACTW,QAAS,eAAC,KAAD,IARX,oEAaA,eAACvN,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACL7H,MAAM,YACN8H,gBAAejJ,EAAO,sBAAmBkJ,EACzCC,gBAAc,OACdpN,QAAS0M,EACTjN,UAAWN,EAAQ6M,YACnBqB,QAAS,eAAC,KAAD,IARX,oEAaDpJ,EACC,eAACnE,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,SACL7H,MAAM,YACN8H,gBAAejJ,EAAO,sBAAmBkJ,EACzCC,gBAAc,OACdpN,QAAS0M,EACTjN,UAAWN,EAAQgN,YAPrB,SASE,eAAC,KAAD,MAGF,eAACrM,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,SACL7H,MAAM,YACN8H,gBAAejJ,EAAO,sBAAmBkJ,EACzCC,gBAAc,OACdpN,QAAS0M,EACTjN,UAAWN,EAAQgN,YAPrB,SASE,eAAC,KAAD,SAIN,eAACmB,GAAA,EAAD,CAAQrJ,KAAMA,EAAMsJ,SAAUf,EAAUI,QAAS5K,UAAMmL,EAAWK,YAAU,EAACC,eAAa,EAA1F,SACE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBC,YAlGP,SAACzN,GACfqM,EAAUI,SAAWJ,EAAUI,QAAQiB,SAAS1N,EAAME,SAI1DuD,GAAQ,IA6FF,SACE,eAACkK,GAAA,EAAD,CAAUC,cAAe9J,EAAM3J,GAAG,iBAAiB0T,UA3F7D,SAA2B7N,GACR,QACbA,EAAM8N,MACR9N,EAAM+N,iBACNtK,GAAQ,KAuF+EnE,UAAWN,EAAQ2M,KAApG,SACGQ,aAAyB6B,OACxB7B,EAAc8B,KAAI,SAACC,EAAaC,GAAd,OAChB,eAACC,GAAA,EAAD,CACE9O,UAAWN,EAAQ6F,KAEnBhF,QAAS,WACPwO,SAASzG,SAASnC,KAAlB,kBAAoCyI,EAAYxU,OAJpD,SAOE,eAAC0L,EAAA,EAAD,CAAYxF,QAAQ,KAAK2F,UAAU,KAAnC,SACG2I,EAAYxU,QANVyU,kB,qGClIVG,GAnBiC,SAAA1P,GAC9C,IAAMmF,EAAc,WAClBnF,EAAM6E,SAAQ,IAGhB,OACE,eAACW,EAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAYT,KAAI,OAAElF,QAAF,IAAEA,OAAF,EAAEA,EAAOkF,KAAMW,QAASV,EAA/F,SACE,gBAAC,KAAD,CAAUU,QAASV,EAAaY,SAAS,UAAzC,UACE,eAAC4J,GAAA,EAAD,iBAAa3P,QAAb,IAAaA,OAAb,EAAaA,EAAO4P,UACpB,qCACG5P,QADH,IACGA,OADH,EACGA,EAAO6P,OAAOR,KAAI,SAACS,EAAIZ,GAAL,OACjB,8BAAeY,GAANZ,cCVf1P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNC,UAAWtQ,EAAMI,QAAQ,SAuJhBmQ,GAlJa,WAC1B,IAAM7P,EAAUZ,KAEhB,EAAkCyF,IAAMhF,SAAgB,CAAEvE,MAAO,GAAIC,SAAU,GAAIuU,YAAY,IAA/F,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA4BnL,IAAMhF,SAAmB,IAArD,mBAAO4P,EAAP,KAAeQ,EAAf,KACA,EAAwBpL,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAsBMC,EAAwB,uCAAG,WAAOC,GAAP,SAAA7W,EAAA,sDAC3B6W,IAAY,OACQA,QADR,IACQA,OADR,EACQA,EAAoCC,oBAExDC,EAAiBF,GAJU,2CAAH,sDASxBG,EAAkB,uCAAG,sBAAAhX,EAAA,kEACzBiX,EADyB,SACRlJ,GAAayI,GADL,6EAAH,qDAIlBS,EAAU,uCAAG,WAAOC,GAAP,SAAAlX,EAAA,2DACTkX,EAASC,KADA,cAEVvJ,GAFU,SAKVA,GALU,wBAGbwJ,OAAO/H,SAASgI,QAAQ,KAHX,kCAMbV,EAAWO,EAASjB,SACpBS,EAAUQ,EAAShB,QACnBhL,GAAQ,GARK,+DAAH,sDAaV6L,EAAgB,uCAAG,WAAOF,GAAP,mBAAA7W,EAAA,6DACjB4B,EADiB,OACZiV,QADY,IACZA,GADY,UACZA,EAAYC,yBADA,aACZ,EAA+BQ,SADnB,SAEIzJ,GAAcjM,GAFlB,OAEjB2V,EAFiB,YAGfA,EAAaJ,KAHE,cAIhBvJ,GAJgB,SAOhBA,GAPgB,SAUhBA,GAVgB,0BAKnB4J,EAA2B5V,EAAIiV,GALZ,mCAQnBO,OAAO/H,SAASgI,QAAQ,KARL,oCAWnBV,EAAWY,EAAatB,SACxBS,EAAUa,EAAarB,QACvBhL,GAAQ,GAbW,iEAAH,sDAkBhBsM,EAA6B,SAAC5V,EAAYiV,GAC9C,IAAMY,EAAUZ,EAAWa,kBACrBC,EAAoB,CACxB5V,MAAO,GACPC,SAAU,GACVC,MAAOwV,EAAQG,WACfzV,UAAWsV,EAAQI,eACnBzV,WAAYqV,EAAQK,gBACpBhK,MAAOlM,GAGTmW,QAAQC,UAAUL,EAAS,GAAI,iBAC/BP,OAAO/H,SAASgI,QAAQ,kBAG1B,OACE,gBAACvQ,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOuT,EAAUzU,MACjByF,SAjFoB,SAACC,GACzBgP,EAAa,CACX1U,MAAO0F,EAAME,OAAO1E,MACpBjB,SAAUwU,EAAUxU,SACpBuU,WAAYC,EAAUD,cA8EpB0B,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnB7G,KAAK,WACLtM,MAAOuT,EAAUxU,SACjBwF,SAlFuB,SAACC,GAC5BgP,EAAa,CACX1U,MAAOyU,EAAUzU,MACjBC,SAAUyF,EAAME,OAAO1E,MACvBsT,WAAYC,EAAUD,cA+EpB0B,MAAM,uCACN5Q,QAAQ,aAEV,eAAC6Q,GAAA,EAAD,CACEC,QACE,eAAC1L,EAAA,EAAD,CACEE,QAAS6J,EAAUD,WACnB/O,SAtGqB,WAC7BiP,EAAa,CAAE1U,MAAOyU,EAAUzU,MAAOC,SAAUwU,EAAUxU,SAAUuU,YAAaC,EAAUD,cAsGpFpV,KAAK,aACLuL,MAAM,YAGVuL,MAAM,kFACNlR,UAAWN,EAAQ2P,SAErB,eAACtP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2P,OACnB1J,MAAM,UACNrF,QAAQ,YACRC,QAAS0P,EALX,8CAUF,eAAClQ,EAAA,EAAD,CAAMC,UAAWN,EAAQ2P,OAAQpP,WAAS,EAACE,eAAe,SAA1D,SACE,eAAC2F,EAAA,EAAD,CAAYG,UAAU,MAAtB,gGAEF,eAAClG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAAC,KAAD,CACEkR,SAAU,4EACVC,WAAW,uEACXC,UAAW1B,EACX2B,aAAc,yBAGlB,eAAC,GAAD,CAAetC,QAASA,EAASC,OAAQA,EAAQ3K,KAAMA,EAAML,QAASA,QClJtErF,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwS,QAAS,CACP5P,OAAQ7C,EAAMI,QAAQ,SA6CbsS,GAxCc,WAC3B,IAAMhS,EAAUZ,KAChB,EAAwByF,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KAUA,OACE,iCACE,eAAC9D,EAAA,EAAD,CAAQL,UAAWN,EAAQ+R,QAAS9L,MAAM,YAAYrF,QAAQ,WAAWC,QAVrD,WACtB4D,GAAQ,IASN,4CAGA,gBAACwN,GAAA,EAAD,CACEnN,KAAMA,EACNW,QAXc,WAClBhB,GAAQ,IAWJyN,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,eAACC,GAAA,EAAD,CAAajX,GAAG,qBAAhB,4CACA,eAACkX,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBnX,GAAG,2BAAtB,SACE,eAAC,GAAD,QAGJ,eAACoX,GAAA,EAAD,UACE,gBAAClS,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,UACE,eAAC2F,EAAA,EAAD,sGACA,eAACI,EAAA,EAAD,CAAMC,KAAK,gBAAX,wI,6BCLG+L,GA1C2B,SAAA5S,GAAU,IAAD,MAwB3BlF,EAtBhB+X,GAAU,UAAA7S,EAAM8S,gBAAN,mBAAgBC,cAAhB,eAAwB5O,SAAS,SAAjC,UACZnE,EAAM8S,gBADM,aACZ,EAAgBC,OADJ,UADD,iCACC,OAEA/S,EAAM8S,SAASC,QAEzBC,EAAgB,SAACC,GACrB,IACIC,EADAC,EAAO,EAGX,IAAKD,EAAI,EAAGA,EAAID,EAAOzI,OAAQ0I,GAAK,EAClCC,EAAOF,EAAOG,WAAWF,KAAOC,GAAQ,GAAKA,GAG/C,IAAI9M,EAAQ,IAEZ,IAAK6M,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzB7M,GAAS,aADM8M,GAAa,EAAJD,EAAU,KACdG,SAAS,KAAMC,QAAQ,GAG7C,OAAOjN,GAUT,OACE,eAAC,IAAMS,SAAP,UACG9G,EAAM8S,WACJ9S,EAAM8S,SAASC,OACd,eAACQ,GAAA,EAAD,CAAQhN,IAAKvG,EAAM8S,SAASU,SAAUxP,IAAK6O,IAE3C,eAACU,GAAA,EAAD,iBAbczY,EAaWkF,EAAM8S,SAASU,SAbR,CACtCC,GAAI,CACFC,QAASV,EAAclY,IAEzB6Y,SAAS,GAAD,OAAK7Y,EAAK,YCtBhB0E,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ4B,QAAS,QAEXqL,MAAO,CACLC,YAAapN,EAAMI,QAAQ,IAE7BiN,KAAM,CACJlN,QAASH,EAAMI,QAAQ,IAEzBmG,KAAM,CACJ+G,aAActN,EAAMI,QAAQ,GAC5BmC,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,SAwIpB8T,GAnIiB,WAC9B,IAAMxT,EAAUZ,KAEhB,EAAgCS,qBAAhC,mBAAO6S,EAAP,KAAiBe,EAAjB,KACA,EAAwB5O,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACM4I,EAAYxI,IAAMyI,OAA0B,MAM5CE,EAAWF,iBAAOxI,GACxBtB,qBAAU,YACiB,IAArBgK,EAASC,UAA6B,IAAT3I,GAAwC,OAAtBuI,EAAUI,SAC3DJ,EAAUI,QAAQC,QAGpBF,EAASC,QAAU3I,IAClB,CAACA,IAEJtB,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAiQ,EAAmBjQ,GACZ,WACLA,GAAY,KAEb,IAkBH,IAAMiQ,EAAkB,uCAAG,WAAOjQ,GAAP,eAAAlK,EAAA,sEACKsO,KADL,OACnB8L,EADmB,OAGrBlQ,GACFgQ,EAAYE,GAJW,2CAAH,sDAQlBC,EAAO,uCAAG,sBAAAra,EAAA,sEACRuO,KADQ,OAEdhF,eAAe+Q,WAAW,UAC1BxE,SAASzG,SAASnC,KAAlB,IAHc,2CAAH,qDAMb,OACE,eAAC,IAAMC,SAAP,UACGgM,GACC,gBAAC,IAAMhM,SAAP,WACE,eAAC/F,EAAA,EAAD,CAAQE,QAvDK,WACnB4D,GAAQ,SAAA+I,GAAQ,OAAKA,MAsDgBK,IAAKR,EAApC,SACE,eAAC,GAAD,CAAYqF,SAAU,CAAEU,SAAUV,EAASU,SAAUT,OAAQD,EAASC,OAAQ9P,KAAM6P,EAAS7P,UAE/F,eAACsL,GAAA,EAAD,CAAQrJ,KAAMA,EAAMsJ,SAAUf,EAAUI,QAAS5K,UAAMmL,EAAWK,YAAU,EAACC,eAAa,EAA1F,SACE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBC,YAvCX,SAACzN,GACfqM,EAAUI,SAAWJ,EAAUI,QAAQiB,SAAS1N,EAAME,SAI1DuD,GAAQ,IAkCE,SACE,gBAACkK,GAAA,EAAD,CACEC,cAAe9J,EACf3J,GAAG,iBACH0T,UAnChB,SAA2B7N,GACR,QACbA,EAAM8N,MACR9N,EAAM+N,iBACNtK,GAAQ,KAgCInE,UAAWN,EAAQ2M,KAJrB,UAME,eAACvG,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKqF,MAAM,UAAUM,UAAU,KAAlE,SACGmM,EAASU,WAEZ,eAAChN,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,YAAY2F,UAAU,KAAzD,mBACMmM,EAAShX,UADf,YAC4BgX,EAAS/W,cAErC,eAACmY,GAAA,EAAD,IACA,eAAC1E,GAAA,EAAD,CACE9O,UAAWN,EAAQ6F,KACnBhF,QAAS,WACPwO,SAASzG,SAASnC,KAAlB,cAHJ,SAME,eAACL,EAAA,EAAD,CAAYxF,QAAQ,KAApB,wEAEkB,UAAlB8R,EAAS7P,MAAsC,YAAlB6P,EAAS7P,OACtC,eAACuM,GAAA,EAAD,CACE9O,UAAWN,EAAQ6F,KACnBhF,QAAS,WACPwO,SAASzG,SAASnC,KAAlB,UAHJ,SAME,eAACL,EAAA,EAAD,CAAYxF,QAAQ,KAApB,uHAGgB,kBAAlB8R,EAAS7P,MAA8C,YAAlB6P,EAAS7P,MAAwC,UAAlB6P,EAAS7P,OAC7E,gBAAC,IAAM6D,SAAP,WACE,eAAC0I,GAAA,EAAD,CACE9O,UAAWN,EAAQ6F,KACnBhF,QAAS,WACPwO,SAASzG,SAASnC,KAAlB,iBAHJ,SAME,eAACL,EAAA,EAAD,CAAYxF,QAAQ,KAApB,oDAEF,eAACwO,GAAA,EAAD,CACE9O,UAAWN,EAAQ6F,KACnBhF,QAAS,WACPwO,SAASzG,SAASnC,KAAlB,kBAHJ,SAME,eAACL,EAAA,EAAD,CAAYxF,QAAQ,KAApB,6DAIN,eAACwO,GAAA,EAAD,CAAU9O,UAAWN,EAAQ6F,KAAMhF,QAAS+S,EAA5C,SACE,eAACxN,EAAA,EAAD,CAAYxF,QAAQ,KAApB,6D,uECvIdxB,GAAYC,aAAW,kBAC3BE,YAAa,CACXwU,IAAK,CACHC,gBAAiB,cA4HRC,GAvHkB,WAAO,IAAD,EAC/BjU,EAAUZ,KAEhB,EAAwBS,mBAAsB,MAA9C,mBAAOqU,EAAP,KAAaC,EAAb,KACA,EAA8BtU,mBAAmB,IAAjD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAAwBxU,oBAAS,GAAjC,mBAAOiF,EAAP,KAAaL,EAAb,KAEAjB,qBAAU,WACR,IAAIC,GAAY,EAGhB,OAFAgI,EAAQhI,GACR6Q,EAAe7Q,GACR,WACLA,GAAY,KAEb,IAEH,IAAMgI,EAAO,uCAAG,WAAOhI,GAAP,iBAAAlK,EAAA,sDACRgb,EAAWpa,aAAaC,QAAQ,YAChCF,EAASC,aAAaC,QAAQ,UAChCqJ,IACE8Q,GAAYra,EACdia,EAAQ,CAAEhZ,GAAIZ,SAASL,GAASQ,KAAM6Z,IAEtC9P,GAAQ,IAPE,2CAAH,sDAYP6P,EAAc,uCAAG,WAAO7Q,GAAP,eAAAlK,EAAA,sEACHoQ,KADG,OACfgE,EADe,OAEjBlK,GACF4Q,EAAW1G,GAHQ,2CAAH,sDAwBd6G,EAAc,SAACxT,GACnB,IAAM7F,EAAKZ,SAASyG,EAAMyT,cAActZ,IAClCuZ,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAOF,MAAK,SAAAG,GAAC,OAAIA,EAAE3Z,KAAOA,QACpD4Z,EAAG,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAKG,OAAOF,MAAK,SAAAG,GAAC,OAAIA,EAAE3Z,KAAOA,KACvC4Z,GACFC,EAASD,IAIPC,EAAW,SAACD,GAChB5a,aAAamK,QAAQ,WAAYyQ,EAAIra,MACrCP,aAAamK,QAAQ,SAAUyQ,EAAI5Z,GAAG8X,YACtCkB,EAAQY,GACRtQ,GAAQ,IAOV,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIxF,UAAWN,EAAQ+T,IAAxE,UACE,eAACpT,EAAA,EAAD,CAAQC,QAAQ,OAAOkN,KAAK,QAAQ7H,MAAM,UAAUpF,QANhC,WACtB4D,GAAQ,IAKN,0BACGyP,QADH,IACGA,OADH,EACGA,EAAMxZ,YADT,QACiB,oFAEjB,gBAACuX,GAAA,EAAD,CACEnN,KAAMA,EACNW,QA5Cc,WAClB,IAAM8O,EAAWpa,aAAaC,QAAQ,YAChCF,EAASC,aAAaC,QAAQ,UACpC,IAAKma,IAAara,EAAQ,CACxB,IAAM+a,EAASb,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAAOF,MAAK,SAAAG,GAAC,MAAe,yCAAXA,EAAEpa,WACtD,GAAIua,EAAQ,CACV,IAAMC,EAAiBD,EAAOJ,OAAOF,MAAK,SAAAG,GAAC,MAAe,yCAAXA,EAAEpa,QAC7Cwa,IACF/a,aAAamK,QAAQ,WAAY4Q,EAAexa,MAChDP,aAAamK,QAAQ,SAAU4Q,EAAe/Z,GAAG8X,YACjDkB,EAAQe,KAIdzQ,GAAQ,IA+BJyN,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,eAACC,GAAA,EAAD,CAAajX,GAAG,qBAAhB,6FACA,eAACkX,GAAA,EAAD,UACG+B,EAAQnF,KAAI,SAACyF,EAAKvF,GAAN,OACX,gBAACgG,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAkBC,WAAY,eAAC,KAAD,IAAoBtH,gBAAc,kBAAkB5S,GAAG,iBAArF,SACE,eAACiL,EAAA,EAAD,UAAasO,EAAIha,SAEnB,eAAC4a,GAAA,EAAD,UACE,eAACjV,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,eAACyP,GAAA,EAAD,CAAMhP,UAAU,MAAhB,SACGmO,EAAIG,OAAO5F,KAAI,SAAC8F,EAAKS,GAAN,OACd,gBAAC,IAAM9O,SAAP,WACE,eAACoN,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACE,eAAC9U,EAAA,EAAD,CACExF,GAAI4Z,EAAI5Z,GAAG8X,WACXpS,QAAS2T,EACT5T,QAAQ,OACRkN,KAAK,QACL7H,MAAM,UALR,SAOG8O,EAAIra,WAVU8a,cARfrG,eC7FtB/P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwS,QAAS,CACP5P,OAAQ7C,EAAMI,QAAQ,IAExBmJ,OAAO,cACL6M,SAAU,WACVC,aAAcrW,EAAMsW,MAAMD,aAC1B3B,gBAAiB1U,EAAMuW,QAAQC,OAAOC,MACtCrJ,YAAapN,EAAMI,QAAQ,GAC3BiD,WAAY,EACZqT,MAAO,QACN1W,EAAMwN,YAAYG,GAAG,MAAQ,CAC5BtK,WAAYrD,EAAMI,QAAQ,GAC1BsW,MAAO,SAGXC,UAAW,CACThQ,MAAO,QAETiQ,WAAW,cACTzW,QAASH,EAAMI,QAAQ,EAAG,EAAG,EAAG,GAEhCmC,YAAY,cAAD,OAAgBvC,EAAMI,QAAQ,GAA9B,OACX2O,WAAY/O,EAAM6W,YAAYC,OAAO,SACrCJ,MAAO,QACN1W,EAAMwN,YAAYG,GAAG,MAAQ,CAC5B+I,MAAO,SAGXK,WAAY,CACVpQ,MAAO,OACPxG,QAASH,EAAMI,QAAQ,EAAG,GAC1B4W,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfnV,QAAS,OACTV,WAAY,SACZD,eAAgB,UAElB+V,WAAW,cACTC,SAAU,OACVC,WAAY,WACXpX,EAAMwN,YAAYC,KAAK,MAAQ,CAC9B3L,QAAS,SAGbuV,SAAS,gBACNrX,EAAMwN,YAAYG,GAAG,MAAQ,CAC5B7L,QAAS,SAGbyL,YAAY,gBACTvN,EAAMwN,YAAYC,KAAK,MAAQ,CAC9B3L,QAAS,SAGb4L,YAAY,gBACT1N,EAAMwN,YAAYG,GAAG,MAAQ,CAC5B7L,QAAS,SAGbwV,YAAa,CACXN,OAAQ,SA+HCO,GA1HiB,WAC9B,IAAM7W,EAAUZ,KAEhB,EAA0BS,oBAAkB,GAA5C,mBAAOiX,EAAP,KAAeC,EAAf,KACA,EAA4BlX,oBAAkB,GAA9C,mBAAOmX,EAAP,KAAeC,EAAf,KACA,EAA4BpX,mBAAiB,IAA7C,mBAAOgJ,EAAP,KAAeqO,EAAf,KAEA1T,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADA0T,EAAU1T,GACH,WACLA,GAAY,MAIhB,IAYM0T,EAAS,uCAAG,WAAO1T,GAAP,eAAAlK,EAAA,sEACMoO,KADN,OACVyP,EADU,OAGZ3T,IACE2T,IAAYrP,GAAMC,OACpBlF,eAAewB,QAAQ,SAAU8S,GACjCL,GAAQ,IAERA,GAAQ,GAEVE,GAAU,IAVI,2CAAH,sDAcf,OACE,gBAAC,IAAMvQ,SAAP,WACE,gBAAC2Q,GAAA,EAAD,WACE,eAAC,GAAD,IACA,gBAACC,GAAA,EAAD,WACE,gBAACjX,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAACpF,EAAA,EAAD,CACEC,QAAQ,OACRkN,KAAK,QACL7H,MAAM,YACNQ,KAAK,IACLnG,UAAWN,EAAQwW,WACnBe,UAAW,eAAC,KAAD,IANb,iBAUA,eAAC5W,EAAA,EAAD,CAAQC,QAAQ,OAAOkN,KAAK,QAAQ7H,MAAM,YAAYQ,KAAK,IAAInG,UAAWN,EAAQ2W,SAAlF,SACE,eAAC,KAAD,SAGJ,eAACtW,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,GAAD,MAEF,eAAC1F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,uBAAKzF,UAAWN,EAAQ6I,OAAxB,UACE,sBAAKvI,UAAWN,EAAQqW,WAAxB,SACE,eAAC,KAAD,MAEF,eAACmB,GAAA,EAAD,CACE3I,UAlDQ,SAAC7N,GACH,UAAdA,EAAM8N,MACRwC,QAAQC,UAAU,GAAI,MAAtB,mBAAyC1I,IACzC8H,OAAO/H,SAASgI,QAAhB,mBAAoC/H,MAgD1B9H,SAxDS,SAACC,GACtB,IAAMyW,EAAMzW,EAAME,OAAO1E,MACzB0a,EAAUO,IAuDEjb,MAAOqM,EACP6O,YAAY,iCACZ1X,QAAS,CACPR,KAAMQ,EAAQiW,UACd0B,MAAO3X,EAAQkW,YAEjB0B,WAAY,CAAE,aAAc,iBAIlC,gBAACvX,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,gBAAC8R,GAAA,EAAD,CACEvX,UAAWN,EAAQgN,YACnBpM,QAAQ,WACRqF,MAAM,YACN6H,KAAK,QACL9G,aAAW,4BALb,UAOE,eAACrG,EAAA,EAAD,CAAQ8F,KAAK,YAAb,SACE,eAAC,KAAD,MAEF,eAAC9F,EAAA,EAAD,CAAQ8F,KAAK,QAAb,SACE,eAAC,KAAD,SAGJ,gBAACoR,GAAA,EAAD,CACEvX,UAAWN,EAAQ6M,YACnBjM,QAAQ,WACRqF,MAAM,YACN6H,KAAK,QACL9G,aAAW,4BALb,UAOE,eAACrG,EAAA,EAAD,CAAQ8F,KAAK,YAAY8Q,UAAW,eAAC,KAAD,IAApC,oEAGA,eAAC5W,EAAA,EAAD,CAAQ8F,KAAK,QAAQ8Q,UAAW,eAAC,KAAD,IAAhC,8DAKJ,eAAClX,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGiR,IAAWF,EAAS,eAAC,GAAD,IAAoB,eAAC,GAAD,aAI/C,eAACQ,GAAA,EAAD,IACA,sBAAKhX,UAAWN,EAAQ4W,kB,wECnMxBxX,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuY,SAAU,CACRnV,WAAYrD,EAAMI,QAAQ,IAE5BqY,YAAa,CACX5V,OAAQ7C,EAAMI,QAAQ,GACtBsY,SAAU,UAkEDC,GAxDqB,SAAArY,GAClC,IAAMI,EAAUZ,KAChB,EAAwBS,oBAAS,GAAjC,mBAAOiF,EAAP,KAAaL,EAAb,KAEMyT,EAAa,WACjBzT,GAASK,IAGLqT,EAAwB,SAACnX,GAC7BpB,EAAMmB,SAASC,EAAME,OAAO1E,QAG9B,OACE,eAAC6D,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,eAACb,EAAA,EAAD,CAAMrE,QAAQ,WAAd,SACE,eAACP,EAAA,EAAD,CAAMC,UAAWN,EAAQ8X,SAAUvX,WAAS,EAACG,WAAW,SAASD,eAAe,aAAhF,SACE,gBAAC2X,GAAA,EAAD,CAAa9X,UAAWN,EAAQ+X,YAAhC,UACE,eAACM,GAAA,EAAD,CAAYld,GAAG,uCAAf,0EACA,eAAC,IAAD,UACG,kBACC,gBAACmd,GAAA,EAAD,CACEC,QAAQ,uCACRpd,GAAG,iCACH2J,KAAMA,EACNjE,QAASqX,EACT1b,MAAOoD,EAAMkJ,KACb/H,SAAUoX,EANZ,UAQE,gBAAC/I,GAAA,EAAD,CAAU5S,MAAO,QAAjB,UACE,eAAC,KAAD,CAAmBia,SAAS,UAD9B,+BAGA,gBAACrH,GAAA,EAAD,CAAU5S,MAAO,gBAAjB,UACE,eAAC,KAAD,CAAiBia,SAAS,UAD5B,+BAGA,gBAACrH,GAAA,EAAD,CAAU5S,MAAO,OAAjB,UACE,eAAC,KAAD,CAAmBia,SAAS,UAD9B,uDAGA,gBAACrH,GAAA,EAAD,CAAU5S,MAAO,eAAjB,UACE,eAAC,KAAD,CAAiBia,SAAS,UAD5B,uDAGA,gBAACrH,GAAA,EAAD,CAAU5S,MAAO,SAAjB,UACE,eAAC,KAAD,CAAmBia,SAAS,UAD9B,2CAGA,gBAACrH,GAAA,EAAD,CAAU5S,MAAO,iBAAjB,UACE,eAAC,KAAD,CAAiBia,SAAS,UAD5B,2D,UC9DZrX,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiZ,QAAS,CACPhW,eAAgB,aAElBiW,WAAY,CACV7L,aAActN,EAAMI,QAAQ,SAwFnBgZ,GA7E6B,SAAA9Y,GAC1C,IAAMI,EAAUZ,KAChB,EAAgCS,mBAAiB,IAAjD,mBAAO1D,EAAP,KAAiBwc,EAAjB,KACA,EAAgC9Y,mBAAiB,IAAjD,mBAAOzD,EAAP,KAAiBwc,EAAjB,KACMC,EAAajZ,EAAMkZ,aAAanE,MAAK,SAAA7B,GAAC,OAAIA,EAAE3X,KAAOyE,EAAMmZ,UAAU5d,MAEnE6d,EAAkB,SAAChY,GACnB6X,IACFA,EAAW1c,SAAW6E,EAAME,OAAO1E,OAGrCmc,EAAY3X,EAAME,OAAO1E,OACzBoD,EAAMqZ,aAAa,CACjB9d,GAAIyE,EAAMmZ,UAAU5d,GACpBgB,SAAU6E,EAAME,OAAO1E,MACvBJ,SAAQ,OAAEyc,QAAF,IAAEA,OAAF,EAAEA,EAAYzc,SACtBF,OAAO,KAILgd,EAAkB,SAAClY,GAAkD,IAAD,EACpE6X,IACFA,EAAWzc,SAAW4E,EAAME,OAAO1E,OAGrCoc,EAAY5X,EAAME,OAAO1E,OACzBoD,EAAMqZ,aAAa,CACjB9d,GAAIyE,EAAMmZ,UAAU5d,GACpBgB,SAAQ,iBAAE0c,QAAF,IAAEA,OAAF,EAAEA,EAAY1c,gBAAd,QAA0BA,EAClCC,SAAU4E,EAAME,OAAO1E,MACvBN,OAAO,KAIX,OACE,gBAACmE,EAAA,EAAD,CAAMwF,MAAI,EAACtF,WAAS,EAACE,eAAe,eAAeC,WAAW,aAAaF,UAAU,SAASsF,GAAI,GAAlG,UACE,gBAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQwY,QAA/B,UAAyC5Y,EAAMmZ,UAAUre,KAAzD,OACA,gBAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACtF,WAAS,EAACE,eAAe,aAAaC,WAAW,SAASF,UAAU,MAAMsF,GAAI,GAAzF,UACE,eAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQyY,WAAY7X,QAAQ,QAAnD,2BAGA,eAAC,IAAD,UACG,wBACC,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHyF,QAAQ,WACR8W,YAAa9X,EAAMmZ,UAAU5c,SAAS8W,WACtCnF,KAAK,QACLhF,KAAK,SACLtM,MAAK,iBAAEqc,QAAF,IAAEA,OAAF,EAAEA,EAAY1c,gBAAd,QAA0BA,EAC/B4E,SAAUiY,UAKlB,gBAAC3Y,EAAA,EAAD,CAAMwF,MAAI,EAACtF,WAAS,EAACE,eAAe,aAAaC,WAAW,SAASF,UAAU,MAAMsF,GAAI,GAAzF,UACE,eAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQyY,WAAY7X,QAAQ,QAAnD,2BAGA,eAAC,IAAD,UACG,wBACC,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHyF,QAAQ,WACR8W,YAAa9X,EAAMmZ,UAAU3c,SAAS6W,WACtCnF,KAAK,QACLhF,KAAK,SACLtM,MAAK,iBAAEqc,QAAF,IAAEA,OAAF,EAAEA,EAAYzc,gBAAd,QAA0BA,EAC/B2E,SAAUmY,c,SCrFlB9Z,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiZ,QAAS,CACPhW,eAAgB,aAElBiW,WAAY,CACV7L,aAActN,EAAMI,QAAQ,IAE9ByZ,cAAe,CACbjX,UAAW,IACXkX,SAAU,aA6EDC,GAlE2B,SAAAzZ,GACxC,IAAMI,EAAUZ,KAEhB,EAA4BS,mBAAoB,IAAhD,mBAAOyZ,EAAP,KAAeC,EAAf,KAaA/V,qBAAU,WACR,IAAIC,GAAY,EAEhB,OAfiB,SAACA,GAClB,IAAMjH,EAAQoD,EAAMmZ,UAAUS,gBAAgBvK,KAAI,SAAAwK,GAAC,QACjD7Z,EAAMkZ,aAAanE,MAAK,SAAA+E,GAAG,aAAIA,EAAIve,KAAOyE,EAAMmZ,UAAU5d,KAA3B,UAAiCue,EAAIvP,eAArC,aAAiC,EAAawK,MAAK,SAAA7B,GAAC,OAAIA,IAAM2G,EAAEte,aAK7FsI,GACF8V,EAAU/c,GAMZmd,CAAWlW,GACJ,WACLA,GAAY,KAEb,IAEH,IAAMmW,EAAoB,SAAC5Y,EAA0BkF,GAEnD,IADA,IAAM2T,EAAyB,GACtB/G,EAAI,EAAGA,EAAIlT,EAAMmZ,UAAUS,gBAAgBpP,OAAQ0I,IACtDwG,EAAOxG,IACT+G,EAAaC,KAAKla,EAAMmZ,UAAUS,gBAAgB1G,GAAG3X,IAIzD,IAAMqa,EAAM5V,EAAMmZ,UAAUS,gBAAgBO,WAAU,SAAAN,GAAC,OAAIA,EAAEte,KAAO6F,EAAMyT,cAActZ,MACxF,GAAI+K,EACF2T,EAAaC,KAAK9Y,EAAMyT,cAActZ,QACjC,CACL,IAAMgU,EAAQ0K,EAAaE,WAAU,SAAAC,GAAC,OAAIA,IAAMhZ,EAAMyT,cAActZ,OACrD,IAAXgU,GACF0K,EAAaI,OAAO9K,EAAO,GAI/BmK,EAAO9D,GAAOtP,EACdqT,EAAU,aAAID,IACd1Z,EAAMqZ,aAAa,CAAE9d,GAAIyE,EAAMmZ,UAAU5d,GAAIgP,QAAS0P,EAAc3d,OAAO,KAG7E,OACE,gBAACmE,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,UACE,gBAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQwY,QAA/B,UAAyC5Y,EAAMmZ,UAAUre,KAAzD,OACA,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIxF,UAAWN,EAAQmZ,cAAtC,SACGvZ,EAAMmZ,UAAUS,gBAAgBvK,KAC/B,SAACiL,EAAK/K,GAAN,YACoBnB,IAAlBsL,EAAOnK,IACL,eAACsC,GAAA,EAAD,CAEEC,QAAS,eAAC1L,EAAA,EAAD,CAAUC,MAAM,UAAUlF,SAAU6Y,EAAmB1T,QAASoT,EAAOnK,GAAQhU,GAAI+e,EAAI/e,KAChGqW,MAAO0I,EAAI1d,OAFN2S,YCnEf/P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiZ,QAAS,CACP7V,WAAYrD,EAAMI,QAAQ,GAC1B+W,SAAU,IAAMnX,EAAM6a,WAAW1D,eA0DxB2D,GA/C6B,SAAAxa,GAC1C,IAAMI,EAAUZ,KAChB,OACE,eAACiB,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,gBAACqP,GAAA,EAAD,CAAWvU,QAAQ,WAAnB,UACE,eAACwU,GAAA,EAAD,CAAkBC,WAAY,eAAC,KAAD,IAAoBtH,gBAAc,kBAAkB5S,GAAG,iBAArF,SACE,eAACiL,EAAA,EAAD,CAAY9F,UAAWN,EAAQwY,QAA/B,SAAyC5Y,EAAMya,eAAe3f,SAEhE,eAAC4a,GAAA,EAAD,UACE,eAACjV,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,eAACyP,GAAA,EAAD,CAAMhP,UAAU,MAAMS,aAAW,uBAAjC,SACGpH,EAAMya,eAAejd,WAAW6R,KAAI,SAACiL,EAAK/K,GAAN,OACnC,gBAAC,IAAMzI,SAAP,WACE,eAACoN,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACGyE,EAAIhe,MACH,eAAC,IAAD,UACG,kBACC,eAAC,GAAD,CACE4c,aAAclZ,EAAMkZ,aACpBG,aAAcrZ,EAAMqZ,aACpBF,UAAWmB,OAKjB,eAAC,IAAD,UACG,kBACC,eAAC,GAAD,CACEpB,aAAclZ,EAAMkZ,aACpBG,aAAcrZ,EAAMqZ,aACpBF,UAAWmB,WAnBF/K,kBC5B/B/P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+a,eAAgB,CACd3X,WAAYrD,EAAMI,QAAQ,IAE5B6a,cAAe,CACb7N,YAAapN,EAAMI,QAAQ,SA4GlB8a,GA7FyB,SAAA5a,GACtC,IAAMoZ,EAAkB,SAAChY,GACvBpB,EAAM6a,UAAU,EAAGzZ,EAAME,OAAO1E,QAG5B0c,EAAkB,SAAClY,GACvBpB,EAAM6a,UAAU,EAAGzZ,EAAME,OAAO1E,QAG5BwD,EAAUZ,KAEhB,OACE,eAACiB,EAAA,EAAD,UACE,eAAC4E,EAAA,EAAD,CAAMrE,QAAQ,WAAd,SACE,gBAAC2U,GAAA,EAAD,CAAMhP,UAAU,MAAMS,aAAW,uBAAjC,UACE,eAACyO,GAAA,EAAD,UACE,eAACrP,EAAA,EAAD,CAAYxF,QAAQ,KAAK2F,UAAU,KAAnC,0DAIF,eAACuN,GAAA,EAAD,CAASlT,QAAQ,WACjB,eAAC6U,GAAA,EAAD,UACE,eAACrP,EAAA,EAAD,CAAYjL,GAAG,eAAeuf,cAAY,EAA1C,wCAIF,gBAACjF,GAAA,EAAD,WACE,eAAC,IAAD,UACG,kBACC,eAAC3U,GAAA,EAAD,CACE3F,GAAG,WACHyF,QAAQ,WACR8W,YAAa9X,EAAM+a,WAAW,GAAG1H,WACjCnF,KAAK,QACLhF,KAAK,SACLxI,UAAWN,EAAQua,cACnB/d,MAAOoD,EAAMgb,aAAa,GAC1B7Z,SAAUiY,EACV6B,WAAY,CACVC,aAAc,eAACC,GAAA,EAAD,CAAgBrF,SAAS,MAAzB,0BAKtB,eAAC,IAAD,UACG,kBACC,eAAC5U,GAAA,EAAD,CACE3F,GAAG,WACHyF,QAAQ,WACR8W,YAAa9X,EAAM+a,WAAW,GAAG1H,WACjCnF,KAAK,QACLhF,KAAK,SACLxI,UAAWN,EAAQsa,eACnB9d,MAAOoD,EAAMgb,aAAa,GAC1B7Z,SAAUmY,EACV2B,WAAY,CACVC,aAAc,eAACC,GAAA,EAAD,CAAgBrF,SAAS,MAAzB,6BAMxB,eAAC,IAAD,UACG,kBACC,eAAC,IAAMhP,SAAP,UACG9G,EAAMob,iBACLpb,EAAMob,gBAAgB/L,KAAI,SAACiL,EAAK/K,GAAN,OACxB,eAAC,IAAMzI,SAAP,UACE,eAAC+O,GAAA,EAAD,UACE,eAAC,GAAD,CACE4E,eAAgBH,EAChBjB,aAAcrZ,EAAMqZ,aACpBH,aAAclZ,EAAMkZ,kBALL3J,WAa/B,eAAC2E,GAAA,EAAD,CAASlT,QAAQ,WACjB,eAAC6U,GAAA,EAAD,UACE,eAACpV,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUpF,QAASjB,EAAMqb,aAA3D,gFC/Fd,SAASC,GAAiBC,GA+JxB,MA9J4B,CAC1B9S,YAAa,EACbE,SAAU,QACV6S,YAAa,CAAC,EAAG,GACjBC,YAAa,GACbpR,QAAS,GACTqR,SAAU,EACVX,WAAY,CAAC,EAAG,GAChB7B,aAAc,GAEdyC,iBAV0B,SAUTva,EAAmCxE,GAClDgf,KAAKC,QAAQjf,IAGfif,QAd0B,SAclBjf,GACFA,GAASgf,KAAKF,UAAY9e,EAAQ,GAAe,IAAVA,EACzCgf,KAAKnT,YAAc7L,EAEnBgf,KAAKnT,YAAc,EAErBmT,KAAKE,aAGPC,YAvB0B,SAuBd7S,GACN0S,KAAKjT,WAAaO,IACpB0S,KAAKC,QAAQ,GACbD,KAAKjT,SAAWO,EAChB0S,KAAKE,cAITE,eA/B0B,WAgCxBJ,KAAKC,QAAQ,GACbD,KAAKE,aAGPG,QApC0B,SAoClBC,EAAqBC,EAAiBC,EAAkBC,EAAkBhS,GAChFuR,KAAKH,YAAcS,EACnBN,KAAKvR,QAAUA,EACfuR,KAAKF,SAAWS,EAChBP,KAAKb,WAAa,CAACqB,EAAUC,GACD,IAAxBT,KAAKJ,YAAY,KACnBI,KAAKJ,YAAY,GAAKY,GAEI,IAAxBR,KAAKJ,YAAY,KACnBI,KAAKJ,YAAY,GAAKa,IAI1BC,kBAjD0B,SAiDRpJ,EAAWqJ,IACT,QAEHhb,KAAKgb,KADD,WACmChb,KAAKgb,IAA+B,IAANrJ,GAAiB,IAANA,IAE3F0I,KAAKJ,YAAYtI,GADU,KAAxBqJ,EACmB,EAEAA,IAK5BC,UA7D0B,SA6DhBC,EAAmBL,EAAmBC,EAAmBK,GAC7Dd,KAAKe,WAAWP,IAClBR,KAAKU,kBAAkB,EAAGF,GAExBR,KAAKe,WAAWN,IAClBT,KAAKU,kBAAkB,EAAGD,GAEf,OAATK,GAAiBA,IAASd,KAAKjT,WACjCiT,KAAKjT,SAAW+T,GAEdd,KAAKe,WAAWF,IAClBb,KAAKC,QAAQlhB,SAAS8hB,IAExBb,KAAKE,aAGPa,WA7E0B,SA6Ef/f,GACT,OAAKggB,MAAMjiB,SAASiC,KAOtBigB,kBArF0B,SAqFRN,GAChB,IAAMO,EAAQlB,KAAK1C,aAAanE,MAAK,SAAAgI,GAAC,OAAIA,EAAExhB,KAAOghB,EAAShhB,MACxDuhB,GACFA,EAAMvS,QAAUgS,EAAShS,QACzBuS,EAAMtgB,SAAW+f,EAAS/f,SAC1BsgB,EAAMvgB,SAAWggB,EAAShgB,UAE1Bqf,KAAK1C,aAAagB,KAAKqC,IAI3BS,WAhG0B,SAgGflU,GACT8S,KAAK1C,aAAamB,OAAO,EAAGuB,KAAK1C,aAAa1O,QAI9C,IAHA,IAEI5N,EAFEqgB,EAAOnU,EAAOmU,OAChB/N,EAAM+N,EAAKC,QAEPhO,EAAIiO,MAAM,CAAC,IAAD,GAChBvgB,EAAK,UAAGkM,EAAOd,IAAIkH,EAAItS,cAAlB,aAAG,EAAiC8N,MAAM,OAClC9N,EAAM4N,OAAS,IACrBoS,MAAMjiB,SAASiC,EAAM,KAGxBgf,KAAK1C,aAAagB,KAAK,CAAE3e,GAAI2T,EAAItS,MAAiBN,OAAO,EAAOiO,QAAS3N,IAFzEgf,KAAK1C,aAAagB,KAAK,CAAE3e,GAAI2T,EAAItS,MAAiBN,OAAO,EAAMC,SAAUK,EAAM,GAAIJ,SAAUI,EAAM,MAMvGsS,EAAM+N,EAAKC,SAIfpB,UAnH0B,WAoHxB,IAAMhT,EAAS,IAAIC,gBAAgBC,SAASC,QACnB,IAArB2S,KAAKnT,YACPK,EAAOpK,OAAO,QAEdoK,EAAOsU,IAAI,OAAQxB,KAAKnT,YAAY4K,YAEhB,UAAlBuI,KAAKjT,SACPG,EAAOpK,OAAO,QAEdoK,EAAOsU,IAAI,OAAQxB,KAAKjT,UAEtBiT,KAAKJ,YAAY,KAAOI,KAAKb,WAAW,IAAMa,KAAKJ,YAAY,KAAOI,KAAKb,WAAW,IACxFjS,EAAOpK,OAAO,YACdoK,EAAOpK,OAAO,cAEdoK,EAAOsU,IAAI,WAAYxB,KAAKJ,YAAY,GAAGnI,YAC3CvK,EAAOsU,IAAI,WAAYxB,KAAKJ,YAAY,GAAGnI,aAjBnC,qBAoBWuI,KAAK1C,cApBhB,IAoBV,2BAAwC,CAAC,IAYY,EAZ1C5O,EAA6B,QACtC,GAAIA,EAAOhO,OACLgO,EAAO/N,UAAY+N,EAAO9N,YACvB8N,EAAO/N,WACV+N,EAAO/N,SAAW,KAEf+N,EAAO9N,WACV8N,EAAO9N,SAAW,KAEpBsM,EAAOsU,IAAI9S,EAAO/O,GAAlB,UAAyB+O,EAAO/N,SAAhC,YAA4C+N,EAAO9N,iBAGrD,GAAI8N,EAAOC,SAAWD,EAAOC,QAAQC,OAAS,EAC5C1B,EAAOsU,IAAI9S,EAAO/O,GAAlB,UAAsB+O,EAAOC,eAA7B,aAAsB,EAAgBE,KAAK,OAjCvC,8BAsCViH,QAAQC,UAAU,GAAI,WAAtB,WAAsC7I,EAAOuK,aAC7CkI,MCnKN,IAAM/b,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Bwd,aAAc,CACZ7a,WAAY,IACZ5C,QAASH,EAAMI,QAAQ,IAEzByd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,SAoHjB0d,GA/GgB,WAC7B,IAAM1U,EAAS2U,cAETC,EAASpC,GAAgB,sBAAC,4BAAA3hB,EAAA,sEACZwQ,GAAqB,OACrCrB,QADqC,IACrCA,OADqC,EACrCA,EAAQsB,aACR1Q,EAAK+O,YACL,GACA/O,EAAKiP,SACLjP,EAAK8hB,YACL9hB,EAAKwf,cAPuB,OACxBnL,EADwB,OAU9BrU,EAAKuiB,QAAQlO,EAAIpN,UAAUgd,SAAU5P,EAAIoO,QAASpO,EAAIqO,SAAUrO,EAAIsO,SAAUtO,EAAIpN,UAAUya,iBAV9D,4CAY1B1hB,EAAOkkB,aAAmB,kBAAMF,KAEhClV,EAAW,uCAAG,WAAO3E,GAAP,iBAAAlK,EAAA,6DACZkkB,EAAU,IAAI9U,gBAAgBC,SAASC,QAC7CvP,EAAK8iB,UAAUqB,EAAQ7V,IAAI,QAAS6V,EAAQ7V,IAAI,YAAa6V,EAAQ7V,IAAI,YAAa6V,EAAQ7V,IAAI,SAClGtO,EAAKsjB,WAAWa,GAHE,SAKA1T,GAAqB,OACrCrB,QADqC,IACrCA,OADqC,EACrCA,EAAQsB,aACR1Q,EAAK+O,YACL,GACA/O,EAAKiP,SACLjP,EAAK8hB,YACL9hB,EAAKwf,cAXW,OAKZnL,EALY,QAaA,IAAdlK,QAAyCuK,IAAlBL,EAAIpN,WAC7BjH,EAAKuiB,QAAQlO,EAAIpN,UAAUgd,SAAU5P,EAAIoO,QAASpO,EAAIqO,SAAUrO,EAAIsO,SAAUtO,EAAIpN,UAAUya,iBAd5E,2CAAH,sDAkBjBxX,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADA2E,EAAY3E,GACL,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAChB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASC,WAAW,SAASH,WAAS,EAAnF,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAY9F,UAAWN,EAAQkd,aAActc,QAAQ,KAAK2F,UAAU,KAApE,SACGmC,EAAOsB,iBAGZ,eAAC3J,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASC,WAAW,SAAnD,SACE,eAAC,IAAD,UAAW,kBAAM,eAAC,GAAD,CAASoI,KAAMxP,EAAKiP,SAAUxH,SAAUzH,EAAKqiB,mBAEhE,gBAACtb,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,UACE,eAAC,IAAD,UACG,kBACC,eAACF,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACvF,UAAWN,EAAQmd,YAA7C,SACE,eAAC,GAAD,CACExC,WAAYrhB,EAAKqhB,WACjBC,aAActhB,EAAK8hB,YACnBJ,gBAAiB1hB,EAAK2Q,QACtB6O,aAAcxf,EAAKwf,aACnB2B,UAAWnhB,EAAK4iB,kBAChBjB,aAAc3hB,EAAKsiB,eACnB3C,aAAc3f,EAAKmjB,yBAK3B,gBAACpc,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA9E,UACE,eAAC,IAAD,UACG,kBACC,eAACH,EAAA,EAAD,UACG/G,EAAK+hB,YAAYpM,KAAI,SAAA7L,GAAO,OAC3B,eAAC,GAAD,CAAaA,QAASA,GAAcA,EAAQjI,YAKpD,eAACkF,EAAA,EAAD,CAAMI,eAAe,SAASC,WAAW,SAASH,WAAS,EAA3D,SACE,eAAC,IAAD,UACG,kBACC,eAAC,IAAMmG,SAAP,UACGpN,EAAKgiB,SAAW,GACf,eAACoC,EAAA,EAAD,CACE/jB,MAAOL,EAAKgiB,SACZqC,KAAMrkB,EAAK+O,YACXtH,SAAUzH,EAAKiiB,iBACf3a,QAAQ,WACRqF,MAAM,UACN2P,MAAM,oCCvH5BxW,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXnb,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,SA+EjBke,GA1EgB,WAC7B,IAAMC,EAAO,uCAAG,WAAOpa,GAAP,iBAAAlK,EAAA,sEACI6O,GAAY9O,EAAK+O,YAAa,GAAI/O,EAAKiP,SAAUjP,EAAK8hB,aAD1D,OACRzN,EADQ,OAEVlK,IACIiF,EAAS,IAAIC,gBAAgBC,SAASC,QAC5CvP,EAAKuiB,QAAQlO,EAAIpN,UAAWoN,EAAIoO,QAASpO,EAAIqO,SAAUrO,EAAIsO,SAAU,IACrE3iB,EAAK8iB,UAAU1T,EAAOd,IAAI,QAASc,EAAOd,IAAI,YAAac,EAAOd,IAAI,YAAac,EAAOd,IAAI,UALlF,2CAAH,sDASP0V,EAASpC,GAAgB,sBAAC,4BAAA3hB,EAAA,sEACZ6O,GAAY9O,EAAK+O,YAAa,EAAG/O,EAAKiP,SAAUjP,EAAK8hB,aADzC,OACxBzN,EADwB,OAE9BrU,EAAKuiB,QAAQlO,EAAIpN,UAAWoN,EAAIoO,QAASpO,EAAIqO,SAAUrO,EAAIsO,SAAU,IAFvC,4CAK1B3iB,EAAOkkB,aAAmB,kBAAMF,KAEtC9Z,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,MAIhB,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASC,WAAW,SAAnD,SACE,eAAC,IAAD,UAAW,kBAAM,eAAC,GAAD,CAASoI,KAAMxP,EAAKiP,SAAUxH,SAAUzH,EAAKqiB,mBAEhE,eAACtb,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,gBAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,GAAIF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA/E,UACE,eAAC,IAAD,UACG,kBACC,eAACH,EAAA,EAAD,UACG/G,EAAK+hB,YAAYpM,KAAI,SAAA7L,GAAO,OAC3B,eAAC,GAAD,CAAaA,QAASA,GAAcA,EAAQjI,YAKpD,eAACkF,EAAA,EAAD,CAAMI,eAAe,SAASC,WAAW,SAASH,WAAS,EAA3D,SACE,eAAC,IAAD,UACG,kBACC,eAAC,IAAMmG,SAAP,UACGpN,EAAKgiB,SAAW,GACf,eAACoC,EAAA,EAAD,CACE/jB,MAAOL,EAAKgiB,SACZqC,KAAMrkB,EAAK+O,YACXtH,SAAUzH,EAAKiiB,iBACf3a,QAAQ,WACRqF,MAAM,UACN2P,MAAM,mCC5DnBkI,GAZ2B,SAAAle,GAAK,OAC7C,gBAACS,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAItF,UAAU,SAASC,eAAe,eAAeC,WAAW,UAAUH,WAAS,EAAlG,UACE,eAAC6F,EAAA,EAAD,CAAYxF,QAAQ,KAAKqF,MAAM,UAA/B,SACGrG,EAAMme,OAAOrjB,OAEhB,eAAC0L,EAAA,EAAD,oBACMxG,EAAMme,OAAO9I,OAAOva,KAD1B,aACmCkF,EAAMme,OAAO7J,KAAKxZ,KADrD,aAC8DkF,EAAMme,OAAOhgB,WAD3E,aAC0F6B,EAAMme,OAAO/f,YAEtG4B,EAAMme,OAAOC,UAAY,eAAC5X,EAAA,EAAD,CAAYH,MAAM,gBAAlB,SAAmCrG,EAAMme,OAAOC,eCK/DC,GAX6B,SAAAre,GAAK,OAC/C,eAACS,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,gBAACzF,EAAA,EAAD,CAAMG,UAAU,MAAMC,eAAe,eAAeC,WAAW,SAASmF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAA9F,UACE,eAACF,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,eAAC,GAAD,CAAYgY,OAAQne,EAAMme,OAAOA,WAEnC,eAAC3X,EAAA,EAAD,UAAaxG,EAAMme,OAAOpkB,cCL1ByF,GAAYC,aAAW,kBAC3BE,YAAa,CACXwU,IAAK,CACHC,gBAAiB,SAEnBkK,OAAQ,CACNlG,SAAU,UAgDD/D,GAtCmC,SAAArU,GAAU,IAAD,IACnDI,EAAUZ,KAEhB,EAAwBS,oBAAS,GAAjC,mBAAOiF,EAAP,KAAaL,EAAb,KAUA,OACE,gBAACpE,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,UACE,gBAACzF,EAAA,EAAD,CAAMG,UAAU,MAAMC,eAAe,eAAeC,WAAW,UAAUmF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAA/F,UACE,gBAACI,EAAA,EAAD,CAAQC,QAAQ,OAAOkN,KAAK,QAAQ7H,MAAM,UAAUpF,QAPlC,WACtB4D,GAAQ,IAMJ,wIAC0B7E,EAAMue,eADhC,aAC0B,EAAe/T,UAEzC,gBAAChE,EAAA,EAAD,iEAAwBxG,EAAMwe,cAAgB,2BAAS,2BAEzD,gBAACnM,GAAA,EAAD,CACEnN,KAAMA,EACNW,QAlBc,WAClBhB,GAAQ,IAkBJyN,kBAAgB,qBAChBC,mBAAiB,2BACjB7R,UAAWN,EAAQke,OALrB,UAOE,eAAC9L,GAAA,EAAD,CAAajX,GAAG,qBAAhB,4EACA,eAACkX,GAAA,EAAD,CAAe/R,UAAWN,EAAQke,OAAlC,mBACGte,EAAMue,eADT,aACG,EAAelP,KAAI,SAACoP,EAAGlP,GAAJ,OAClB,eAAC,GAAD,CAAa4O,OAAQM,GAAQlP,eC/BnC/P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ4B,QAAS,OACTC,UAAW,IACXc,OAAQ7C,EAAMI,QAAQ,IAExB4e,KAAM,CACJjd,UAAW,IAEbE,QAAS,CACPH,QAAS,OACTI,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERM,MAAO,CACLC,SAAU,IACVC,UAAW,IACXC,OAAQ7C,EAAMI,QAAQ,IAExB0C,KAAM,CACJC,WAAY,KAEdC,SAAU,CACRD,WAAY,KAEdE,QAAS,CACPC,eAAgB,gBAElB+b,OAAQ,CACN1c,YAAavC,EAAMI,QAAQ,IAE7B+C,OAAQ,CACNN,OAAQ7C,EAAMI,QAAQ,IAExBgD,UAAW,CACTC,WAAYrD,EAAMI,QAAQ,SAyIjB8e,GApIuC,SAAA5e,GACpD,IAWA,EAA4BC,mBAXR,WAElB,IADaiD,eAAe1I,QAAQ,UACzB,CACT,IAAMyJ,EAAO1J,aAAaC,QAAQ,aAClC,GAAIyJ,EACF,OAAOA,EAAKE,SAASnE,EAAMzE,IAG/B,OAAOyE,EAAMkE,OAGsB2a,IAArC,mBAAO3a,EAAP,KAAeE,EAAf,KACA,EAAoCnE,mBAASD,EAAMsE,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,uCAAG,4BAAA7K,EAAA,0DACVuJ,eAAe1I,QAAQ,UADb,gCAIEX,EAAUmG,EAAMzE,GAAc,GAJhC,OAKJ,OALI,SAMnB6I,GAAU,GACNpE,EAAMyE,OACRzE,EAAMyE,SARW,4BAYfpK,EAAQE,aAAaC,QAAQ,cAZd,qBAcfH,EAAM8J,SAASnE,EAAMzE,IAdN,mDAiBnBhB,aAAamK,QAAQ,YAArB,UAAqCrK,EAArC,YAA8C2F,EAAMzE,KAjBjC,wBAmBnBhB,aAAamK,QAAQ,YAAa1E,EAAMzE,IAnBrB,QAqBrB6I,GAAU,GArBW,4CAAH,qDAyBhBO,EAAoB,uCAAG,sBAAAhL,EAAA,sEACJK,EAAcgG,EAAMzE,IADhB,OAEV,OAFU,SAGzBgJ,GAAc,GACVvE,EAAM4E,UACR5E,EAAM4E,YALiB,2CAAH,qDAUpBE,EAAyB,uCAAG,sBAAAnL,EAAA,sEACTiF,GAAmBoB,EAAMzE,IADhB,OAEf,IAFe,SAG9BgJ,GAAc,GACVvE,EAAM4E,UACR5E,EAAM4E,YALsB,2CAAH,qDAUzBxE,EAAUZ,KAChB,OACE,eAAC6F,EAAA,EAAD,CAAMrE,QAAQ,WAAWN,UAAWN,EAAQR,KAA5C,SACE,gBAACa,EAAA,EAAD,CAAMI,eAAe,SAASC,WAAW,SAASH,WAAS,EAA3D,UACE,gBAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQse,KAAM/d,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAA5F,UACE,gBAACL,EAAA,EAAD,CAAMwF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAASC,eAAe,SAASC,WAAW,SAASoF,GAAI,GAAIC,GAAI,EAAhG,UACE,eAACK,EAAA,EAAD,CAAYG,UAAU,KAAK3F,QAAQ,KAAKN,UAAWN,EAAQoC,KAA3D,uCAGCxC,EAAM3C,sBAAwB2C,EAAM5C,OAAS4C,EAAM3C,qBAAuB2C,EAAM5C,MAC/E,gBAACqD,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASD,UAAU,MAAlD,UACE,gBAAC4F,EAAA,EAAD,CAAYE,MAAM,SAASL,MAAM,UAAUM,UAAU,KAAK3F,QAAQ,KAAKN,UAAWN,EAAQoC,KAA1F,UACGxC,EAAM5C,MADT,YAGA,eAACoJ,EAAA,EAAD,CACEE,MAAM,SACN1F,QAAQ,KACRqF,MAAM,gBACN3F,UAAS,UAAKN,EAAQuC,QAAb,YAAwBvC,EAAQsC,SAAhC,YAA4CtC,EAAQue,QAJ/D,SAMG3e,EAAM3C,0BAIX,gBAACmJ,EAAA,EAAD,CAAYE,MAAM,SAASC,UAAU,KAAK3F,QAAQ,KAAKN,UAAWN,EAAQoC,KAA1E,UACGxC,EAAM5C,MADT,eAKJ,gBAACqD,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAvF,UACE,eAACL,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,aAAnD,SACGyD,EACC,eAAC6C,EAAA,EAAD,CAAYC,aAAW,YAAYf,MAAM,UAAUpF,QAAS6D,EAA5D,SACE,eAAC,IAAD,MAGF,eAACqC,EAAA,EAAD,CAAYC,aAAW,YAAYnG,QAAS0D,EAA5C,SACE,eAAC,IAAD,QAIN,eAAClE,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGjC,EACC,eAACnD,EAAA,EAAD,CAAQsF,MAAM,UAAUrF,QAAQ,WAAW6F,KAAK,QAAhD,wDAIA,eAAC9F,EAAA,EAAD,CAAQsF,MAAM,UAAUrF,QAAQ,YAAYC,QAASuD,EAArD,0DAOR,gBAAC/D,EAAA,EAAD,CACEE,WAAS,EACTsF,MAAI,EACJC,GAAI,GACJrF,eAAe,SACfkG,aAAa,SACbnG,UAAU,MACVF,UAAWN,EAAQyC,OAPrB,UASE,eAACmE,EAAA,EAAD,CAAQtG,UAAWN,EAAQyC,OAAQ/H,KAAK,YAAY8B,MAAOoD,EAAM6C,OAAQoE,UAAQ,IACjF,eAACT,EAAA,EAAD,CAAY9F,UAAS,UAAKN,EAAQoC,KAAb,YAAqBpC,EAAQyC,QAAlD,SAA6D7C,EAAM6C,YAErE,eAACic,GAAD,CAAcP,QAASve,EAAMue,QAASC,cAAexe,EAAMwe,sBCtL7Dhf,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXof,MAAO,CACL1c,SAAU,IACVC,UAAW,IACXC,OAAQ7C,EAAMI,QAAQ,IAExBkf,KAAM,CACJnf,QAASH,EAAMI,QAAQ,SAgDdmf,GA3C6C,SAAAjf,GAAU,IAAD,kBAC7DI,EAAUZ,KAaV0f,EAZc,WAAe,IAAD,EAC5BjM,EAAS,GAQb,OAPA,UAAAjT,EAAMmf,mBAAN,SAAmB9P,KAAI,SAAA+P,GAAK,OAC1BA,EAAM5hB,WAAW6R,KAAI,SAAAyN,GACfA,EAAMzgB,WAAa4W,EAAOzI,OAAS,MACrCyI,GAAM,UAAO6J,EAAMhiB,KAAb,YAAqBgiB,EAAMlgB,MAA3B,aAIN,GAAN,OAAUqW,EAAOoM,UAAU,EAAGpM,EAAOzI,OAAS,GAA9C,OAGsB8U,GACxB,OACE,gBAACja,EAAA,EAAD,CAAMrE,QAAQ,WAAWN,UAAWN,EAAQ4e,KAA5C,UACE,gBAACve,EAAA,EAAD,CAAMG,UAAU,MAAMC,eAAe,SAASF,WAAS,EAAvD,UACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGvF,UAAU,SAASC,eAAe,SAASC,WAAW,SAASH,WAAS,EAAlG,UACE,sBAAKD,UAAWN,EAAQ2e,MAAO/a,IAAKhE,EAAM+e,QAD5C,yDAEY/e,EAAMwD,eAFlB,aAEY,EAAelG,cAE3B,gBAACmD,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAACK,EAAA,EAAD,CAAYxF,QAAQ,KAAK2F,UAAU,KAAnC,SACGuY,IAEH,eAAC,GAAD,CACE9hB,MAAK,UAAE4C,EAAMwD,eAAR,aAAE,EAAepG,MACtBC,qBAAoB,UAAE2C,EAAMwD,eAAR,aAAE,EAAenG,qBACrCwF,OAAM,UAAE7C,EAAMwD,eAAR,aAAE,EAAetJ,KACvBqB,GAAE,UAAEyE,EAAMwD,eAAR,aAAE,EAAejI,GACnB2I,OAAM,UAAElE,EAAMwD,eAAR,aAAE,EAAeU,OACvBI,WAAU,UAAEtE,EAAMwD,eAAR,aAAE,EAAec,WAC3Bia,QAAO,UAAEve,EAAMwD,eAAR,aAAE,EAAe+b,eACxBf,cAAa,UAAExe,EAAMwD,eAAR,aAAE,EAAegb,sBAIpC,eAAC/d,EAAA,EAAD,CAAMG,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,Q,8BCzD3EnB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6f,SAAU,CACR3I,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,gBAE/BC,gBAAiB,CACf7f,QAASH,EAAMI,QAAQ,SAmBd6f,GAd2C,SAAA3f,GACxD,IAAMI,EAAUZ,KAChB,OACE,gBAACiB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,eAAe,eAAeoF,MAAI,EAACC,GAAI,GAA9F,UACE,eAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQof,SAAUxe,QAAQ,WAAjD,oEACehB,EAAM4f,eAErB,eAACnf,EAAA,EAAD,CAAMC,UAAWN,EAAQsf,gBAAiB/e,WAAS,EAACE,eAAe,aAAnE,SACE,eAAC2F,EAAA,EAAD,CAAYxF,QAAQ,QAApB,SAA6BhB,EAAM6f,2BCnBrCrgB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmgB,KAAM,CACJC,aAAa,aAAD,OAAergB,EAAMuW,QAAQ+J,SACzCngB,QAASH,EAAMI,QAAQ,EAAG,EAAG,EAAG,SAuBvBmgB,GAlBuC,SAAAjgB,GACpD,IAAMI,EAAUZ,KAChB,OACE,gBAACiB,EAAA,EAAD,CAAMG,UAAU,MAAMD,WAAS,EAACG,WAAW,SAASD,eAAe,SAASH,UAAWN,EAAQ0f,KAA/F,UACE,eAACrf,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,QAAnC,SACGhB,EAAM8c,MAAMhiB,SAGjB,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,QAAnC,SACGhB,EAAM8c,MAAMlgB,cClBjB4C,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6f,SAAU,CACR3I,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,gBAE/BK,KAAM,CACJjJ,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,qBAkCpBS,GA7BiC,SAAAlgB,GAAU,IAAD,EACjDI,EAAUZ,KAChB,OACE,gBAACiB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,eAAe,eAAeoF,MAAI,EAACC,GAAI,GAA9F,UACE,eAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQof,SAAUxe,QAAQ,WAAjD,wGACqBhB,EAAM4f,eAF7B,UAIG5f,EAAM8I,cAJT,aAIG,EAAcuG,KAAI,SAAC+P,EAAO7P,GAAR,OACjB,gBAAC9O,EAAA,EAAD,CAAMG,UAAU,SAASE,WAAW,SAASH,WAAS,EAAtD,UACE,eAACF,EAAA,EAAD,CACEwF,MAAI,EACJC,GAAI,GACJC,GAAI,EACJxF,WAAS,EACTG,WAAW,SACXD,eAAe,eACfH,UAAWN,EAAQ0f,KAPrB,SASGV,EAAMtkB,OAERskB,EAAM5hB,WAAW6R,KAAI,SAACyN,EAAO5N,GAAR,OACpB,eAAC,GAAD,CAAkB4N,MAAOA,GAAY5N,QAbmBK,UCnB9D/P,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6T,SAAU,CACRqD,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,gBAE/BU,aAAc,CACZtgB,QAASH,EAAMI,QAAQ,GACvBigB,aAAa,aAAD,OAAergB,EAAMuW,QAAQ+J,UAE3CI,eAAgB,CACd3e,UAAW,MACX5B,QAASH,EAAMI,QAAQ,IAEzBF,KAAM,CACJ2C,OAAQ7C,EAAMI,QAAQ,EAAG,EAAG,EAAG,SAwDtBugB,GAnDgC,SAAArgB,GAC7C,IAAMI,EAAUZ,KAEVyD,EAAOC,eAAe1I,QAAQ,UAC9B8lB,EAAUrd,IAAkB,UAATA,GAA6B,YAATA,GAE7C,EAAwBhD,oBAAS,GAAjC,mBAAOsgB,EAAP,KAAaC,EAAb,KAEMC,EAAG,uCAAG,sBAAA9mB,EAAA,sEACQ6E,GAAUwB,EAAM0gB,OAAOnlB,IAD/B,cAEA,GACRilB,GAAQ,GAHA,2CAAH,qDAOT,OACE,eAAC,IAAM1Z,SAAP,UACGyZ,GACC,eAAClb,EAAA,EAAD,CAAMrE,QAAQ,WAAWN,UAAWN,EAAQR,KAA5C,SACE,gBAACa,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAACC,UAAU,SAASE,WAAW,aAAaD,eAAe,aAAvF,UACE,gBAACJ,EAAA,EAAD,CACEC,UAAWN,EAAQ+f,aACnBxf,WAAS,EACTC,UAAU,MACVE,WAAW,SACXD,eAAe,aALjB,UAOE,eAACJ,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAIma,EAAU,EAAI,EAArC,SACE,eAAC9Z,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQoT,SAA9C,SACGxT,EAAM0gB,OAAOlN,aAGlB,eAAC/S,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACa,EAAA,EAAD,CAAQpK,MAAOoD,EAAM0gB,OAAOxmB,KAAM+M,UAAQ,MAE5C,eAACxG,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,WAAnD,SACGyf,GACC,eAACvf,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAASwf,EAApC,iGAMN,eAACja,EAAA,EAAD,CAAY9F,UAAWN,EAAQggB,eAA/B,SAAgDpgB,EAAM0gB,OAAOvmB,sBCnEnEqF,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ2C,OAAQ7C,EAAMI,QAAQ,EAAG,EAAG,EAAG,IAEjC6gB,SAAU,CACR9gB,QAASH,EAAMI,QAAQ,SA6Dd8gB,GA9C2B,SAAA5gB,GACxC,IAAMI,EAAUZ,KAEhB,EAA4BS,mBAAwB,CAAE9F,YAAa,GAAID,KAAM,IAA7E,mBAAOwmB,EAAP,KAAeG,EAAf,KASMC,EAAM,uCAAG,sBAAAnnB,EAAA,sEACQM,EAAa+F,EAAMlG,UAAW4mB,EAAOxmB,KAAMwmB,EAAOvmB,aAD1D,OAEE,OAFF,QAGX6F,EAAM+gB,UAAU,CAAExlB,GAAI,GAAIpB,YAAaumB,EAAOvmB,YAAaD,KAAMwmB,EAAOxmB,KAAMsZ,SAAU,WAH7E,2CAAH,qDAOZ,OACE,eAACnO,EAAA,EAAD,CAAMrE,QAAQ,WAAWN,UAAWN,EAAQR,KAA5C,SACE,gBAACa,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,eAAe,SAAnF,UACE,eAACJ,EAAA,EAAD,CAAMC,UAAWN,EAAQugB,SAAUhgB,WAAS,EAACC,UAAU,MAAME,WAAW,SAASD,eAAe,WAAhG,SACE,eAACmG,EAAA,EAAD,CAAQpK,MAAO8jB,EAAOxmB,KAAMiH,SAnBjB,SAACC,EAAgBxE,GAClCikB,EAAU,CAAE1mB,YAAaumB,EAAOvmB,YAAaD,KAAM0C,SAoB/C,eAACsE,GAAA,EAAD,CACE3F,GAAG,4BACHqW,MAAM,iCACNoP,WAAS,EACTC,KAAM,EACNnJ,YAAY,0IACZ9W,QAAQ,WACRpE,MAAO8jB,EAAOvmB,YACdgH,SA1Bc,SAACC,GACrB,IAAMxE,EAAQwE,EAAME,OAAO1E,MAC3BikB,EAAU,CAAE1mB,YAAayC,EAAO1C,KAAMwmB,EAAOxmB,QAyBvCgnB,WAAS,IAEX,eAACzgB,EAAA,EAAD,CAAMC,UAAWN,EAAQugB,SAAUhgB,WAAS,EAACG,WAAW,SAASD,eAAe,WAAhF,SACE,eAACE,EAAA,EAAD,CAAQsF,MAAM,UAAUrF,QAAQ,YAAYC,QAAS6f,EAArD,4ECpDJthB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6f,SAAU,CACR3I,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,qBAsDpB0B,GAjDmC,SAAAnhB,GAChD,IAAMI,EAAUZ,KAEV4hB,EAAiB,uCAAG,WAAOvd,GAAP,eAAAlK,EAAA,sEACNiQ,GAAW5J,EAAMlG,WADX,OAClBiU,EADkB,QAEN,IAAdlK,GACFwd,EAAWtT,GAHW,2CAAH,sDAOvBnK,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAud,EAAkBvd,GACX,WACLA,GAAY,KAEb,IAEH,IAAMZ,EAAOC,eAAe1I,QAAQ,UACpC,EAAgCyF,mBAAkBD,EAAMshB,UAAxD,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA8BthB,mBAAmB,IAAjD,mBAAOuhB,EAAP,KAAgBH,EAAhB,KAcA,OACE,gBAAC5gB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASE,WAAW,SAASD,eAAe,eAAeoF,MAAI,EAACC,GAAI,GAA9F,UACE,eAACM,EAAA,EAAD,CAAY9F,UAAWN,EAAQof,SAAUxe,QAAQ,WAAjD,qEACgBhB,EAAM4f,eAEtB,gBAACnf,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAItF,UAAU,SAASD,WAAS,EAACE,eAAe,SAA/D,UACGoC,IAASqe,GAAY,eAAC,GAAD,CAAYP,UAlBtB,SAACU,GAEjB,IADA,IAAMC,EAAmB,GAClBF,EAAQhX,OAAS,GACtBkX,EAAOxH,KAAKsH,EAAQG,OAEtBD,EAAOxH,KAAKuH,GACZJ,EAAWK,EAAOvY,WAElBoY,GAAY,GACZvhB,EAAM4hB,gBASsD9nB,UAAWkG,EAAMlG,YAD3E,OAEG0nB,QAFH,IAEGA,OAFH,EAEGA,EAASnS,KAAI,SAACqR,EAAQnR,GAAT,OACZ,eAAC,GAAD,CAAamR,OAAQA,GAAanR,a,gCClDtCsS,GAAW,SAAC7hB,GAChB,IAAQ2T,EAAqC3T,EAArC2T,SAAU/W,EAA2BoD,EAA3BpD,MAAO2S,EAAoBvP,EAApBuP,MAAUuS,EAAnC,aAA6C9hB,EAA7C,IAEA,OACE,gDACEiD,KAAK,WACL8e,OAAQnlB,IAAU2S,EAClBhU,GAAE,4BAAuBgU,GACzB+C,kBAAA,uBAAiC/C,IAC7BuS,GALN,aAOGllB,IAAU2S,GAASoE,MAK1B,SAASqO,GAAUzS,GACjB,MAAO,CACLhU,GAAG,gBAAD,OAAkBgU,GACpB,gBAAgB,qBAAhB,OAAsCA,IAI1C,IAAM/P,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CE,KAAM,CACJwU,gBAAiB1U,EAAMuW,QAAQgM,WAAWpV,OAE5CqV,KAAM,CACJC,YAAY,aAAD,OAAeziB,EAAMuW,QAAQ+J,cA2D7BoC,GAlDU,SAACpiB,GACxB,IAAMI,EAAUZ,KAChB,EAA0ByF,IAAMhF,SAAS,GAAzC,mBAAOrD,EAAP,KAAcylB,EAAd,KAUA,OACE,sBAAK3hB,UAAWN,EAAQR,KAAxB,SACE,gBAACa,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACJ,EAAA,EAAD,CAAMC,UAAWN,EAAQ8hB,KAAMjc,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAhD,SACE,gBAACmc,GAAA,EAAD,CACEC,YAAY,WACZvhB,QAAQ,aACRpE,MAAOA,EACPuE,SAhBW,SAACC,EAAgBmb,GACpC8F,EAAS9F,IAgBDnV,aAAW,gBACXob,UAAU,UANZ,UAQE,eAACC,GAAA,EAAD,cAAK7Q,MAAM,oDAAeoQ,GAAU,KACpC,eAACS,GAAA,EAAD,cAAK7Q,MAAM,wFAAqBoQ,GAAU,KAC1C,eAACS,GAAA,EAAD,cAAK7Q,MAAM,wCAAaoQ,GAAU,UAGtC,gBAACvhB,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC,GAAD,CAAUvJ,MAAOA,EAAO2S,MAAO,EAA/B,SACE,eAAC,GAAD,CAAoBqQ,YAAa5f,EAAMwD,QAAQ1I,KAAM+kB,mBAAoB7f,EAAMwD,QAAQrJ,gBAEzF,eAAC,GAAD,CAAUyC,MAAOA,EAAO2S,MAAO,EAA/B,SACE,eAAC,GAAD,CAAeqQ,YAAa5f,EAAMwD,QAAQ1I,KAAMgO,OAAQ9I,EAAMmf,gBAEhE,eAAC,GAAD,CAAUviB,MAAOA,EAAO2S,MAAO,EAA/B,SACE,eAAC,GAAD,CACEqQ,YAAa5f,EAAMwD,QAAQ1I,KAC3BhB,UAAWkG,EAAMwD,QAAQjI,GACzB+lB,SAAUthB,EAAMwD,QAAQ8d,SACxBM,aAjCS,WACnB5hB,EAAMwD,QAAQ8d,UAAW,gBCnDvB9hB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6f,SAAU,CACR3I,SAAU,EAAInX,EAAM6a,WAAW1D,SAC/BpU,WAAY/C,EAAM6a,WAAWkF,qBA6DpBiD,GAxDe,WAC5B,IAAM5Z,EAAS2U,cACTrd,EAAUZ,KAEhB,EAA8BS,qBAA9B,mBAAOuD,EAAP,KAAgBmf,EAAhB,KACA,EAAoC1iB,qBAApC,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAA8B3iB,mBAAiB,IAA/C,mBAAOyD,EAAP,KAAgBC,EAAhB,KACMJ,EAAS,mCA2Bf,OAzBAK,qBAAU,WACR,IAAIC,GAAY,EAmBhB,OAlBa,uCAAG,gCAAAlK,EAAA,sEACIkQ,GAAU,OAACf,QAAD,IAACA,OAAD,EAACA,EAAQ+Z,WADvB,cACR9U,EADQ,gBAEMjE,GAAa,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAQ+Z,WAF5B,OAER/F,EAFQ,OAIVjZ,IACF8e,EAAW5U,GACX6U,EAAc9F,IACRhZ,EAAM,IAAIC,OACZC,IAAJ,UAAaT,GAAb,OAAsBwK,EAAItK,QAEtBI,IACFC,EAAIgf,OAAS,kBAAMnf,EAAW,GAAD,OAAIJ,GAAJ,OAAawK,EAAItK,UAC9CK,EAAIO,QAAU,kBAAMV,EAAW,GAAD,OAAIJ,EAAJ,iBAZpB,2CAAH,oDAgBb0a,GAEO,WACLpa,GAAY,KAEb,CAACiF,EAAO+Z,YAGT,gBAAC,IAAM/b,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASC,WAAW,SAASH,WAAS,EAAlG,SACE,gBAAC0E,EAAA,EAAD,WACE,eAAC5E,EAAA,EAAD,CAAMI,eAAe,eAAeF,WAAS,EAA7C,SACE,eAAC6F,EAAA,EAAD,CAAY9F,UAAWN,EAAQof,SAAUxe,QAAQ,WAAW2F,UAAU,KAAtE,gBACGnD,QADH,IACGA,OADH,EACGA,EAAS1I,SAGb0I,GAAWhG,GACV,eAAC,GAAD,CAAqBgG,QAASA,EAAS2b,YAAa3hB,EAAYuhB,MAAOrb,IAExEF,GAAWhG,GAAc,eAAC,GAAD,CAAkBgG,QAASA,EAAS2b,YAAa3hB,eC3DjFgC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNC,UAAWtQ,EAAMI,QAAQ,IAE3BiC,OAAQ,CACNiO,UAAWtQ,EAAMI,QAAQ,SAoKhBijB,GA3JuC,SAAA/iB,GACpD,IAAMI,EAAUZ,KAEVwjB,EAAY,SAACC,GAAD,MAAkC,CAClDvnB,MAAOunB,EAAQvnB,MACfC,SAAUsnB,EAAQtnB,SAClBG,UAAWmnB,EAAQnnB,UACnBC,WAAYknB,EAAQlnB,WACpBF,YAAaonB,EAAQpnB,YACrB4L,MAAOwb,EAAQxb,MACf7L,MAAOqnB,EAAQrnB,QAGjB,EAA4BqJ,IAAMhF,SAAmB,IAArD,mBAAO4P,EAAP,KAAeQ,EAAf,KACA,EAAwBpL,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAEA,EAAsCrL,IAAMhF,UAAS,GAArD,mBAAOijB,EAAP,KAAmBC,EAAnB,KACA,EAA8Ble,IAAMhF,SAAmB,CACrDvE,MAAO,GACPC,SAAU,GACVG,UAAW,GACXC,WAAY,GACZH,MAAO,GACPC,YAAa,GACb4L,MAAO,KAPT,mBAAO6J,EAAP,KAAgB8R,EAAhB,KAUIpjB,EAAMsR,UAAY4R,IACpBE,EAAWpjB,EAAMsR,SACjB6R,GAAgB,IAGlB,IAoCME,EAAqB,uCAAG,4BAAA1pB,EAAA,mEACvBqG,EAAMsR,eADiB,aACvB,EAAe7J,MADQ,4BAE1BmJ,EAF0B,SAEThJ,GAAoB0J,GAFX,qEAI1BV,EAJ0B,UAIT9I,GAAoBwJ,GAJX,+EAAH,qDAQrBV,EAAa,SAACC,GAClB,OAAQA,EAASC,MACf,KAAKvJ,GACHwJ,OAAO/H,SAASgI,QAAQ,KACxB,MACF,KAAKzJ,GACH+I,EAAWO,EAASjB,SACpBS,EAAUQ,EAAShB,QACnBhL,GAAQ,KAKd,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0U,EAAQ5V,MACfyF,SA/DoB,SAACC,GACzB,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQ5nB,MAAQ0F,EAAME,OAAO1E,MAC7BwmB,EAAWE,IA6DP1R,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnB7G,KAAK,WACLtM,MAAO0U,EAAQ3V,SACfwF,SAlEuB,SAACC,GAC5B,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQ3nB,SAAWyF,EAAME,OAAO1E,MAChCwmB,EAAWE,IAgEP1R,MAAM,uCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0U,EAAQ1V,MACfuF,SApEoB,SAACC,GACzB,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQ1nB,MAAQwF,EAAME,OAAO1E,MAC7BwmB,EAAWE,IAkEP1R,MAAM,QACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0U,EAAQxV,UACfqF,SAtEwB,SAACC,GAC7B,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQxnB,UAAYsF,EAAME,OAAO1E,MACjCwmB,EAAWE,IAoEP1R,MAAM,qBACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,iBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0U,EAAQvV,WACfoF,SAxEyB,SAACC,GAC9B,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQvnB,WAAaqF,EAAME,OAAO1E,MAClCwmB,EAAWE,IAsEP1R,MAAM,6CACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0U,EAAQzV,YACfsF,SA1EoB,SAACC,GACzB,IAAMkiB,EAAUN,EAAU1R,GAC1BgS,EAAQznB,YAAcuF,EAAME,OAAO1E,MACnCwmB,EAAWE,IAwEP1R,MAAM,kFACN5Q,QAAQ,aAEV,eAACD,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2B,OACnBsE,MAAM,UACNrF,QAAQ,YACRC,QAASoiB,EALX,0HASA,eAAC,GAAD,CAAezT,QAASA,EAASC,OAAQA,EAAQ3K,KAAMA,EAAML,QAASA,QCpJ7D0e,GAjBmC,kBAChD,gBAAC,IAAMzc,SAAP,WACE,yBAAQ9C,IAAI,yCAAyCwf,OAAK,EAACC,OAAK,IAChE,eAAC,GAAD,IACA,eAAChjB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASC,WAAW,SAAnD,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASC,WAAW,SAASH,WAAS,EAAlG,SACE,gBAAC0E,EAAA,EAAD,CAAMqe,MAAO,CAAE7jB,QAAS,QAAUmB,QAAQ,WAA1C,UACE,eAACwF,EAAA,EAAD,CAAYxF,QAAQ,KAAK0iB,MAAO,CAAEvhB,cAAe,QAAjD,gFAGA,eAAC,GAAD,CAAkBmP,QAASI,QAAQiS,mB,SCjB9BC,G,mFAAf,WAAsBnqB,EAAaC,GAAnC,SAAAC,EAAA,sEACgBC,IAAMgqB,IAAInqB,EAAKC,GAD/B,uCACsCA,MADtC,4C,oEAIA,WAA8BK,EAAeD,GAA7C,SAAAH,EAAA,sEACeiqB,GAAI,2BAA4B,CAAE7pB,MAAOA,EAAOD,UAAWA,IAD1E,oF,+BAIe+pB,G,qFAAf,WAAoCtoB,EAAYT,EAAcX,GAA9D,eAAAR,EAAA,6DACQD,EAAO,CAAE6B,KAAIT,OAAMX,eAD3B,SAEeypB,GAAI,uBAAwBlqB,GAF3C,oF,+BAKeoqB,G,mFAAf,WAAoCvoB,EAAYT,GAAhD,eAAAnB,EAAA,6DACQD,EAAO,CAAE6B,KAAIT,QADrB,SAEe8oB,GAAI,uBAAwBlqB,GAF3C,oF,+BAKeqqB,G,yFAAf,WACExoB,EACAT,EACAX,EACAa,EACAC,GALF,eAAAtB,EAAA,6DAOQD,EAAO,CAAE6B,KAAIT,OAAMX,cAAaa,gBAAeC,oBAPvD,SAQe2oB,GAAI,iBAAkBlqB,GARrC,oF,+BAWesqB,G,6FAAf,WACEzoB,EACAT,EACAuB,EACAC,EACAC,EACAC,EACAC,GAPF,eAAA9C,EAAA,6DASQD,EAAO,CAAE6B,KAAIT,OAAMuB,YAAWC,QAAOC,WAAUC,WAAUC,oBATjE,SAUemnB,GAAI,sBAAuBlqB,GAV1C,oF,+BAaeuqB,G,iGAAf,WACE1oB,EACAK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GATF,eAAAxC,EAAA,6DAWQD,EAAO,CACX6B,KACAK,QACAC,cACAC,YACAC,aACAC,WACAC,SAAUE,EAAeF,EAAW,KACpCC,YAAaC,EAAe,KAAOD,GAnBvC,SAqBe0nB,GAAI,gBAAiBlqB,GArBpC,oF,+BAwBewqB,G,qFAAf,WAAoC3oB,EAAYoB,EAAyBC,GAAzE,eAAAjD,EAAA,6DACQD,EAAO,CAAE6B,KAAIqB,QAAOD,mBAD5B,SAEeinB,GAAI,sBAAuBlqB,GAF1C,oF,+BAKeyqB,G,iGAAf,WACE5oB,EACAT,EACAX,EACAiD,EACAC,EACAlC,EACAmC,EACAC,EACAC,GATF,iBAAA7D,EAAA,6DAWQ8D,EAAW,IAAIC,UACZC,OAAO,KAAMpC,GACtBkC,EAASE,OAAO,OAAQ7C,GACxB2C,EAASE,OAAO,cAAexD,GAC/BsD,EAASE,OAAO,QAAhB,UAA4BP,IAC5BK,EAASE,OAAO,uBAAhB,UAA2CN,IAC3CI,EAASE,OAAO,aAAcxC,GAC9BsC,EAASE,OAAO,aAAcL,GAC1BC,GACFE,EAASE,OAAO,UAAWJ,GAGvBK,EAAkBC,KAAKC,UAAUN,GACvCC,EAASE,OAAT,kBAAmCC,GAxBrC,UA0BegmB,GAAI,eAAgBnmB,GA1BnC,sF,+BA6Be2mB,G,mFAAf,WAA4B7oB,EAAYT,GAAxC,eAAAnB,EAAA,6DACQD,EAAO,CAAE6B,KAAIT,QADrB,SAEe8oB,GAAI,wBAAyBlqB,GAF5C,oF,+BAKe2qB,G,qFAAf,WAA0B9oB,EAAYT,EAAcmD,GAApD,eAAAtE,EAAA,6DACQD,EAAO,CAAE6B,KAAIT,OAAMmD,YAD3B,SAEe2lB,GAAI,sBAAuBlqB,GAF1C,oF,+BAKe4qB,G,+FAAf,WACE/oB,EACAT,EACAR,EACA6D,EACAC,EACAC,EACAC,EACAzC,GARF,eAAAlC,EAAA,6DAUQD,EAAO,CAAE6B,KAAIT,OAAMR,SAAQ6D,aAAYC,WAAUC,aAAYC,cAAazC,eAVlF,SAWe+nB,GAAI,qBAAsBlqB,GAXzC,oF,+BAce6qB,G,6FAAf,WACEhpB,EACAT,EACAR,EACA6D,EACAC,EACAC,EACAxC,GAPF,eAAAlC,EAAA,6DASQD,EAAO,CAAE6B,KAAIT,OAAMR,SAAQ6D,aAAYC,WAAUC,aAAYxC,eATrE,SAUe+nB,GAAI,wBAAyBlqB,GAV5C,oF,+BAae8qB,G,mFAAf,WAAoCjpB,EAAYkpB,GAAhD,eAAA9qB,EAAA,6DACQD,EAAO,CAAE6B,KAAIkpB,UADrB,SAEeb,GAAI,gBAAiBlqB,GAFpC,oF,+BAKegrB,G,iFAAf,WAAoCnpB,GAApC,SAAA5B,EAAA,sEACeiqB,GAAI,iBAAD,OAAkBroB,GAAM,MAD1C,oF,sBCnIA,IAAMiE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRziB,WAAYxC,EAAMI,QAAQ,GAC1B2C,WAAY/C,EAAM6a,WAAWkF,gBAE/BmF,MAAO,CACLve,MAAO,OACP5D,WAAY,UA2KHoiB,GAtKY,WACzB,IAAM5G,EAAO,uCAAG,WAAOpa,GAAP,iBAAAlK,EAAA,2DAERsJ,EAAOC,eAAe1I,QAAQ,YACf,UAATyI,EAHE,gCAICoG,KAJD,OAIZ0E,EAJY,8CAMAzE,KANA,OAMZyE,EANY,eASVlK,GACFihB,EAAa/W,EAAI4P,UAVL,4CAAH,sDAcPoH,EAAoB,SAACC,EAA2BC,GACpD,IACIC,EAF0E,EAC1EC,EAAO,EADmE,eAGxDH,GAHwD,yBAGnEI,EAHmE,SAI5EF,EAAOD,EAAUlQ,MAAK,SAAA9O,GAAI,OAAIA,EAAKzC,QAAQjI,KAAO6pB,EAAQ7pB,SAExD4pB,GAAQD,EAAKnrB,MAAQmrB,EAAK1hB,QAAQpG,QAHtC,2BAAuC,IAHuC,8BAW9E,OADAioB,EAAeF,GACRA,GAGH9kB,EAAU,SAACC,EAAkB/E,GACpB2H,eAAe1I,QAAQ,W,uCAElC8qB,CAAehlB,EAAU/E,GAG3B,IAAMgqB,EAASN,EAAU9K,WAAU,SAAAlU,GAAI,OAAIA,EAAKzC,QAAQjI,KAAQA,KAChE0pB,EAAUM,GAAQxrB,MAAQuG,EAC1BykB,EAAkBC,EAAgBC,IAG9BO,EAAU,uCAAG,WAAO1rB,GAAP,+BAAAH,EAAA,yDACXsJ,EAAOC,eAAe1I,QAAQ,UACpCirB,QAAQC,IAAIziB,IAERA,GAAiB,UAATA,EAJK,gCAKAtE,GAAe7E,GALf,OAKf6rB,EALe,+BAOT1hB,EAAO1J,aAAaC,QAAQ,gBAE1BorB,EAAM3hB,EAAKyG,MAAM,KACjB6E,EAAQqW,EAAIzL,WAAU,SAAAxgB,GAAC,OAAIA,IAAMG,KACvC8rB,EAAIvL,OAAO9K,EAAO,GAClBhV,aAAamK,QAAQ,YAAakhB,EAAInb,KAAK,OAZ9B,QAgBZxH,GAAmB,IAAX0iB,IACLE,EAAUZ,EAAU9K,WAAU,SAAAlU,GAAI,OAAIA,EAAKzC,QAAQjI,KAAOzB,MAC1DgsB,EAFmB,aAEAb,IACZ5K,OAAOwL,EAAS,GAEvBE,EAAgBf,EAAe7K,WAAU,SAAAlU,GAAI,OAAIA,EAAK1K,KAAOzB,MAC7D4f,EANmB,aAMNsL,IACZ3K,OAAO0L,EAAe,GAC7BC,EAAkBtM,GAElBoL,EAAagB,GACbf,EAAkBC,EAAgBc,IA3BnB,4CAAH,sDA+BV9f,EAAY,SAACxC,EAAkByiB,GACnC,IAAIC,EACJ,GAAID,EACFC,EAAS,uBAAOlB,GAAP,CAAuBxhB,IAChCwiB,EAAkBE,OACb,CACL,IAAML,EAAUb,EAAe7K,WAAU,SAAAlU,GAAI,OAAIA,EAAK1K,KAAOiI,EAAQjI,OACrE2qB,EAAS,aAAOlB,IACN3K,OAAOwL,EAAS,GAC1BG,EAAkBE,GAGpBnB,EAAkBmB,EAAWjB,IAgB/B,EAAkChlB,mBAAqB,IAAvD,mBAAOglB,EAAP,KAAkBH,EAAlB,KACA,EAA4C7kB,mBAAoB,IAAhE,mBAAO+kB,EAAP,KAAuBgB,EAAvB,KACA,EAAsC/lB,mBAAiB,GAAvD,mBAAOkmB,EAAP,KAAoBd,EAApB,KAEAzhB,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAA/E,0DAIF,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,gBAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,GAAIF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA/E,YACKqkB,GAAaA,EAAUza,OAAS,IACjC,eAAC/J,EAAA,EAAD,CAAMsG,aAAa,UAAUpG,WAAS,EAACE,eAAe,SAAtD,SACE,eAAC2F,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQwkB,MAA3D,gQAKJ,eAACnkB,EAAA,EAAD,UACGwkB,GACCA,EAAU5V,KAAI,SAAA+W,GAAQ,OACpB,eAAC,GAAD,CACE5iB,QAAS4iB,EAAS5iB,QAElB6D,SAAS,EACTH,UAAU,EACVI,aAAa,EACbvN,MAAOqsB,EAASrsB,MAChBsG,QAASA,EACT0E,SAAUygB,EACVxf,UAAWA,GAPNogB,EAAS5iB,QAAQjI,cAalC,gBAACkF,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeC,WAAW,SAAzE,UACE,gBAAC0F,EAAA,EAAD,CAAY9F,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAAhE,6CACUwf,EADV,aAGA,eAACplB,EAAA,EAAD,CAAQC,QAAQ,YAAYqlB,SAAUrB,EAAexa,OAAS,EAAGvJ,QArEtD,WACrB,GAAI+jB,EAAexa,OAAS,EAAG,CAC7B,IAD6B,EACzBkP,EAAS,GADgB,eAEVsL,GAFU,2BAElB/e,EAFkB,QAG3ByT,GAAM,UAAOzT,EAAK1K,GAAZ,sBAAkB0pB,EAAUlQ,MAAK,SAAA8E,GAAC,OAAIA,EAAErW,QAAQjI,KAAO0K,EAAK1K,aAA5D,aAAkB,EAA+CxB,MAAjE,MADR,2BAAoC,IAFP,8BAK7B2f,EAASA,EAAO2F,UAAU,EAAG3F,EAAOlP,OAAS,GAE7CkH,QAAQC,UAAU,GAAI,MAAtB,4BAAkD+H,IAClD3I,OAAO/H,SAASgI,QAAhB,4BAA6C0I,MA4DqDrT,MAAM,UAAhG,2GCnLR7G,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRziB,WAAYxC,EAAMI,QAAQ,GAC1B2C,WAAY/C,EAAM6a,WAAWkF,qBAqEpB6G,GAhEgB,WAC7B,IAAMrI,EAAO,uCAAG,WAAOpa,GAAP,eAAAlK,EAAA,sEACK4P,KADL,OACRwE,EADQ,OAEVlK,GACF0iB,EAAiBxY,EAAI4P,UAHT,2CAAH,sDAOP6H,EAAU,uCAAG,WAAO1rB,GAAP,iBAAAH,EAAA,sEACIiF,GAAmB9E,GADvB,OAEF,IAFE,SAGT+rB,EAAUW,EAAcrM,WAAU,SAAAlU,GAAI,OAAIA,EAAK1K,KAAOzB,MACtD2sB,EAFU,aAEaD,IACZnM,OAAOwL,EAAS,GACjCJ,QAAQC,IAAIe,GACZF,EAAiBE,IAPF,2CAAH,sDAWhB,EAA0CxmB,mBAAoB,IAA9D,mBAAOumB,EAAP,KAAsBD,EAAtB,KAEA3iB,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAA/E,sEAIF,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,eAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA9E,SACE,eAACH,EAAA,EAAD,UACG+lB,EAAcnX,KAAI,SAAAqX,GAAY,OAC7B,eAAC,GAAD,CACEljB,QAASkjB,EAETrf,SAAS,EACTH,UAAU,EACVnC,SAAUygB,GAHLkB,EAAanrB,wB,UChElCiE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX7E,KAAM,CACJ+b,SAAU,IAAMnX,EAAM6a,WAAW1D,SACjCpU,WAAY/C,EAAM6a,WAAWkF,qBAuBpBkH,GAlB+B,SAAA3mB,GAC5C,IAAMI,EAAUZ,KACVonB,EAAc,oBAAgB5mB,EAAM6mB,SAAS/rB,MACnD,OACE,eAACuK,EAAA,EAAD,CAAMrE,QAAQ,WAAd,SACE,eAACP,EAAA,EAAD,CAAMI,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAApD,SACE,eAACmmB,GAAA,EAAD,CAAgBjgB,KAAM+f,EAAtB,SACE,eAACnmB,EAAA,EAAD,CAAMI,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIvF,WAAS,EAApD,SACE,eAAC6F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQtF,KAAMkG,QAAQ,WAA5D,SACGhB,EAAM6mB,SAAS/rB,gBCpBxB0E,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Bwd,aAAc,CACZ7a,WAAY,IACZ5C,QAASH,EAAMI,QAAQ,IAEzByd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,SA2DjBinB,GAtDsB,WACnC,IAAMje,EAAS2U,cAEf,EAAoCxY,IAAMhF,SAAqB,IAA/D,mBAAO+mB,EAAP,KAAmBC,EAAnB,KAgBAhiB,IAAMrB,WAAU,WACd,IAAIC,GAAY,EAShB,OARe,uCAAG,4BAAAlK,EAAA,sEACE6P,GAAa,OAACV,QAAD,IAACA,OAAD,EAACA,EAAQoe,oBADxB,OACVnZ,EADU,OAEZlK,GACFojB,EAAclZ,GAHA,2CAAH,oDAMfC,GAEO,WACLnK,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAChB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACtF,WAAS,EAACC,UAAU,MAAMC,eAAe,SAA5D,SACE,eAACJ,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASsF,GAAI,EAA5C,SACE,gBAAC1F,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAAC6F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQkd,aAActc,QAAQ,KAAK2F,UAAU,KAAnF,SACGmC,EAAOoe,qBAEV,eAACzmB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,eAAeC,WAAW,UAAUhB,QAAS,EAA5E,SACGknB,EAAW3X,KAAI,SAACpJ,EAAMsJ,EAAOqW,GAAd,OAAsBrW,EAAQ,IAAM,GAxC9C,SAACA,EAAe4X,GAAhB,OAChB,gBAAC1mB,EAAA,EAAD,CAAME,WAAS,EAACsF,MAAI,EAACC,GAAI,GAAgBpF,WAAW,UAAUD,eAAe,eAAef,QAAS,EAArG,UACE,eAACW,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGghB,EAAM5X,IAAU,eAAC,GAAD,CAAcsX,SAAUM,EAAM5X,OAEjD,eAAC9O,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGghB,EAAM5X,EAAQ,IAAM,eAAC,GAAD,CAAcsX,SAAUM,EAAM5X,EAAQ,OAE7D,eAAC9O,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGghB,EAAM5X,EAAQ,IAAM,eAAC,GAAD,CAAcsX,SAAUM,EAAM5X,EAAQ,SAR7BA,GAuCiC6X,CAAU7X,EAAOqW,mB,oBCzElFyB,GACqB,EADrBA,GAEU,EAFVA,GAGkB,EAHlBA,GAIc,EAJdA,GAKU,EALVA,GAMK,EANLA,GAOc,EAPdA,GAQM,EAGNC,GAAkB,SAAC/rB,GACvB,OAAQA,GACN,KAAK8rB,GACH,MAAO,6KACT,KAAKA,GACH,MAAO,qGACT,KAAKA,GACH,MAAO,6HACT,KAAKA,GACH,MAAO,0GACT,KAAKA,GACH,MAAO,2EACT,KAAKA,GACH,MAAO,iCACT,KAAKA,GACH,MAAO,6CACT,KAAKA,GACH,MAAO,mDACT,QACE,MAAO,kHCtBP7nB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4nB,KAAM,CACJvX,UAAWtQ,EAAMI,QAAQ,GACzB4B,aAAchC,EAAMI,QAAQ,SA4BnB0nB,GAnB6C,SAAAxnB,GAC1D,IAAMI,EAAUZ,KAChB,OACE,gBAACmW,GAAA,EAAD,WACE,eAACzB,GAAA,EAAD,IACClU,EAAMvF,cAAc4U,KAAI,SAAApJ,GAAI,OAC3B,gBAAC,IAAMa,SAAP,WACE,eAAC+O,GAAA,EAAD,UACE,gBAACpV,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACE,EAAA,EAAD,CAAQL,UAAWN,EAAQmnB,KAAM1gB,KAAI,kBAAaZ,EAAKnM,WAAvD,mBAAwEmM,EAAK2Z,eAC7E,eAACpZ,EAAA,EAAD,CAAY9F,UAAWN,EAAQmnB,KAA/B,mBAAyCthB,EAAK7I,MAA9C,mBAAyD6I,EAAKlM,cAGlE,eAACma,GAAA,EAAD,MAPmBjO,EAAKnM,kBCK5B0F,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqf,KAAM,CACJhP,UAAWtQ,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAEzBynB,KAAM,CACJvX,UAAWtQ,EAAMI,QAAQ,GACzB4B,aAAchC,EAAMI,QAAQ,SA2InB2nB,GAtI+C,SAAAznB,GAC5D,IAAMI,EAAUZ,KAEhB,EAA4BS,mBAASD,EAAM0nB,SAASjD,QAApD,mBAAOA,EAAP,KAAekD,EAAf,KAEMC,EAAS,uCAAG,sBAAAjuB,EAAA,sEACE6qB,GAAqBxkB,EAAM0nB,SAASnsB,GAAI8rB,IAD1C,cAEN,GACRM,EAAUN,IAHI,2CAAH,qDAOTQ,EAAM,uCAAG,sBAAAluB,EAAA,sEACK+qB,GAAqB1kB,EAAM0nB,SAASnsB,IADzC,cAEH,GACRosB,EAAUN,IAHC,2CAAH,qDAONS,EAAM,uCAAG,sBAAAnuB,EAAA,sEACK6qB,GAAqBxkB,EAAM0nB,SAASnsB,GAAI8rB,IAD7C,cAEH,GACRM,EAAUN,IAHC,2CAAH,qDAOZ,OACE,eAAChiB,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,SACE,eAACP,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACpF,eAAe,SAASkG,aAAa,aAAapG,WAAS,EAA9E,SACE,gBAACF,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASD,WAAS,EAAtD,UACE,eAAC6F,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQmnB,KAA3D,SACGvnB,EAAM+nB,WAET,gBAACpS,GAAA,EAAD,WACE,eAACzB,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,4EAAyBxG,EAAM0nB,SAASM,kBAE1C,eAAC9T,GAAA,EAAD,IACClU,EAAM0nB,SAASO,YACd,gBAAC,IAAMnhB,SAAP,WACE,eAAC+O,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,gEAAuBxG,EAAM0nB,SAASO,gBAExC,eAAC/T,GAAA,EAAD,OAGJ,eAAC2B,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,oDAAqB8gB,GAAgB7C,QAEvC,eAACvQ,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,qGAA8BxG,EAAM0nB,SAASQ,UAA7C,cAEF,eAAChU,GAAA,EAAD,KACElU,EAAMmoB,cACN,gBAAC5S,GAAA,EAAD,CAAWvU,QAAQ,WAAnB,UACE,eAACwU,GAAA,EAAD,CAAkBC,WAAY,eAAC,KAAD,IAA9B,SACE,eAACjP,EAAA,EAAD,iEAEF,eAACkP,GAAA,EAAD,UACG1V,EAAM0nB,SAAS9sB,SACd,eAAC6F,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAAlB,SACE,gBAAC0P,GAAA,EAAD,WACE,eAACE,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,4EAAyBxG,EAAM0nB,SAAS9sB,SAASwtB,kBAEnD,eAAClU,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,+FAA6BxG,EAAM0nB,SAAS9sB,SAASytB,oBAEvD,eAACnU,GAAA,EAAD,IACA,eAAC2B,GAAA,EAAD,UACE,gBAACrP,EAAA,EAAD,uHAAiCxG,EAAM0nB,SAAS9sB,SAAS0tB,aAAzD,cAEF,eAACpU,GAAA,EAAD,SAIJ,gBAAC,IAAMpN,SAAP,WACE,eAACN,EAAA,EAAD,iHACA,eAAC/F,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAAC,GAAD,CAAYsd,OAAQne,EAAM0nB,SAASa,2BAO/C,gBAAChT,GAAA,EAAD,CAAWvU,QAAQ,WAAnB,UACE,eAACwU,GAAA,EAAD,CAAkBC,WAAY,eAAC,KAAD,IAA9B,SACE,eAACjP,EAAA,EAAD,gGAEF,eAACkP,GAAA,EAAD,UACE,eAACjV,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAf,SACE,eAAC,GAAD,CAAqBzL,cAAeuF,EAAM0nB,SAASjtB,uBAIzD,eAACob,GAAA,EAAD,UACE,gBAACpV,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACGb,EAAMwoB,YACL/D,IAAW4C,IACX5C,IAAW4C,IACX5C,IAAW4C,IACT,eAACtmB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS4mB,EAArC,8DAIH7nB,EAAMyoB,YACLhE,IAAW4C,IACX5C,IAAW4C,IACX5C,IAAW4C,IACT,eAACtmB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS6mB,EAArC,4CAIH9nB,EAAM0oB,YACLjE,IAAW4C,IACX5C,IAAW4C,IACX5C,IAAW4C,IACT,eAACtmB,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUpF,QAAS2mB,EAArD,oFCzIdpoB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXgpB,QAAS,CACPzmB,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRxiB,cAAezC,EAAMI,QAAQ,IAE/Bkf,KAAM,CACJhP,UAAWtQ,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAEzB8oB,MAAO,CACLrmB,OAAQ7C,EAAMI,QAAQ,IAExBynB,KAAM,CACJvX,UAAWtQ,EAAMI,QAAQ,GACzB4B,aAAchC,EAAMI,QAAQ,IAE9B+oB,QAAS,CACP7Y,UAAWtQ,EAAMI,QAAQ,SA6UhBgpB,GAxUkB,WAC/B,IAAMC,EAAU,uCAAG,WAAOllB,GAAP,iBAAAlK,EAAA,6DACXD,EAAOsvB,IADI,SAEE5uB,EAAmBV,GAFrB,OAEXqU,EAFW,OAGblK,IACFolB,EAAmBlb,GACnBmb,EAAOnb,EAAIob,MALI,2CAAH,sDAShBvlB,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAklB,EAAWllB,GACJ,WACLA,GAAY,KAEb,IAEH,IAAMmlB,EAAc,WAClB,IAIII,EALsC,EACpCzD,EAAS,GAET0D,EADS,IAAItgB,gBAAgBC,SAASC,QACrBjB,IAAI,SACrB4d,EAAG,OAAGyD,QAAH,IAAGA,OAAH,EAAGA,EAAS3e,MAAM,KAJe,eAMvBkb,GANuB,IAM1C,2BAAoC,CAClCwD,EADkC,QACnB1e,MAAM,KACrBib,EAAOzL,KAAK,CAAEpgB,UAAWsvB,EAAQ,GAAIrvB,MAAOY,SAASyuB,EAAQ,OARrB,8BAW1C,OAAOzD,GAGH2D,EAAwB,SAACC,GAAD,MAC3B,CAAEC,iBAAkBD,EAAKC,iBAAkBC,kBAAmBF,EAAKE,oBAEhExmB,EAAOC,eAAe1I,QAAQ,UACpC,EAA8CyF,qBAA9C,mBAAOypB,EAAP,KAAwBT,EAAxB,KACA,EAAwChpB,mBAAuB,CAAEupB,iBAAkB,GAAIC,kBAAmB,KAA1G,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAwC3pB,mBAAiB,UAAzD,mBAAO4pB,EAAP,KAAqBC,EAArB,KACA,EAAwC7pB,mBAAiB,IAAzD,mBAAOmoB,EAAP,KAAqB2B,EAArB,KACA,EAA4C9pB,mBAAiB,IAA7D,mBAAO+pB,EAAP,KAAuBC,EAAvB,KACA,EAA4BhqB,mBAAiB,IAA7C,mBAAOke,EAAP,KAAe+L,EAAf,KACA,EAAsBjqB,mBAAiB,GAAvC,mBAAOkpB,EAAP,KAAYD,EAAZ,KACA,EAAqCjpB,qBAArC,mBAAOkqB,EAAP,KAAwBC,EAAxB,KAEMhqB,EAAUZ,KA4ChB,EAAwByF,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,GAA4BI,IAAMhF,SAAmB,IAArD,qBAAO4P,GAAP,MAAeQ,GAAf,MAEMlL,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJic,GAAM,uCAAG,4CAAAnnB,EAAA,yDACP0wB,EAAM,GACRpnB,GAAiB,aAATA,IACN0mB,EAAaH,iBAAiBhf,OAAS,GACzC6f,EAAInQ,KAAK,wMAEPyP,EAAaF,kBAAkBjf,OAAS,GAC1C6f,EAAInQ,KAAK,4QAIQ,WAAjB2P,EACE1L,EAAO3T,OAAS,GAClB6f,EAAInQ,KAAK,kLAGPkO,EAAa5d,OAAS,GACxB6f,EAAInQ,KAAK,wMAEP8P,EAAexf,OAAS,GAC1B6f,EAAInQ,KAAK,uIAITwP,GAAmBA,EAAgBjvB,cAAc+P,OAAS,GAC5D6f,EAAInQ,KAAK,gMAGPmQ,EAAI7f,OAAS,GA5BJ,gBA6BX6F,GAAUga,GACVxlB,GAAQ,GA9BG,8BAgCLnL,EAAO,CACX8vB,iBAAkBG,EAAaH,iBAC/BC,kBAAmBE,EAAaF,kBAChCnvB,OAAQ,EACRG,cAAgBivB,EAAoCjvB,eAGjC,WAAjBovB,EACFnwB,EAAK4wB,iBAAmB3vB,SAASwjB,GAEjCzkB,EAAKkB,SAAW,CAAEytB,eAAgB2B,EAAgB5B,aAAcA,EAAc9tB,OAAQ,GA1C7E,UA6CUI,EAAehB,GA7CzB,QA8CX,GADMisB,EA7CK,QAgDT,GADAyE,EAAUzE,IACL1iB,IACG5I,EAAQE,aAAaC,QAAQ,aAC7B+vB,EAFG,OAEOlwB,QAFP,IAEOA,OAFP,EAEOA,EAAOqQ,MAAM,KAEzBgf,GAAmBa,GAAS,CAAC,EAAD,aACXb,EAAgBjvB,eADL,IAC9B,IAD8B,iBACnByqB,EADmB,SAE5B3V,EAAQgb,EAAQpQ,WAAU,SAAAjH,GAAC,OAAIA,IAAMgS,EAAKprB,gBAClB,IAAXyV,IACJ,OAAPgb,QAAO,IAAPA,KAASlQ,OAAO9K,EAAO,KAH3B,uBAAmD,IADrB,8BAO9BhV,aAAamK,QAAQ,YAAa6lB,EAAQ9f,KAAK,YAInD4f,EAAInQ,KAAK,qLACT7J,GAAUga,GACVxlB,GAAQ,GAjEC,4CAAH,qDAsEZ,OACE,gBAAC,IAAMiC,SAAP,WACE,eAAC,GAAD,IACA,eAACtB,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAACW,EAAA,EAAD,CAAOD,QAASV,GAAaY,SAAS,QAAtC,SACE,8BACG8J,GAAOR,KAAI,SAACmb,EAAGtX,GAAJ,OACV,8BAAasX,GAAJtX,YAKjB,eAACzS,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASC,WAAW,SAAnD,SACE,gBAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASD,WAAS,EAAtD,WACIwpB,GACA,gBAAC,IAAMrjB,SAAP,WACE,eAACzB,EAAA,EAAD,CAAM3E,UAAWN,EAAQuoB,QAAS3nB,QAAQ,WAA1C,SACE,eAACwF,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQukB,SAA3D,iHAIF,eAACtf,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,SACE,eAACP,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACpF,eAAe,SAASkG,aAAa,aAAapG,WAAS,EAA9E,SACE,gBAACF,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASD,WAAS,EAAtD,UACE,eAAC6F,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQmnB,KAA3D,wFAGA,eAACliB,EAAA,EAAD,UACE,gBAACsQ,GAAA,EAAD,WACE,eAACzB,GAAA,EAAD,IACCwV,GAAmB,eAAC,GAAD,CAAqBjvB,cAAeivB,EAAgBjvB,qBAG5E,gBAAC+L,EAAA,EAAD,CAAYE,MAAM,QAAQ1F,QAAQ,KAAKN,UAAWN,EAAQyoB,QAA1D,oDACUa,QADV,IACUA,OADV,EACUA,EAAiBP,IAD3B,mBAMI,aAATlmB,GACC,gBAACoC,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,UACE,eAACwF,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQmnB,KAA3D,gHAGA,eAAC9mB,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACpF,eAAe,SAASF,WAAS,EAApD,SACE,gBAACF,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASD,WAAS,EAAtD,UACE,eAACO,GAAA,EAAD,CACER,UAAWN,EAAQwoB,MACnBhsB,MAAO+sB,EAAaH,iBACpBroB,SAjLH,SAACC,GAClB,IAAMqpB,EAASrpB,EAAME,OAAO1E,MACtB0mB,EAAUgG,EAAsBK,GACtCrG,EAAQkG,iBAAmBiB,EAC3Bb,EAAgBtG,IA8KItiB,QAAQ,WACR4Q,MAAM,oFAER,eAAC1Q,GAAA,EAAD,CACER,UAAWN,EAAQwoB,MACnBhsB,MAAO+sB,EAAaF,kBACpBtoB,SAjLF,SAACC,GACnB,IACMqpB,EAASrpB,EAAME,OAAO1E,MAC5B,GAFc,cAEJ2E,KAAKkpB,GAAS,CACtB,IAAMnH,EAAUgG,EAAsBK,GACtCrG,EAAQmG,kBAAoBgB,EAC5Bb,EAAgBtG,KA4KEtiB,QAAQ,WACR4Q,MAAM,4FAMhB,gBAACvM,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,UACE,eAACwF,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQmnB,KAA3D,8FAGA,gBAAC9mB,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACpF,eAAe,eAAeD,UAAU,SAASE,WAAW,SAASH,WAAS,EAAjG,UACE,gBAAC+pB,GAAA,EAAD,CAAYhqB,UAAWN,EAAQwoB,MAAO+B,KAAG,EAAC/tB,MAAOitB,EAAc1oB,SApLpD,SAACC,EAA4CxE,GACtEktB,EAAgBltB,GACZ8sB,GAEAR,EADY,WAAVtsB,EACK8sB,EAAgBP,IAEhBO,EAAgBP,IAAMO,EAAgB1uB,gBA8KnC,UACE,eAAC6W,GAAA,EAAD,CACEjV,MAAM,SACNkV,QAAS,eAAC8Y,GAAA,EAAD,CAAOvkB,MAAM,YACtBuL,MAAM,yHAER,eAACC,GAAA,EAAD,CAAkBjV,MAAM,WAAWkV,QAAS,eAAC8Y,GAAA,EAAD,CAAOvkB,MAAM,YAAcuL,MAAM,wFAE7D,WAAjBiY,EACC,eAACxkB,EAAA,EAAD,UACE,eAACsQ,GAAA,EAAD,UACE,gBAAC+U,GAAA,EAAD,CAAYC,KAAG,EAAC/tB,MAAOuhB,EAAQhd,SApLhC,SAACC,EAA4CxE,GAChEstB,EAAUttB,IAmLU,UACE,eAACsX,GAAA,EAAD,IADF,OAEGwV,QAFH,IAEGA,OAFH,EAEGA,EAAiBnL,QAAQlP,KAAI,SAAAoP,GAAC,OAC7B,gBAAC,IAAM3X,SAAP,WACE,eAAC+O,GAAA,EAAD,UACE,gBAACpV,EAAA,EAAD,CAAMK,WAAW,SAASF,UAAU,MAAMD,WAAS,EAAnD,UACE,eAACF,EAAA,EAAD,CAAMwF,MAAI,EAACtF,WAAS,EAACE,eAAe,SAASqF,GAAI,GAAIC,GAAI,EAAzD,SACE,eAACykB,GAAA,EAAD,CAAOhuB,MAAO6hB,EAAEljB,GAAG8X,WAAYhN,MAAM,cAEvC,eAAC5F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,eAAC,GAAD,CAAYgY,OAAQM,WAI1B,eAACvK,GAAA,EAAD,MAXmBuK,EAAEljB,cAkB/B,eAACkF,EAAA,EAAD,CAAMyF,GAAI,GAAID,MAAI,EAACpF,eAAe,SAASF,WAAS,EAApD,SACE,gBAACF,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASD,WAAS,EAAtD,UACE,gBAAC6F,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQmnB,KAA3D,6HACuBmC,QADvB,IACuBA,OADvB,EACuBA,EAAiB1uB,cADxC,YAGA,eAACkG,GAAA,EAAD,CACER,UAAWN,EAAQwoB,MACnBhsB,MAAOwrB,EACPjnB,SA7MG,SAACC,GAC1B,IAAMqpB,EAASrpB,EAAME,OAAO1E,MAC5BmtB,EAAgBU,IA4MMzpB,QAAQ,WACR4Q,MAAM,oFAER,eAAC1Q,GAAA,EAAD,CACER,UAAWN,EAAQwoB,MACnBhsB,MAAOotB,EACP7oB,SA/MK,SAACC,GAC5B,IAAMqpB,EAASrpB,EAAME,OAAO1E,MAC5BqtB,EAAkBQ,IA8MIzpB,QAAQ,WACR4Q,MAAM,+FAOlB,eAACvM,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,SACE,gBAACwF,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQukB,SAA3D,uCACSwE,EADT,cAIF,eAAC9jB,EAAA,EAAD,CAAM3E,UAAWN,EAAQ4e,KAAMhe,QAAQ,WAAvC,SACE,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAACE,EAAA,EAAD,CAAQsF,MAAM,UAAUrF,QAAQ,YAAYC,QAAS6f,GAArD,yDAOPqJ,GACC,gBAAC,IAAMrjB,SAAP,WACE,eAAC,GAAD,CAAsB4gB,SAAUyC,EAAiBpC,SAAQ,yCAAWoC,EAAgBrZ,KAA3B,wDACzD,eAAC/P,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUQ,KAAK,IAAjD,iFCzWRrH,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRziB,WAAYxC,EAAMI,QAAQ,GAC1B2C,WAAY/C,EAAM6a,WAAWkF,qBA8DpBoL,GAzDiB,WAC9B,IAAM5M,EAAO,uCAAG,WAAOpa,GAAP,eAAAlK,EAAA,sEACIgR,KADJ,OACRoD,EADQ,OAEVlK,GACFinB,EAAa/c,GAHD,2CAAH,sDAOb,EAAkC9N,mBAAqB,IAAvD,mBAAO8qB,EAAP,KAAkBD,EAAlB,KAOAlnB,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAA/E,qGAIF,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,eAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA9E,SACE,eAACH,EAAA,EAAD,UACGsqB,EAAU1b,KAAI,SAAAqY,GAAQ,OACrB,eAAC,GAAD,CAEEA,SAAUA,EACVK,SAAQ,yCAAWL,EAAS5W,KAApB,0BAjCTka,EAiCkDtD,EAASuD,YAhChE,IAAIC,KAAKF,GACVG,mBAgCO3C,YAAU,GAHLd,EAASnsB,IA/BhB,IAACyvB,sB,mDC4ENI,GArGU,WACvB,MAA0BnmB,IAAMhF,UAAS,GAAzC,mBAAO0jB,EAAP,KAAc0H,EAAd,KACA,EAAwBpmB,IAAMhF,SAAS,IAAvC,mBAAOgD,EAAP,KAAaqoB,EAAb,KAEMC,EAAe,SAACrmB,GAAD,OAAmB,SAAC9D,IAEtB,YAAfA,EAAM8H,MACkC,QAAtC9H,EAA8B8N,KAAwD,UAAtC9N,EAA8B8N,MAKlFmc,EAASnmB,KAGLsmB,EAAkB,SAACC,GACvB1a,OAAO/H,SAASnC,KAAO4kB,GAGnBzE,EAAawE,EAAgBxmB,KAAK,GAAM,qBACxC0mB,EAAmBF,EAAgBxmB,KAAK,GAAM,2BAC9CoW,EAAkBoQ,EAAgBxmB,KAAK,GAAM,0BAC7CxH,EAAaguB,EAAgBxmB,KAAK,GAAM,qBACxC2mB,EAAUH,EAAgBxmB,KAAK,GAAM,kBACrC4mB,EAAUJ,EAAgBxmB,KAAK,GAAM,kBACrC2Y,EAAW6N,EAAgBxmB,KAAK,GAAM,kBACtCwP,EAAUgX,EAAgBxmB,KAAK,GAAM,kBACrCuZ,EAAUiN,EAAgBxmB,KAAK,GAAM,kBACrC6mB,EAAaL,EAAgBxmB,KAAK,GAAM,qBAExC8mB,EAAW,SAAChxB,EAAcixB,GAAf,OACf,eAACvc,GAAA,EAAD,CAAUvO,QAAS8qB,EAAnB,SACE,eAAClW,GAAA,EAAD,UACE,eAACmW,GAAA,EAAD,UACE,eAACxlB,EAAA,EAAD,CAAYxF,QAAQ,KAApB,SAA0BlG,WAMlCmK,IAAMrB,WAAU,WACd,IAAIC,GAAY,EAEhB,OADA0T,EAAU1T,GACH,WACLA,GAAY,MAIhB,IAAM0T,EAAS,uCAAG,WAAO1T,GAAP,eAAAlK,EAAA,sEACMoO,KADN,OACVyP,EADU,OAEhB8T,EAAQ9T,GACJ3T,GACE2T,IAAYrP,GAAMC,OACpBlF,eAAewB,QAAQ,SAAU8S,GALrB,2CAAH,sDAUf,OACE,iCACE,eAACrQ,EAAA,EAAD,CAAYd,MAAM,YAAYe,aAAW,OAAOnG,QAASsqB,GAAa,GAAtE,SACE,eAAC,KAAD,MAEF,gBAACU,GAAA,EAAD,CAAQC,OAAQ,OAAQhnB,KAAMye,EAAO9d,QAAS0lB,GAAa,GAA3D,UACY,UAATtoB,GACC,gBAAC0S,GAAA,EAAD,WACGmW,EAAS,sHAAwBJ,GAClC,eAACxX,GAAA,EAAD,IACC4X,EAAS,yDAAa9E,GACvB,eAAC9S,GAAA,EAAD,IACC4X,EAAS,8FAAoB1Q,GAC9B,eAAClH,GAAA,EAAD,IACC4X,EAAS,yDAAatuB,GACvB,eAAC0W,GAAA,EAAD,IACC4X,EAAS,mDAAYnO,GACtB,eAACzJ,GAAA,EAAD,IACC4X,EAAS,yDAAaH,GACvB,eAACzX,GAAA,EAAD,IACC4X,EAAS,6CAAWF,GACrB,eAAC1X,GAAA,EAAD,IACC4X,EAAS,6CAAWtX,GACrB,eAACN,GAAA,EAAD,IACC4X,EAAS,mDAAYvN,GACtB,eAACrK,GAAA,EAAD,IACC4X,EAAS,uCAAUD,MAGd,YAAT5oB,GACC,gBAAC0S,GAAA,EAAD,WACGmW,EAAS,yDAAaH,GACvB,eAACzX,GAAA,EAAD,IACC4X,EAAS,6CAAWF,GACrB,eAAC1X,GAAA,EAAD,IACC4X,EAAS,mDAAYnO,aC/F5Bne,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXiX,WAAW,cACTC,SAAU,OACVC,WAAY,WACXpX,EAAMwN,YAAYC,KAAK,MAAQ,CAC9B3L,QAAS,SAGbuV,SAAS,gBACNrX,EAAMwN,YAAYG,GAAG,MAAQ,CAC5B7L,QAAS,cAqCFyV,GA/BiB,WAC9B,IAAM7W,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC2Q,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACjX,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,GAAD,MAEF,gBAAC1F,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAAWoF,MAAI,EAACC,GAAI,GAAIC,GAAI,GAA3D,UACE,eAACpF,EAAA,EAAD,CACEC,QAAQ,OACRkN,KAAK,QACL7H,MAAM,YACNQ,KAAK,IACLnG,UAAWN,EAAQwW,WACnBe,UAAW,eAAC,KAAD,IANb,iBAUA,eAAC5W,EAAA,EAAD,CAAQC,QAAQ,OAAOkN,KAAK,QAAQ7H,MAAM,YAAYQ,KAAK,IAAInG,UAAWN,EAAQ2W,SAAlF,SACE,eAAC,KAAD,cAKR,eAACW,GAAA,EAAD,Q,6FC9CAlY,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwsB,SAAU,CACRtsB,QAASH,EAAMI,QAAQ,IAEzBssB,QAAS,CACP/lB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBiY,OAAQ,CACNhmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBkY,UAAW,CACTjmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,iBAqBZmY,GAAiB,SAAQvsB,GACpC,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,sEACIqG,EAAMwsB,UADV,OACRze,EADQ,OAEVlK,IACF4oB,EAAQ1e,GACFgQ,EAFO,aAEIhQ,GACjB8N,EAAQkC,IALI,2CAAH,sDASbna,qBAAU,WACR8oB,MACC,IAEH,IAAMA,EAAc,WAClB,IAAI7oB,GAAY,EAGhB,OAFA2oB,EAAQ3oB,GAED,WACLA,GAAY,IAIR8oB,EAAa3sB,EAAb2sB,SACR,EAAwB1sB,mBAAiB,IAAzC,mBAAOvG,EAAP,KAAa+yB,EAAb,KACA,EAA4BxsB,mBAAiB,IAA7C,mBAAO2sB,EAAP,KAAiB/Q,EAAjB,KACA,EAA8B5b,mBAAiB,GAA/C,mBAAO4sB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7sB,qBAAxC,mBAAO8sB,EAAP,KAAqBC,EAArB,KAiBMjoB,EAAQ,uCAAG,sBAAApL,EAAA,0DACXozB,IAAgB/sB,EAAMitB,eADX,gCAEKjtB,EAAMitB,eAAeF,GAF1B,eAIXL,IAJW,2CAAH,qDASRQ,EAAQ,uCAAG,sBAAAvzB,EAAA,sDACXqG,EAAMmtB,WACRntB,EAAMmtB,UAAUT,EAAY1nB,KAAK,KAFpB,2CAAH,qDAMRooB,EAAM,uCAAG,sBAAAzzB,EAAA,sDACTozB,GAAgB/sB,EAAMqtB,cACxBrtB,EAAMqtB,aAAaN,EAAcL,EAAY1nB,KAAK,KAFvC,2CAAH,qDAMNG,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIApF,EAAM6E,SACR7E,EAAM6E,SAAQ,IAIlB,OACE,gBAAC,IAAMiC,SAAP,WACG9G,EAAM6E,SAAW7E,EAAMstB,OACtB,eAAC9nB,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMlF,EAAMkF,KACZU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAACW,EAAA,EAAD,CAAOD,QAASV,EAAaY,SAAS,QAAtC,SACG/F,EAAMstB,UAIb,gBAAC7sB,EAAA,EAAD,CAAMG,UAAU,SAASF,UAAWN,EAAQ+rB,SAAUxrB,WAAS,EAACoG,aAAa,UAA7E,UACE,eAACP,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAShB,EAAMutB,QAAU,KAAO,KAA3D,SACGvtB,EAAMlF,OAET,eAAC,KAAD,CACE4oB,MAAO1jB,EAAMutB,QAAU,CAAE9rB,UAAW,KAAQ,CAAEA,UAAW,KACzDwf,KAAM2L,EACN7O,KAAM8O,EACNW,SAAU9zB,EAAK8Q,OACfijB,QAASztB,EAAMytB,QACfd,SAAUA,EACVe,mBAAoB,CAACf,GACrBgB,aAxEa,SAAC5P,EAAcpc,GAClC,IAAMisB,EAAK,aAAOl0B,GAClBmiB,EAAQ+R,GACRd,EAAW/O,IAsEL8P,uBAnEY,SAACC,EAAoCnsB,GACnDmsB,EAAetjB,OAAS,IAC1BwiB,EAAgBc,EAAe,IAC3B9tB,EAAM+tB,aACR/tB,EAAM+tB,YAAYD,EAAe,QAiEjC,gBAACrtB,EAAA,EAAD,CAAMC,UAAWN,EAAQ+rB,SAAUvrB,UAAU,MAAMD,WAAS,EAACE,eAAe,WAAWkG,aAAa,UAApG,UACE,eAACtG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAWrmB,EAAMmtB,UACjBnsB,QAAQ,WACRN,UAAWN,EAAQgsB,QACnB/lB,MAAM,UACNe,aAAW,MACXnG,QAASisB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAACzsB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMqtB,aACzDrsB,QAAQ,WACRN,UAAWN,EAAQksB,UACnBjmB,MAAM,UACNe,aAAW,OACXnG,QAASmsB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAAC3sB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMitB,eACzDjsB,QAAQ,WACRN,UAAWN,EAAQisB,OACnBhmB,MAAM,UACNe,aAAW,SACXnG,QAAS8D,EANX,UAQE,eAAC,KAAD,IARF,4DCrKCkpB,GAAgB,SAAQjuB,GAAR,OAC3B,gBAAC,IAAM8G,SAAP,WACE,eAAC,GAAD,IACA,eAAC,GAAD,CACEhM,KAAMkF,EAAMlF,KACZ0xB,QAASxsB,EAAMwsB,QACfiB,QAASztB,EAAMytB,QACfd,SAAU3sB,EAAM2sB,SAChBoB,YAAa/tB,EAAM+tB,YACnBd,eAAgBjtB,EAAMitB,eACtBI,aAAcrtB,EAAMqtB,aACpBF,UAAWntB,EAAMmtB,UACjBjoB,KAAMlF,EAAMkF,KACZL,QAAS7E,EAAM6E,QACfyoB,MAAOttB,EAAMstB,Y,UCGJY,GA3BqC,SAAAluB,GAClD,IAAMmF,EAAc,WAClBnF,EAAM6E,SAAQ,IAGhB,OACE,eAACwN,GAAA,EAAD,CACEnN,KAAMlF,EAAMkF,KACZW,QAASV,EACTmN,kBAAgB,sBAChBC,mBAAiB,4BAJnB,SAME,gBAAC9R,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAA1B,UACE,eAAC4R,GAAA,EAAD,CAAajX,GAAG,sBAAhB,SACE,gBAACkF,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIxF,WAAS,EAACC,UAAU,MAAMC,eAAe,aAApE,UACE,eAACsG,EAAA,EAAD,CAAYlG,QAASkE,EAArB,SACE,eAACgpB,GAAA,EAAD,MAEDnuB,EAAMlF,UAGX,eAAC2X,GAAA,EAAD,UAAgBzS,EAAMouB,aCpBxB5uB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAgGbuuB,GAtF+C,SAAAruB,GAC5D,IAAMI,EAAUZ,KAEhB,EAAoDyF,IAAMhF,SAAS,CAAEnF,KAAM,GAAIX,YAAa,KAA5F,mBAAOm0B,EAAP,KAA2BC,EAA3B,KAEA,EAAwBtpB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAgBMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACV20B,EAAmBxzB,KAAK0P,OAAS,GADvB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHypB,EAAmBn0B,YAAYqQ,OAAS,GAJrC,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,yCAQMhK,EAAqByzB,EAAmBxzB,KAAMwzB,EAAmBn0B,aARvE,gBASD6F,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0xB,EAAmBxzB,KAC1BqG,SAzDmB,SAACC,GACxBmtB,EAAsB,CACpBzzB,KAAMsG,EAAME,OAAO1E,MACnBzC,YAAam0B,EAAmBn0B,eAuD9ByX,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,4BACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0xB,EAAmBn0B,YAC1BgH,SA1D0B,SAACC,GAC/BmtB,EAAsB,CACpBzzB,KAAMwzB,EAAmBxzB,KACzBX,YAAaiH,EAAME,OAAO1E,SAwDxBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,8D,oBC5FFzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJ2C,OAAQ,QAEVsK,MAAO,CACLuJ,MAAO,IACPM,OAAQ,IACR8C,SAAU,QAEZzX,OAAQ,CACNQ,OAAQ7C,EAAMI,QAAQ,GAAK,SAKjC,SAAS4uB,GAAU/0B,EAA2Bg1B,GAC5C,OAAOh1B,EAAE2Q,QAAO,SAAA1N,GAAK,OAA0B,IAAtB+xB,EAAEC,QAAQhyB,MAGrC,SAASiyB,GAAmBl1B,EAA2Bg1B,GACrD,OAAOh1B,EAAE2Q,QAAO,SAAA1N,GAAK,OAA0B,IAAtB+xB,EAAEC,QAAQhyB,MAe9B,IAAMkyB,GAAe,SAAQ9uB,GAClC,IAAMI,EAAUZ,KAChB,EAA8ByF,IAAMhF,SAAiC,IAArE,mBAAOqG,EAAP,KAAgBhD,EAAhB,KAEMyrB,EAAcF,GAAavoB,EAAStG,EAAMgvB,MAC1CC,EAAeJ,GAAavoB,EAAStG,EAAMkvB,OAE3CvhB,EAAe,SAAC/Q,GAAD,OAAiC,WACpD,IAAMuyB,EAAe7oB,EAAQsoB,QAAQhyB,GAC/BwyB,EAAU,aAAO9oB,IAED,IAAlB6oB,EACFC,EAAWlV,KAAKtd,GAEhBwyB,EAAW/U,OAAO8U,EAAc,GAGlC7rB,EAAW8rB,KAyBPC,EAAa,SAACh1B,GAAD,OACjB,eAACsU,GAAA,EAAD,CAAOjO,UAAWN,EAAQyM,MAA1B,SACE,gBAAC8I,GAAA,EAAD,CAAM2Z,OAAK,EAAC3oB,UAAU,MAAM1D,KAAK,OAAjC,UACG5I,EAAMgV,KAAI,SAACzS,GACV,IAAM+b,EAAO,6BAAyB/b,EAAzB,UAEb,OACE,gBAACiZ,GAAA,EAAD,CAA8C5S,KAAK,WAAWlB,QAAM,EAACd,QAAS0M,EAAa/Q,GAA3F,UACE,eAAC2yB,GAAA,EAAD,UACE,eAACnpB,EAAA,EAAD,CACEE,SAAqC,IAA5BA,EAAQsoB,QAAQhyB,GACzB4yB,UAAW,EACXC,eAAa,EACbppB,MAAM,UACN2R,WAAY,CAAE,kBAAmBW,OAGrC,eAACqT,GAAA,EAAD,CAAczwB,GAAIod,EAAS+W,QAAS9yB,EAAM9B,SAV7B8B,EAAMrB,OAczB,eAACsa,GAAA,EAAD,UAKN,OACE,gBAACpV,EAAA,EAAD,CAAME,WAAS,EAACb,QAAS,EAAGe,eAAe,SAASC,WAAW,SAASJ,UAAWN,EAAQR,KAA3F,UACE,eAACa,EAAA,EAAD,CAAMwF,MAAI,EAAV,SAAYopB,EAAWrvB,EAAMgvB,QAC7B,eAACvuB,EAAA,EAAD,CAAMwF,MAAI,EAAV,SACE,gBAACxF,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASE,WAAW,SAA9C,UACE,eAACC,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACLxN,UAAWN,EAAQ2B,OACnBd,QAzDa,WACrBjB,EAAM2vB,SAAS3vB,EAAMkvB,MAAMU,OAAO5vB,EAAMgvB,OACxChvB,EAAM6vB,QAAQ,KAwDNxJ,SAAgC,IAAtBrmB,EAAMgvB,KAAKxkB,OACrBpD,aAAW,iBANb,oBAUA,eAACrG,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACLxN,UAAWN,EAAQ2B,OACnBd,QA9DiB,WACzBjB,EAAM2vB,SAAS3vB,EAAMkvB,MAAMU,OAAOb,IAClC/uB,EAAM6vB,QAAQnB,GAAI1uB,EAAMgvB,KAAMD,IAC9BzrB,EAAWorB,GAAIpoB,EAASyoB,KA4DhB1I,SAAiC,IAAvB0I,EAAYvkB,OACtBpD,aAAW,sBANb,eAUA,eAACrG,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACLxN,UAAWN,EAAQ2B,OACnBd,QAlEgB,WACxBjB,EAAM6vB,QAAQ7vB,EAAMgvB,KAAKY,OAAOX,IAChCjvB,EAAM2vB,SAASjB,GAAI1uB,EAAMkvB,MAAOD,IAChC3rB,EAAWorB,GAAIpoB,EAAS2oB,KAgEhB5I,SAAkC,IAAxB4I,EAAazkB,OACvBpD,aAAW,qBANb,eAUA,eAACrG,EAAA,EAAD,CACEC,QAAQ,WACRkN,KAAK,QACLxN,UAAWN,EAAQ2B,OACnBd,QAtEY,WACpBjB,EAAM6vB,QAAQ7vB,EAAMgvB,KAAKY,OAAO5vB,EAAMkvB,QACtClvB,EAAM2vB,SAAS,KAqEPtJ,SAAiC,IAAvBrmB,EAAMkvB,MAAM1kB,OACtBpD,aAAW,gBANb,yBAYJ,eAAC3G,EAAA,EAAD,CAAMwF,MAAI,EAAV,SAAYopB,EAAWrvB,EAAMkvB,aCjJ7B1vB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAyRbgwB,GA9QmC,SAAA9vB,GAAU,IAAD,EACnDI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEQpmB,KAFR,cAERqmB,EAFQ,gBAGYhlB,KAHZ,OAGRmU,EAHQ,OAIVtb,IACFosB,EAAoBD,GACpBL,EAASxQ,GACT4Q,GAAW,IAPC,2CAAH,sDAoBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,uBAAO,CACvBp1B,KAAMq1B,EAAar1B,KACnBX,YAAag2B,EAAah2B,YAC1Ba,cAAem1B,EAAan1B,cAC5BC,iBAAgB,UAAE+E,EAAM/E,wBAAR,QAA4Bk1B,EAAal1B,mBAGrDm1B,EAAe,WACnB,IADwD,EAClDC,EAA2C,GADO,eAErCh0B,GAFqC,IAExD,2BAA8B,CAAC,IAApB4J,EAAmB,QAC5BoqB,EAAUnW,KAAK,CAAEzd,iBAAkBwJ,EAAK1K,GAAIc,WAAW,KAHD,mDAMrCi0B,GANqC,IAMxD,2BAAgC,CAAC,IAAtBrqB,EAAqB,QAC9BoqB,EAAUnW,KAAK,CAAEzd,iBAAkBwJ,EAAK1K,GAAIc,WAAW,KAPD,8BAUxD,OAAOg0B,GAGT,EAAwCprB,IAAMhF,SAAS,CACrDnF,KAAM,GACNX,YAAa,GACba,cAAe,EACfC,iBAAgB,UAAE+E,EAAM/E,wBAAR,QAA4B,KAJ9C,mBAAOk1B,EAAP,KAAqBI,EAArB,KAMA,EAAgDtrB,IAAMhF,SAA2B,IAAjF,mBAAOyrB,EAAP,KAAyBuE,EAAzB,KACA,EAAwBhrB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KACA,EAA0BrL,IAAMhF,SAA2B,IAA3D,mBAAOivB,EAAP,KAAcS,EAAd,KACA,EAAkC1qB,IAAMhF,SAA2B,IAAnE,mBAAO5D,EAAP,KAAkBm0B,EAAlB,KACA,EAAsCvrB,IAAMhF,SAA2B,IAAvE,mBAAOqwB,EAAP,KAAoBG,EAApB,KACA,EAAwBxrB,IAAMhF,SAA2B,IAAzD,mBAAO+uB,EAAP,KAAaa,EAAb,KACA,EAA8B5qB,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAAwB9qB,IAAMhF,SAAS,GAAvC,oBAAO0wB,GAAP,MAAaC,GAAb,MA8BMzrB,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJgsB,GAAM,uCAAG,sBAAAl3B,EAAA,sDACb62B,EAAa,aAAIxB,IACjByB,EAAe,IACfG,GAAQ,GAHK,2CAAH,qDAMNE,GAAM,uCAAG,sBAAAn3B,EAAA,sDACbi3B,GAAQ,GADK,2CAAH,qDAIN3vB,GAAO,uCAAG,8BAAAtH,EAAA,2DACVw2B,EAAar1B,KAAK0P,OAAS,GADjB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHsrB,EAAah2B,YAAYqQ,OAAS,GAJ/B,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,yCAQM9J,EAChBo1B,EAAar1B,KACbq1B,EAAah2B,YACbg2B,EAAan1B,cACbm1B,EAAal1B,kBAZH,aAQN8S,EARM,UAeD/N,EAAMwuB,UAfL,wBAgBJ90B,EAAO02B,IAhBH,UAiBcl1B,EAA2B6S,EAAIxS,GAAc7B,GAjB3D,eAkBVsG,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,GAnBJ,wBAqBVyL,EAAW,uJACXzL,GAAQ,GAtBE,4CAAH,qDA2Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAAC,KAAD,CAAOU,QAASV,GAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAar1B,KACpBqG,SA/Fe,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2zB,EAAgB72B,IA6FRkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,sBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAah2B,YACpBgH,SAjGsB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKS,YAAciH,EAAME,OAAO1E,MAChC2zB,EAAgB72B,IA+FRkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,wBACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,4EACNhV,MAAOuzB,EAAan1B,cACpBmG,SAtGmB,SAACC,GAC5B,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAKsB,cAAgBg2B,GAGvBT,EAAgB72B,MAiGV,eAACwH,GAAA,EAAD,CACE3F,GAAG,iBACH01B,QAAM,EACNrf,MAAM,sHACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAal1B,iBACpBkG,SApGiB,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuB,iBAAmBmG,EAAME,OAAO1E,MACrC2zB,EAAgB72B,IAkGRsH,QAAQ,WACRqlB,cAAqCjY,IAA3BpO,EAAM/E,iBARlB,SAUGywB,EAAiBrc,KAAI,SAAA6hB,GAAM,OAC1B,eAAC1hB,GAAA,EAAD,CAA0B5S,MAAOs0B,EAAO31B,GAAxC,SACG21B,EAAOp2B,MADKo2B,EAAO31B,SAKhB,IAATo1B,GACC,gBAAC,IAAM7pB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACsF,MAAI,EAACC,GAAI,GAAIrF,eAAe,eAAeD,UAAU,MAArE,UACE,eAACH,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,gEAIF,eAACP,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,qCAKJ,eAAC,GAAD,CACEguB,KAAMA,EACNE,MAAOA,EACPW,QAASA,EACTF,SAAUA,OAId,gBAAC,IAAM7oB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACsF,MAAI,EAACC,GAAI,GAAIrF,eAAe,eAAeD,UAAU,MAArE,UACE,eAACH,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,oDAIF,eAACP,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,oEAKJ,eAAC,GAAD,CACEguB,KAAM3yB,EACN6yB,MAAOoB,EACPT,QAASW,EACTb,SAAUc,OAIhB,eAAChwB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACY,IAAT8vB,GACC,eAAC5vB,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAAS4vB,GAA9F,4CAIA,gBAAC,IAAM/pB,SAAP,WACE,eAACrG,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAAzB,SACE,eAAClF,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,WAAWC,QAAS6vB,GAA7F,8CAIF,eAACrwB,EAAA,EAAD,UACE,eAACM,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2P,OACnB1J,MAAM,UACNrF,QAAQ,YACRC,QAASA,GALX,4ECxQZzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA4SbqxB,GAjS+B,SAAAnxB,GAC5C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,mBAAAlK,EAAA,6DACdo2B,IAAW,GADG,SAEI9lB,GAAgBjK,EAAMzE,IAF1B,cAERwS,EAFQ,gBAGQpE,KAHR,cAGRqmB,EAHQ,gBAIYjlB,GAAuB/K,EAAMzE,IAJzC,OAIR4jB,EAJQ,OAKVtb,IACF0sB,EAAgB,CACdz1B,KAAMiT,EAAIjT,KACVX,YAAa4T,EAAI5T,YACjBa,cAAe+S,EAAI/S,cACnBC,iBAAkB8S,EAAI9S,mBAExBg1B,EAAoBD,GACpBH,EAAQ1Q,EAAYiS,gBACpBzB,EAASxQ,EAAYkS,gBACrBC,EAAkBvjB,EAAIqN,iBACtB2U,IAAW,IAhBC,4CAAH,sDAoBPG,EAAY,iBAAO,CACvBp1B,KAAMq1B,EAAar1B,KACnBX,YAAag2B,EAAah2B,YAC1Ba,cAAem1B,EAAan1B,cAC5BC,iBAAkBk1B,EAAal1B,mBAG3Bm1B,EAAe,WACnB,IADwD,EAClDC,EAA2C,GADO,eAErCh0B,GAFqC,IAExD,2BAA8B,CAAC,IAApB4J,EAAmB,QAC5BoqB,EAAUnW,KAAK,CAAEzd,iBAAkBwJ,EAAK1K,GAAIc,WAAW,KAHD,mDAMrCi0B,GANqC,IAMxD,2BAAgC,CAAC,IAAtBrqB,EAAqB,QAC9BoqB,EAAUnW,KAAK,CAAEzd,iBAAkBwJ,EAAK1K,GAAIc,WAAW,KAPD,8BAUxD,OAAOg0B,GAYTzsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,MAAwCznB,IAAMhF,SAAS,CACrDnF,KAAM,GACNX,YAAa,GACba,cAAe,EACfC,iBAAkB,KAJpB,mBAAOk1B,EAAP,KAAqBI,EAArB,KAMA,EAAgDtrB,IAAMhF,SAA2B,IAAjF,mBAAOyrB,EAAP,KAAyBuE,EAAzB,KACA,EAAwBhrB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KACA,EAA0BrL,IAAMhF,SAA2B,IAA3D,mBAAOivB,EAAP,KAAcS,EAAd,KACA,EAA4C1qB,IAAMhF,SAA2B,IAA7E,mBAAOsxB,EAAP,KAAuBD,EAAvB,KACA,EAAkCrsB,IAAMhF,SAA2B,IAAnE,mBAAO5D,EAAP,KAAkBm0B,EAAlB,KACA,EAAsCvrB,IAAMhF,SAA2B,IAAvE,mBAAOqwB,EAAP,KAAoBG,EAApB,KACA,EAAwBxrB,IAAMhF,SAA2B,IAAzD,mBAAO+uB,EAAP,KAAaa,EAAb,KACA,EAA8B5qB,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,GAAhB,KACA,GAAwB9qB,IAAMhF,SAAS,GAAvC,qBAAO0wB,GAAP,MAAaC,GAAb,MA8BMzrB,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,GAAO,uCAAG,gCAAAtH,EAAA,2DACVw2B,EAAar1B,KAAK0P,OAAS,GADjB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHsrB,EAAah2B,YAAYqQ,OAAS,GAJ/B,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,+BAQNnL,EAAO02B,IARD,UASMrM,GAChB/jB,EAAMzE,GACN40B,EAAar1B,KACbq1B,EAAah2B,YACbg2B,EAAan1B,cACbm1B,EAAal1B,kBAdH,eASN8S,EATM,iBAgBY7S,EAA2B8E,EAAMzE,GAAI7B,GAhBjD,QAgBN83B,EAhBM,OAiBRzjB,GAAO/N,EAAMwuB,WAAagD,GAC5BxxB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAtBE,4CAAH,qDA2BPgsB,GAAM,uCAAG,oCAAAl3B,EAAA,sDACP83B,EAAwB,GACxBC,EAA0B,GAFnB,eAGM1C,GAHN,IAGb,IAHa,iBAGF/oB,EAHE,QAIPsrB,EAAexc,MAAK,SAAA8E,GAAC,OAAIA,EAAEte,KAAO0K,EAAK1K,MACzCk2B,EAAIvX,KAAKjU,GAETyrB,EAAMxX,KAAKjU,IAJf,uBAA0B,IAHb,8BAWbuqB,EAAaiB,GACbhB,EAAeiB,GACfd,GAAQ,GAbK,2CAAH,qDAgBNE,GAAM,uCAAG,sBAAAn3B,EAAA,sDACbi3B,GAAQ,GADK,2CAAH,qDAIZ,OACE,gBAACnwB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAAC,KAAD,CAAOU,QAASV,GAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAar1B,KACpBqG,SAzGe,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2zB,EAAgB72B,IAuGRkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,sBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAah2B,YACpBgH,SA3GsB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKS,YAAciH,EAAME,OAAO1E,MAChC2zB,EAAgB72B,IAyGRkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,wBACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,4EACNhV,MAAOuzB,EAAan1B,cACpBmG,SAhHmB,SAACC,GAC5B,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAKsB,cAAgBg2B,GAGvBT,EAAgB72B,MA2GV,eAACwH,GAAA,EAAD,CACE3F,GAAG,iBACH01B,QAAM,EACNrf,MAAM,sHACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOuzB,EAAal1B,iBACpBkG,SA9GiB,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuB,iBAAmBmG,EAAME,OAAO1E,MACrC2zB,EAAgB72B,IA4GRsH,QAAQ,WAPV,SASG0qB,EAAiBrc,KAAI,SAAA6hB,GAAM,OAC1B,eAAC1hB,GAAA,EAAD,CAA0B5S,MAAOs0B,EAAO31B,GAAxC,SACG21B,EAAOp2B,MADKo2B,EAAO31B,SAKhB,IAATo1B,GACC,gBAAC,IAAM7pB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACsF,MAAI,EAACC,GAAI,GAAIrF,eAAe,eAAeD,UAAU,MAArE,UACE,eAACH,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,gEAIF,eAACP,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,qCAKJ,eAAC,GAAD,CACEguB,KAAMA,EACNE,MAAOA,EACPW,QAASA,EACTF,SAAUA,OAId,gBAAC,IAAM7oB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACsF,MAAI,EAACC,GAAI,GAAIrF,eAAe,eAAeD,UAAU,MAArE,UACE,eAACH,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,oDAIF,eAACP,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACK,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,oEAKJ,eAAC,GAAD,CACEguB,KAAM3yB,EACN6yB,MAAOoB,EACPT,QAASW,EACTb,SAAUc,OAIhB,eAAChwB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,WAA/C,SACY,IAAT8vB,GACC,eAAC5vB,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAAS4vB,GAA9F,4CAIA,gBAAC,IAAM/pB,SAAP,WACE,eAACrG,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAAzB,SACE,eAAClF,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,WAAWC,QAAS6vB,GAA7F,8CAIF,eAACrwB,EAAA,EAAD,UACE,eAACM,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2P,OACnB1J,MAAM,UACNrF,QAAQ,YACRC,QAASA,GALX,4EC9RL0wB,GAAsD,SAAA3xB,GACjE,IAeM+E,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGmF,GAAevD,GADlB,UAEH,IAFG,8BAGbq2B,EAAS,0WACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaMvB,EAAUhjB,GAAcxE,K,UAAWhF,EAAMlF,MAE/C,OACE,gBAAC,IAAMgM,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,yDACL0xB,QAASA,EACTiB,QAnDwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,gBACPwJ,WAAY,4EACZlpB,KAAM,SACNkN,MAAO,MAyCLuW,SAAU,GACVM,eAAgBloB,EAChBooB,UArBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAoBlBhF,aAjBe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAelBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,EACPC,SAAO,IAET,eAAC,GAAD,CACEzyB,KAAM,0GACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAgBnzB,iBAAkB+E,EAAMzE,GAAIsJ,QAASitB,EAAetD,UAAWyD,IACrFptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,gHACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAc7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACnEptB,QAASmtB,QCzEXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAuHbyyB,GA5G2C,SAAAvyB,GACxD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,sEACImR,GAAkB9K,EAAMzE,IAD5B,OACRwS,EADQ,OAEVlK,GACF0qB,EAAsB,CAAEzzB,KAAMiT,EAAIjT,KAAMX,YAAa4T,EAAI5T,cAH7C,2CAAH,sDAgBbyJ,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,MAAoDznB,IAAMhF,SAAS,CAAEnF,KAAM,GAAIX,YAAa,KAA5F,mBAAOm0B,EAAP,KAA2BC,EAA3B,KACA,EAAwBtpB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAgBMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACV20B,EAAmBxzB,KAAK0P,OAAS,GADvB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHypB,EAAmBn0B,YAAYqQ,OAAS,GAJrC,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,yCAQMgf,GAAqB7jB,EAAMzE,GAAI+yB,EAAmBxzB,KAAMwzB,EAAmBn0B,aARjF,gBASD6F,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0xB,EAAmBxzB,KAC1BqG,SAzDmB,SAACC,GACxBmtB,EAAsB,CACpBzzB,KAAMsG,EAAME,OAAO1E,MACnBzC,YAAam0B,EAAmBn0B,eAuD9ByX,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,4BACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0xB,EAAmBn0B,YAC1BgH,SA1D0B,SAACC,GAC/BmtB,EAAsB,CACpBzzB,KAAMwzB,EAAmBxzB,KACzBX,YAAaiH,EAAME,OAAO1E,SAwDxBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,GAAIF,MAAI,EAA1B,SACE,eAAC,GAAD,CAAqBnL,KAAMwzB,EAAmBxzB,KAAMS,GAAIyE,EAAMzE,OAEhE,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,oECvHKuxB,GAAqB,WAChC,IAcMztB,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGkF,GAAqBtD,GADxB,UAEH,IAFG,8BAGbq2B,EAAS,wVACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,sHACL0xB,QAAS7iB,GACT8jB,QAhDwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,mDACZhc,MAAO,MAuCLuW,SAAU,GACVQ,UAlBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAiBlBhF,aAde,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAYlBpF,eAAgBloB,EAChBG,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,yIACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAsBvpB,QAASitB,EAAetD,UAAWyD,IAC/DptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,+IACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAoB7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACzEptB,QAASmtB,QCpEJS,GAAe,WAC1B,IAyBM1tB,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGmF,GAAevD,GADlB,UAEH,IAFG,8BAGbq2B,EAAS,0WACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,yDACL0xB,QAAS9iB,GACT+jB,QA3DwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,gBACPwJ,WAAY,4EACZlpB,KAAM,SACNkN,MAAO,KAET,CACEwS,MAAO,qBACPwJ,WAAY,sHACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,mDACZhc,MAAO,MAuCLuW,SAAU,GACVM,eAAgBloB,EAChBooB,UAnBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAkBlBhF,aAfe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAalBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,0GACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAgBvpB,QAASitB,EAAetD,UAAWyD,IACzDptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,gHACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAc7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACnEptB,QAASmtB,Q,iDClFXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+yB,MAAO,CACLnwB,OAAQ7C,EAAMI,QAAQ,EAAG,GACzB6yB,WAAY,oBAEdC,MAAO,CACLrwB,OAAQ7C,EAAMI,QAAQ,EAAG,EAAG,EAAG,SAaxB+yB,GAAkC,SAAA7yB,GAC/B8yB,eAAd,IACM1yB,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAACN,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAK0iB,MAAO,CAAErd,MAAOrG,EAAMqG,OAAS3F,UAAWN,EAAQsyB,MAAO5X,cAAY,EAA7G,SACG9a,EAAMlF,OAET,eAAC6T,GAAA,EAAD,CAAO3N,QAAQ,WAAf,SACE,gBAAC+xB,GAAA,EAAD,CAAW3c,MAAO,IAAKM,OAAQ,IAAKhd,KAAMsG,EAAMtG,KAAMgH,UAAWN,EAAQwyB,MAAzE,UACE,eAACI,GAAA,EAAD,CAAM9pB,KAAK,WAAW+pB,QAAQ,OAAOC,OAAQlzB,EAAMqG,MAAOvL,KAAMkF,EAAMmzB,QACtE,eAACC,GAAA,EAAD,CAAOH,QAAQ,OAAOn4B,KAAMkF,EAAMqzB,QAClC,eAACC,GAAA,EAAD,a,mBChCVC,KAAQC,SAASC,KAAYH,KAASI,MAEtC,IAAMl0B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+yB,MAAO,CACLnwB,OAAQ7C,EAAMI,QAAQ,EAAG,GACzB6yB,WAAY,oBAEdC,MAAO,CACLrwB,OAAQ7C,EAAMI,QAAQ,EAAG,EAAG,EAAG,GAC/BsY,SAAU,IACV3W,UAAW,KAEbkyB,SAAU,CACR9zB,QAASH,EAAMI,QAAQ,SAWhB8zB,GAAsE,SAAA5zB,GACnE8yB,eAAd,IACM1yB,EAAUZ,KAEVq0B,EAAe,CACnBC,OAAQ,CAAC,yDAAa,qEAAe,iCAAS,oDAC9CC,SAAU,CACR,CACEniB,MAAO,4EACPlY,KAAM,CAACsG,EAAMtG,KAAKyS,SAAUnM,EAAMtG,KAAKs6B,aAAch0B,EAAMtG,KAAKu6B,QAASj0B,EAAMtG,KAAKw6B,UACpF9f,gBAAiBpU,EAAMm0B,OACvBC,YAAa,MAKnB,OACE,gBAAC3zB,EAAA,EAAD,CACEwF,MAAI,EACJC,GAAI,GACJtF,UAAU,SACVD,WAAS,EACTE,eAAe,aACfkG,aAAa,SACbrG,UAAWN,EAAQwyB,MAPrB,UASE,eAACpsB,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQsyB,MAAO5X,cAAY,EAA9E,SACG9a,EAAMlF,OAET,eAAC6T,GAAA,EAAD,CAAO3N,QAAQ,WAAf,SACE,eAAC,KAAD,CAAUN,UAAWN,EAAQuzB,SAAUj6B,KAAMm6B,U,6BCtD/Cr0B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJoQ,UAAWtQ,EAAMI,QAAQ,IACzBuG,MAAO,OACP+N,gBAAiB,aAyERigB,GApEU,WACP70B,KAAhB,IAEM80B,EAAM,IAAIpJ,KACVqJ,EAAgB,IAAIrJ,KAAKoJ,EAAIE,cAAeF,EAAIG,WAAY,GAC5DC,EAAW,IAAIxJ,KAAKoJ,EAAIE,cAAeF,EAAIG,WAAa,EAAG,GACjE,EAAgDxvB,IAAMhF,SAAes0B,GAArE,mBAAOI,EAAP,KAAyBC,EAAzB,KACA,EAA4C3vB,IAAMhF,SAAey0B,GAAjE,mBAAOG,EAAP,KAAuBC,EAAvB,KAUM7zB,EAAO,uCAAG,8BAAAtH,EAAA,sEACI6S,GAAYmoB,EAAkBE,GADlC,QACR9mB,EADQ,WAGNgnB,EAAOtlB,SAASulB,cAAc,MAC/BC,SAAW,GAChBF,EAAKluB,KAAL,gCAAqCkH,GACrC0B,SAASylB,KAAKC,YAAYJ,GAC1BA,EAAKhJ,QACLtc,SAASylB,KAAKE,YAAYL,IARd,2CAAH,qDAYb,OACE,eAAC,KAAD,CAAyBM,MAAOC,KAAhC,SACE,gBAAC70B,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAA1B,UACE,eAACH,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,WAAnD,SACE,eAAC,KAAD,CACE0B,OAAO,SACPhH,GAAG,0BACHqW,MAAM,eACN2jB,OAAO,aACP34B,MAAO+3B,EACPxzB,SA9BmB,SAAC6pB,GAC5B4J,EAAoB5J,IA8BZwK,oBAAqB,CACnB,aAAc,iFAIpB,eAAC/0B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC,KAAD,CACE0B,OAAO,SACPhH,GAAG,wBACHqW,MAAM,eACN2jB,OAAO,aACP34B,MAAOi4B,EACP1zB,SAvCiB,SAAC6pB,GAC1B8J,EAAkB9J,IAuCVwK,oBAAqB,CACnB,aAAc,iFAIpB,eAAC/0B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,aAAakG,aAAa,SAA7E,SACE,eAAChG,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUpF,QAASA,EAArD,qGCtEVsyB,KAAQC,SAASC,KAAYH,KAASI,MAEtC,IAAMl0B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+yB,MAAO,CACLnwB,OAAQ7C,EAAMI,QAAQ,EAAG,GACzB6yB,WAAY,oBAEdC,MAAO,CACLrwB,OAAQ7C,EAAMI,QAAQ,EAAG,EAAG,EAAG,GAC/BsY,SAAU,IACV3W,UAAW,KAEbkyB,SAAU,CACR9zB,QAASH,EAAMI,QAAQ,SAWhB21B,GAAwC,SAAAz1B,GACrC8yB,eAAd,IACM1yB,EAAUZ,KAEVq0B,EAAe,CACnBC,OAAQ9zB,EAAMtG,KAAKg8B,MACnB3B,SAAU,CACR,CACEniB,MAAO,4EACPlY,KAAMsG,EAAMtG,KAAKA,KACjB0a,gBAAiBpU,EAAMm0B,OACvBC,YAAa,MAKnB,OACE,gBAAC3zB,EAAA,EAAD,CACEwF,MAAI,EACJC,GAAI,GACJtF,UAAU,SACVD,WAAS,EACTE,eAAe,aACfkG,aAAa,SACbrG,UAAWN,EAAQwyB,MAPrB,UASE,eAACpsB,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAKN,UAAWN,EAAQsyB,MAAO5X,cAAY,EAA9E,SACG9a,EAAMlF,OAET,eAAC6T,GAAA,EAAD,CAAO3N,QAAQ,WAAf,SACE,eAAC,KAAD,CAAUN,UAAWN,EAAQuzB,SAAUj6B,KAAMm6B,UClD/Cr0B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXg2B,UAAW,CACTlzB,WAAY/C,EAAM6a,WAAWkF,gBAE/BiT,MAAO,CACLxwB,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/B81B,SAAU,CACRzzB,cAAezC,EAAMI,QAAQ,SAKtB+1B,GAAY,WAAO,IAAD,EACvBz1B,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,qCAAAlK,EAAA,sEACOuS,GAAkB,GAAG,GAD5B,cACR4pB,EADQ,gBAES5pB,GAAkB,GAAG,GAF9B,cAER6pB,EAFQ,gBAGQ7pB,GAAkB,GAAG,GAH7B,cAGR8pB,EAHQ,iBAKQ5pB,GAAc,GALtB,eAKR6pB,EALQ,iBAMU7pB,GAAc,GANxB,eAMR8pB,EANQ,iBAOS9pB,GAAc,GAPvB,eAOR+pB,EAPQ,iBASO9pB,GAAc,GATrB,eASR+pB,EATQ,iBAUS/pB,GAAc,GAVvB,eAURgqB,EAVQ,iBAWQhqB,GAAc,GAXtB,eAWRiqB,EAXQ,iBAaQ1pB,GAAgB,GAbxB,eAaR2pB,EAbQ,iBAcU3pB,GAAgB,GAd1B,eAcR4pB,EAdQ,iBAeS5pB,GAAgB,GAfzB,QAeR6pB,EAfQ,OAiBV5yB,IACF6yB,EAAqBC,EAAcb,IACnCc,EAAoBD,EAAcZ,IAClCc,EAAiBF,EAAcX,IAE/Bc,EAAwBb,GACxBc,EAAuBb,GACvBc,EAAoBb,GAEpBc,EAAqBb,GACrBc,EAAoBb,GACpBc,EAAiBb,GAEjBc,EAAoBb,GACpBc,GAAmBb,GACnBc,GAAgBb,IAhCJ,4CAAH,sDAoCPE,EAAgB,SAACY,GACrB,IAAM3R,EAAM,GAMZ,OALA2R,EAAKC,SAAQ,SAAUvxB,GACrB,IAAMwxB,EAAU,CAAE/9B,KAAMuM,EAAKvM,KAAMsxB,KAAM0M,EAAUzxB,EAAK+kB,OACxDpF,EAAI1L,KAAKud,MAGJ7R,GAGH8R,EAAY,SAAC1M,GAEjB,OADY,IAAIE,KAAKF,GACV2M,qBAAqBtY,UAAU,EAAG,IAY/Cpa,IAAMrB,WAAU,YATI,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAEA,EAAkDznB,IAAMhF,SAAgC,IAAxF,mBAAO23B,EAAP,KAA0BlB,EAA1B,KACA,EAAgDzxB,IAAMhF,SAAgC,IAAtF,mBAAO43B,EAAP,KAAyBjB,EAAzB,KACA,EAA0C3xB,IAAMhF,SAAgC,IAAhF,mBAAO63B,EAAP,KAAsBjB,EAAtB,KAEA,EAAwD5xB,IAAMhF,SAN3B,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAMzF,mBAAO6D,EAAP,KAA6BjB,EAA7B,KACA,EAAsD7xB,IAAMhF,SAPzB,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAOzF,mBAAO8D,EAAP,KAA4BjB,EAA5B,KACA,EAAgD9xB,IAAMhF,SARnB,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAQzF,mBAAO+D,EAAP,KAAyBjB,EAAzB,KAEA,EAAkD/xB,IAAMhF,SAVrB,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAUzF,mBAAOgE,EAAP,KAA0BjB,EAA1B,KACA,EAAgDhyB,IAAMhF,SAXnB,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAWzF,mBAAOiE,EAAP,KAAyBjB,EAAzB,KACA,EAA0CjyB,IAAMhF,SAZb,CAAEkM,SAAU,EAAG6nB,aAAc,EAAGC,QAAS,EAAGC,SAAU,IAYzF,mBAAOkE,EAAP,KAAsBjB,EAAtB,KAEA,EAAgDlyB,IAAMhF,SAAuB,CAAEy1B,MAAO,GAAIh8B,KAAM,KAAhG,mBAAO2+B,EAAP,KAAyBjB,EAAzB,KACA,EAA8CnyB,IAAMhF,SAAuB,CAAEy1B,MAAO,GAAIh8B,KAAM,KAA9F,mBAAO4+B,EAAP,KAAwBjB,GAAxB,KACA,GAAwCpyB,IAAMhF,SAAuB,CAAEy1B,MAAO,GAAIh8B,KAAM,KAAxF,qBAAO6+B,GAAP,MAAqBjB,GAArB,MAEMr0B,GAAOC,eAAe1I,QAAQ,UAEpC,OACE,gBAAC,IAAMsM,SAAP,WACE,eAAC,GAAD,IACA,gBAAC6O,GAAA,EAAD,WACE,eAACnP,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQu1B,UAA3D,yGAGA,eAACzhB,GAAA,EAAD,IACA,eAAC1N,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQsyB,MAA3D,qHAGA,gBAACjyB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeH,UAAWN,EAAQw1B,SAAjF,UACE,eAACn1B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACEnyB,MAAM,UACN3M,KAAMk+B,EACNvE,MAAM,2BACNF,MAAM,4EACNr4B,KAAK,+FAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACEnyB,MAAM,UACN3M,KAAMm+B,EACNxE,MAAM,2BACNF,MAAM,6KACNr4B,KAAK,yFAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CAAWnyB,MAAM,UAAU3M,KAAMo+B,EAAezE,MAAM,2BAAOF,MAAM,6CAAUr4B,KAAK,kGAIxF,eAACoZ,GAAA,EAAD,IACA,eAAC1N,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQsyB,MAA3D,8FAGA,gBAACjyB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeH,UAAWN,EAAQw1B,SAAjF,UACE,eAACn1B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAMq+B,EACNj9B,KAAK,4JAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAMs+B,EACNl9B,KAAK,wKAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAMu+B,EACNn9B,KAAK,+JAKb,eAACoZ,GAAA,EAAD,IACA,eAAC1N,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQsyB,MAA3D,iHAGA,gBAACjyB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeH,UAAWN,EAAQw1B,SAAjF,UACE,eAACn1B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAMw+B,EACNp9B,KAAK,gHAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAMy+B,EACNr9B,KAAK,4HAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAM0+B,EACNt9B,KAAK,mHAKb,eAACoZ,GAAA,EAAD,IACU,UAATjR,KAAoC,OAAhBo1B,QAAgB,IAAhBA,GAAA,UAAAA,EAAkB3+B,YAAlB,eAAwB8Q,QAAS,GACpD,gBAAC,IAAM1D,SAAP,WACE,eAACN,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQsyB,MAA3D,qHAGA,gBAACjyB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAAeH,UAAWN,EAAQw1B,SAAjF,UACE,eAACn1B,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAM2+B,EACNv9B,KAAK,gHAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAM4+B,EACNx9B,KAAK,4HAIX,eAAC2F,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAAnD,SACE,eAAC8N,GAAA,EAAD,CAAO6pB,UAAW,EAAlB,SACE,eAAC,GAAD,CACErE,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1Cz6B,KAAM6+B,GACNz9B,KAAK,mHAKb,eAACoZ,GAAA,EAAD,OAGJ,eAAC1N,EAAA,EAAD,CAAYxF,QAAQ,KAAK0F,MAAM,SAAShG,UAAWN,EAAQsyB,MAA3D,uKAGA,eAAC,GAAD,WC1PFlzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA2Eb24B,GAjE+C,SAAAz4B,GAC5D,IAAMI,EAAUZ,KAEhB,EAAwByF,IAAMhF,SAAS,IAAvC,mBAAOnF,EAAP,KAAa49B,EAAb,KAEA,EAAwBzzB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAMMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVmB,EAAK0P,OAAS,GADJ,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,sCAKMxJ,GAAqBP,GAL3B,eAMDkF,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAXE,2CAAH,qDAgBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO9B,EACPqG,SA5CmB,SAACC,GACxBs3B,EAAQt3B,EAAME,OAAO1E,QA4CjBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,8DCrEFzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA+Fb64B,GApF2C,SAAA34B,GACxD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,sEACIsR,GAAkBjL,EAAMzE,IAD5B,OACRwS,EADQ,OAEVlK,GACF60B,EAAQ3qB,EAAIjT,MAHA,2CAAH,sDAgBb8I,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,MAAwBznB,IAAMhF,SAAS,IAAvC,mBAAOnF,EAAP,KAAa49B,EAAb,KACA,EAAwBzzB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAMMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVmB,EAAK0P,OAAS,GADJ,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,sCAKMif,GAAqB9jB,EAAMzE,GAAIT,GALrC,eAMDkF,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAXE,2CAAH,qDAgBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO9B,EACPqG,SA5CmB,SAACC,GACxBs3B,EAAQt3B,EAAME,OAAO1E,QA4CjBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,oEC7FK23B,GAAqB,WAChC,IASM7zB,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGoF,GAAqBxD,GADxB,UAEH,IAFG,8BAGbq2B,EACE,ukBAEF/sB,GAAQ,GANK,mBAON,GAPM,iCAUR,GAVQ,2CAAH,sDAad,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,8FACL0xB,QAASxhB,GACTyiB,QA7CwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,MAyCLuW,SAAU,GACVQ,UAlBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAiBlBhF,aAde,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAYlBpF,eAAgBloB,EAChBG,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,+IACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAsBvpB,QAASitB,EAAetD,UAAWyD,IAC/DptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,qJACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAoB7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACzEptB,QAASmtB,QC7DXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA4Nb+4B,GAlNqC,SAAA74B,GAClD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI/kB,KAFJ,OAER+C,EAFQ,OAGVlK,IACFi1B,EAAmB/qB,GACnBgiB,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMi+B,EAAcj+B,KACpBuB,UAAW08B,EAAc18B,UACzBI,iBAAkBs8B,EAAct8B,iBAChCH,MAAOy8B,EAAcz8B,MACrBC,SAAUw8B,EAAcx8B,SACxBC,SAAUu8B,EAAcv8B,WAG1B,EAA8ByI,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAS,CACvDnF,KAAM,GACNuB,WAAW,EACXI,iBAAkB,GAClBH,OAAO,EACPC,SAAU,EACVC,SAAU,IANZ,mBAAOu8B,EAAP,KAAsBC,EAAtB,KAQA,EAA8C/zB,IAAMhF,SAA2B,IAA/E,mBAAOmb,EAAP,KAAwB0d,EAAxB,KACA,EAAwB7zB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAsCMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVo/B,EAAcj+B,KAAK0P,OAAS,GADlB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHk0B,EAAcz8B,OAASy8B,EAAcx8B,SAAW,GAAKw8B,EAAcv8B,SAAW,GAJ3E,iBAKZ8T,EAAW,2QACXzL,GAAQ,GANI,yCAQMzI,GAChB28B,EAAcj+B,KACdi+B,EAAc18B,UACd08B,EAAcz8B,MACdy8B,EAAcx8B,SACdw8B,EAAcv8B,SACdu8B,EAAct8B,kBAdJ,gBAgBDuD,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IArBE,4CAAH,qDA0Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj+B,KACrBqG,SA5Fe,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzBo8B,EAAiBt/B,IA0FTkY,MAAM,mDACN5Q,QAAQ,aAEV,eAAC6Q,GAAA,EAAD,CACEC,QACE,eAAC1L,EAAA,EAAD,CACEE,QAASyyB,EAAc18B,UACvB8E,SA5EgB,SAACC,EAA4CkF,GACzE,IAAM5M,EAAOw2B,IACbx2B,EAAK2C,UAAYiK,EACjB0yB,EAAiBt/B,IA0ELoB,KAAK,YACLuL,MAAM,YAGVuL,MAAM,uCACNlR,UAAWN,EAAQ2P,SAErB,eAAC7O,GAAA,EAAD,CACE3F,GAAG,iBACH01B,QAAM,EACNrf,MAAM,wFACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAct8B,iBACrB0E,SApFgB,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAK+C,iBAAmB2E,EAAME,OAAO1E,MACrCo8B,EAAiBt/B,IAkFTsH,QAAQ,WAPV,SASGoa,EAAgB/L,KAAI,SAAAwK,GAAC,OACpB,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACsW,GAAA,EAAD,CACEC,QACE,eAAC1L,EAAA,EAAD,CAAUE,QAASyyB,EAAcz8B,MAAO6E,SA3G1B,SAACC,EAA4CkF,GACrE,IAAM5M,EAAOw2B,IACbx2B,EAAK4C,MAAQgK,EACb0yB,EAAiBt/B,IAwG8DoB,KAAK,QAAQuL,MAAM,YAE1FuL,MAAM,mDACNlR,UAAWN,EAAQ2P,SAEpBgpB,EAAcz8B,OACb,gBAACmE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAA1B,UACE,eAACM,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcx8B,SACrB4E,SAlIe,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK6C,SAAW6E,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IAgILkY,MAAM,6CACN5Q,QAAQ,WACRkI,KAAK,WAEP,eAAChI,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcv8B,SACrB2E,SArIe,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK8C,SAAW4E,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IAmILkY,MAAM,mDACN5Q,QAAQ,WACRkI,KAAK,cAIX,eAACzI,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iECrNNzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA+Ibm5B,GApI+C,SAAAj5B,GAAU,IAAD,EAC/DI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI5kB,KAFJ,OAER4C,EAFQ,OAGVlK,IACF+e,EAAc7U,GACdgiB,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,uBAAO,CACvBtzB,MAAOm8B,EAAcn8B,MACrBE,YAAW,UAAEkD,EAAMlD,mBAAR,QAAuBi8B,EAAcj8B,cAGlD,EAA8BmI,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAS,CACvDrD,MAAO,GACPE,YAAW,UAAEkD,EAAMlD,mBAAR,QAAuB,KAFpC,mBAAOi8B,EAAP,KAAsBC,EAAtB,KAKA,EAAoC/zB,IAAMhF,SAAsB,IAAhE,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAAwB3d,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAcMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVo/B,EAAcn8B,MAAM4N,OAAS,GADnB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHk0B,EAAcj8B,aAAei8B,EAAcj8B,YAAY0N,OAAS,GAJ7D,iBAKZ8F,EAAW,+FACXzL,GAAQ,GANI,yCAQMnI,GAAqBq8B,EAAcj8B,YAAai8B,EAAcn8B,OARpE,gBASDoD,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcn8B,MACrBuE,SA7DgB,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKkD,MAAQwE,EAAME,OAAO1E,MAC1Bo8B,EAAiBt/B,IA2DTkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,mDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj8B,YACrBqE,SAjEoB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKoD,YAAcsE,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IA+DTsH,QAAQ,WACRqlB,cAAgCjY,IAAtBpO,EAAMlD,YARlB,SAUGU,EAAW6R,KAAI,SAAAwK,GAAC,OACf,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iECxINzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAkJbo5B,GAvI2C,SAAAl5B,GACxD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI5kB,KAFJ,cAER4C,EAFQ,gBAGKtC,GAAkBzL,EAAMzE,IAH7B,OAGR7B,EAHQ,OAIVmK,IACF+e,EAAc7U,GACdirB,EAAiB,CACfp8B,MAAOlD,EAAKkD,MACZE,YAAapD,EAAKoD,cAEpBizB,GAAW,IAVC,2CAAH,sDAuBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBtzB,MAAOm8B,EAAcn8B,MACrBE,YAAai8B,EAAcj8B,cAG7B,EAA8BmI,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAS,CACvDrD,MAAO,GACPE,YAAa,KAFf,mBAAOi8B,EAAP,KAAsBC,EAAtB,KAIA,EAAoC/zB,IAAMhF,SAAsB,IAAhE,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAAwB3d,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAcMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVo/B,EAAcn8B,MAAM4N,OAAS,GADnB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHk0B,EAAcj8B,aAAei8B,EAAcj8B,YAAY0N,OAAS,GAJ7D,iBAKZ8F,EAAW,+FACXzL,GAAQ,GANI,yCAQMqf,GAAqBlkB,EAAMzE,GAAIw9B,EAAcj8B,YAAai8B,EAAcn8B,OAR9E,gBASDoD,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcn8B,MACrBuE,SA7DgB,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKkD,MAAQwE,EAAME,OAAO1E,MAC1Bo8B,EAAiBt/B,IA2DTkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,mDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj8B,YACrBqE,SAjEoB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKoD,YAAcsE,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IA+DTsH,QAAQ,WAPV,SASGxD,EAAW6R,KAAI,SAAAwK,GAAC,OACf,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,uEC1ICk4B,GAAoD,SAAAn5B,GAC/D,IASM+E,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGsF,GAAqB1D,GADxB,UAEH,IAFG,8BAGbq2B,EAAS,2gBACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaMvB,EAAU5gB,GAAqB5G,K,UAAWhF,EAAMzE,IAEtD,OACE,gBAAC,IAAMuL,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,gHACL0xB,QAASA,EACTiB,QA7CwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,QACPwJ,WAAY,mDACZhc,MAAO,MAyCLuW,SAAU,GACVQ,UApBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAmBlBhF,aAhBe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAclBpF,eAAgBloB,EAChBG,KAAMA,EACNqoB,SAAO,EACP1oB,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,2JACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAsBtxB,YAAakD,EAAMzE,GAAIsJ,QAASitB,EAAetD,UAAWyD,IACtFptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,iKACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAoB7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACzEptB,QAASmtB,QCjEXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAyObs5B,GA9NiC,SAAAp5B,GAC9C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI/kB,KAFJ,cAER+C,EAFQ,gBAGK3C,GAAapL,EAAMzE,IAHxB,OAGR7B,EAHQ,OAIVmK,IACFm1B,EAAiB,CACfl+B,KAAMpB,EAAKoB,KACXuB,UAAW3C,EAAK2C,UAChBC,MAAO5C,EAAK4C,MACZC,SAAU7C,EAAK6C,SACfC,SAAU9C,EAAK8C,SACfC,iBAAkB/C,EAAK+C,mBAEzBq8B,EAAmB/qB,GACnBgiB,GAAW,IAdC,2CAAH,sDA2BbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMi+B,EAAcj+B,KACpBuB,UAAW08B,EAAc18B,UACzBI,iBAAkBs8B,EAAct8B,iBAChCH,MAAOy8B,EAAcz8B,MACrBC,SAAUw8B,EAAcx8B,SACxBC,SAAUu8B,EAAcv8B,WAG1B,EAA8ByI,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAS,CACvDnF,KAAM,GACNuB,WAAW,EACXI,iBAAkB,GAClBH,OAAO,EACPC,SAAU,EACVC,SAAU,IANZ,mBAAOu8B,EAAP,KAAsBC,EAAtB,KAQA,EAA8C/zB,IAAMhF,SAA2B,IAA/E,mBAAOmb,EAAP,KAAwB0d,EAAxB,KACA,EAAwB7zB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAsCMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVo/B,EAAcj+B,KAAK0P,OAAS,GADlB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHk0B,EAAcz8B,OAASy8B,EAAcx8B,SAAW,GAAKw8B,EAAcv8B,SAAW,GAJ3E,iBAKZ8T,EAAW,2QACXzL,GAAQ,GANI,yCAQMmf,GAChBhkB,EAAMzE,GACNw9B,EAAcj+B,KACdi+B,EAAc18B,UACd08B,EAAcz8B,MACdy8B,EAAcx8B,SACdw8B,EAAcv8B,SACdu8B,EAAct8B,kBAfJ,gBAiBDuD,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAtBE,4CAAH,qDA2Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj+B,KACrBqG,SA7Fe,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzBo8B,EAAiBt/B,IA2FTkY,MAAM,mDACN5Q,QAAQ,aAEV,eAAC6Q,GAAA,EAAD,CACEC,QACE,eAAC1L,EAAA,EAAD,CACEE,QAASyyB,EAAc18B,UACvB8E,SA7EgB,SAACC,EAA4CkF,GACzE,IAAM5M,EAAOw2B,IACbx2B,EAAK2C,UAAYiK,EACjB0yB,EAAiBt/B,IA2ELoB,KAAK,YACLuL,MAAM,YAGVuL,MAAM,uCACNlR,UAAWN,EAAQ2P,SAErB,eAAC7O,GAAA,EAAD,CACE3F,GAAG,iBACH01B,QAAM,EACNrf,MAAM,wFACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAct8B,iBACrB0E,SArFgB,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAK+C,iBAAmB2E,EAAME,OAAO1E,MACrCo8B,EAAiBt/B,IAmFTsH,QAAQ,WAPV,SASGoa,EAAgB/L,KAAI,SAAAwK,GAAC,OACpB,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACsW,GAAA,EAAD,CACEC,QACE,eAAC1L,EAAA,EAAD,CAAUE,QAASyyB,EAAcz8B,MAAO6E,SA5G1B,SAACC,EAA4CkF,GACrE,IAAM5M,EAAOw2B,IACbx2B,EAAK4C,MAAQgK,EACb0yB,EAAiBt/B,IAyG8DoB,KAAK,QAAQuL,MAAM,YAE1FuL,MAAM,mDACNlR,UAAWN,EAAQ2P,SAEpBgpB,EAAcz8B,MACb,gBAACmE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAA1B,UACE,eAACM,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcx8B,SACrB4E,SAnIe,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK6C,SAAW6E,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IAiILkY,MAAM,6CACN5Q,QAAQ,WACRkI,KAAK,WAEP,eAAChI,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcv8B,SACrB2E,SAtIe,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK8C,SAAW4E,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IAoILkY,MAAM,mDACN5Q,QAAQ,WACRkI,KAAK,cAIT,eAAC,GAAD,CAAoB3N,GAAIyE,EAAMzE,KAEhC,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iECxOCo4B,GAAoB,WAC/B,IAsCMt0B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGqF,GAAgBzD,GADnB,UAEH,IAFG,8BAGbq2B,EAAS,2gBACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,yDACL0xB,QAASthB,GACTuiB,QAxEwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,YACPwJ,WAAY,uCACZhc,MAAO,IACPlN,KAAM,WAER,CACE0f,MAAO,QACPwJ,WAAY,mDACZhc,MAAO,IACPlN,KAAM,WAER,CACE0f,MAAO,WACPwJ,WAAY,+CACZhc,MAAO,IACPlN,KAAM,UAER,CACE0f,MAAO,WACPwJ,WAAY,qDACZhc,MAAO,IACPlN,KAAM,UAER,CACE0f,MAAO,qBACPwJ,WAAY,2BACZhc,MAAO,MAuCLuW,SAAU,GACVQ,UAlBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAiBlBhF,aAde,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAYlBpF,eAAgBloB,EAChBG,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,0GACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAiBvpB,QAASitB,EAAetD,UAAWyD,IAC1DptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,gHACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAe7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACpEptB,QAASmtB,QCrFXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAgXbw5B,GAtWmC,SAAAt5B,GAChD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEQ/lB,KAFR,OAERwK,EAFQ,OAGV3Q,IACF4Q,EAAWD,GACXub,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBx0B,MAAOq9B,EAAcr9B,MACrBC,SAAUo9B,EAAcp9B,SACxBC,MAAOm9B,EAAcn9B,MACrBC,YAAak9B,EAAcl9B,YAC3BC,UAAWi9B,EAAcj9B,UACzBC,WAAYg9B,EAAch9B,WAC1BC,SAAU+8B,EAAc/8B,SACxBiC,SAAU86B,EAAc96B,SACxB3D,OAAQy+B,EAAcz+B,OACtB2B,SAAU88B,EAAc98B,SACxBC,YAAa68B,EAAc78B,YAC3BC,aAAc48B,EAAc58B,eAG9B,EAA0C8I,IAAMhF,SAAS,CACvDvE,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,SAAU,GACViC,SAAU,EACV3D,OAAQ,EACR2B,SAAU,EACVC,YAAa,EACbC,cAAc,IAZhB,mBAAO48B,EAAP,KAAsBC,EAAtB,KAeA,EAA8B/zB,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAA8Bt0B,IAAMhF,SAAmB,IAAvD,mBAAOse,EAAP,KAAgBib,EAAhB,KACA,EAAoCv0B,IAAMhF,SAAsB,IAAhE,mBAAO4rB,EAAP,KAAmB4N,EAAnB,KACA,EAAwBx0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KA4DMopB,EAAgB,uCAAG,WAAOt4B,GAAP,mBAAAzH,EAAA,0DACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,OACvBlD,EAAKyC,aAHc,gCAIFkP,GAAW3R,EAAKY,QAJd,OAIfq/B,EAJe,OAKrBH,EAAWG,GALU,wCAOFruB,GAAc5R,EAAKY,QAPjB,QAOfs/B,EAPe,OAQrBH,EAAcG,GARO,QAUvBZ,EAAiBt/B,GAVM,4CAAH,sDAyBhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEM8B,GAChBs9B,EAAcr9B,MACdq9B,EAAcp9B,SACdo9B,EAAcn9B,MACdm9B,EAAcl9B,YACdk9B,EAAcj9B,UACdi9B,EAAch9B,WACdg9B,EAAc/8B,SACd+8B,EAAc98B,SACd88B,EAAc78B,YACd68B,EAAc58B,cAZJ,eAeD6D,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IApBE,gDAuBZyL,EAAW,wJAAD,cACVzL,GAAQ,GAxBI,yDAAH,qDA4Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,gBAACJ,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcr9B,MACrByF,SA/IY,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKgC,MAAQ0F,EAAME,OAAO1E,MAC1Bo8B,EAAiBt/B,IA6ILkY,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcp9B,SACrBwF,SAjJe,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAKiC,SAAWyF,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IA+ILkY,MAAM,uCACN5Q,QAAQ,WACRkI,KAAK,gBAGT,gBAACzI,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,YACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj9B,UACrBqF,SA1IgB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKoC,UAAYsF,EAAME,OAAO1E,MAC9Bo8B,EAAiBt/B,IAwILkY,MAAM,qBACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAch9B,WACrBoF,SA5IiB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKqC,WAAaqF,EAAME,OAAO1E,MAC/Bo8B,EAAiBt/B,IA0ILkY,MAAM,6CACN5Q,QAAQ,gBAGZ,gBAACP,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcn9B,MACrBuF,SAxKY,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKkC,MAAQwF,EAAME,OAAO1E,MAC1Bo8B,EAAiBt/B,IAsKLkY,MAAM,QACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcl9B,YACrBsF,SA1KkB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IAwKLkY,MAAM,6CACN5Q,QAAQ,gBAGZ,gBAACE,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,2BACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc/8B,SACrBmF,SAnKa,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKsC,SAAWoF,EAAME,OAAO1E,MACP,oBAAlBlD,EAAKsC,SACPtC,EAAKyC,cAAe,EAEpBzC,EAAKyC,cAAe,EAEtB68B,EAAiBt/B,IAqJT,UAQE,eAAC8V,GAAA,EAAD,CAAkB5S,MAAO,UAAzB,iDAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,UAAzB,6DAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,gBAAzB,6DAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,kBAAzB,kGAAe,MAIjB,eAACsE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc96B,SACrBkD,SA7Ke,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuE,SAAWmD,EAAME,OAAO1E,MAC7B,IAAMyY,EAASb,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO7B,EAAKuE,YAC3CoX,GACFkkB,EAAUlkB,EAAOJ,QAGnB+jB,EAAiBt/B,IAsKPsH,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKO,IAA3Bw9B,EAAc96B,UACb,eAACiD,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcz+B,OACrB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAMG,IAAzBw9B,EAAcz+B,QACb,eAAC,IAAMwM,SAAP,UACGiyB,EAAc58B,aACb,eAAC+E,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,6CACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc98B,SACrBkF,SAxLS,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuC,SAAWmF,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IAsLDsH,QAAQ,WAPV,SASGud,EAAQlP,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAMrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc78B,YACrBiF,SAlMY,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKwC,YAAckF,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IAgMDsH,QAAQ,WAPV,SASG6qB,EAAWxc,KAAI,SAAAwK,GAAC,OACf,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,cAS7B,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iE,UChXNzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwsB,SAAU,CACRtsB,QAASH,EAAMI,QAAQ,IAEzBssB,QAAS,CACP/lB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBiY,OAAQ,CACNhmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBylB,SAAU,CACRxzB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBkY,UAAW,CACTjmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,iBA0BZ0lB,GAAY,SAAQ95B,GAAuB,IAAD,EAC/CI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,sEACIqG,EAAMwsB,UADV,OACRze,EADQ,OAEVlK,IACF4oB,EAAQ1e,GACFgQ,EAFO,aAEIhQ,GACjB8N,EAAQkC,IALI,2CAAH,sDASbna,qBAAU,WACR8oB,MACC,IAEH,IAAMA,EAAc,WAClB,IAAI7oB,GAAY,EAGhB,OAFA2oB,EAAQ3oB,GAED,WACLA,GAAY,IAIR8oB,EAAa3sB,EAAb2sB,SACR,EAAwB1sB,mBAAsB,IAA9C,mBAAOvG,EAAP,KAAa+yB,EAAb,KACA,EAA4BxsB,mBAAsB,IAAlD,mBAAO2sB,EAAP,KAAiB/Q,EAAjB,KACA,EAA8B5b,mBAAiB,GAA/C,mBAAO4sB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7sB,qBAAxC,mBAAO8sB,EAAP,KAAqBC,EAArB,KAiBM+M,EAAK,uCAAG,sBAAApgC,EAAA,0DACRozB,IAAgB/sB,EAAMg6B,YADd,gCAEQh6B,EAAMg6B,YAAYjN,GAF1B,eAIRL,IAJQ,2CAAH,qDASLuN,EAAO,uCAAG,sBAAAtgC,EAAA,0DACVozB,IAAgB/sB,EAAMk6B,cADZ,gCAEMl6B,EAAMk6B,cAAcnN,GAF1B,eAIVL,IAJU,2CAAH,qDASPQ,EAAQ,uCAAG,sBAAAvzB,EAAA,sDACXqG,EAAMmtB,WACRntB,EAAMmtB,UAAUT,EAAY1nB,KAAK,KAFpB,2CAAH,qDAMRooB,EAAM,uCAAG,sBAAAzzB,EAAA,sDACTozB,GAAgB/sB,EAAMqtB,cACxBrtB,EAAMqtB,aAAaN,EAAcL,EAAY1nB,KAAK,KAFvC,2CAAH,qDAMNG,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIApF,EAAM6E,SACR7E,EAAM6E,SAAQ,IAIlB,OACE,gBAAC,IAAMiC,SAAP,WACE,eAAC,GAAD,IACC9G,EAAM6E,SAAW7E,EAAMstB,OACtB,eAAC9nB,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMlF,EAAMkF,KACZU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAACW,EAAA,EAAD,CAAOD,QAASV,EAAaY,SAAS,QAAtC,SACG/F,EAAMstB,UAIb,gBAAC7sB,EAAA,EAAD,CAAMG,UAAU,SAASF,UAAWN,EAAQ+rB,SAAUxrB,WAAS,EAACoG,aAAa,UAA7E,UACE,eAACP,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,SACGhB,EAAMlF,OAET,eAAC,KAAD,CACE4oB,MAAO,CAAEjiB,UAAW,KACpBwf,KAAM2L,EACN7O,KAAM8O,EACNW,SAAU9zB,EAAK8Q,OACfijB,QAASztB,EAAMytB,QACfd,SAAUA,EACVe,mBAAoB,CAACf,GACrBgB,aAlFa,SAAC5P,EAAcpc,GAClC,IAAMisB,EAAK,aAAOl0B,GAClBmiB,EAAQ+R,GACRd,EAAW/O,IAgFL8P,uBA7EY,SAACC,EAAoCnsB,GACnDmsB,EAAetjB,OAAS,IAC1BwiB,EAAgBc,EAAe,IAC3B9tB,EAAM+tB,aACR/tB,EAAM+tB,YAAYD,EAAe,QA2EjC,gBAACrtB,EAAA,EAAD,CAAMC,UAAWN,EAAQ+rB,SAAUvrB,UAAU,MAAMD,WAAS,EAACE,eAAe,WAAWkG,aAAa,UAApG,UACE,eAACtG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAWrmB,EAAMmtB,UACjBnsB,QAAQ,WACRN,UAAWN,EAAQgsB,QACnB/lB,MAAM,UACNe,aAAW,MACXnG,QAASisB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAACzsB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMqtB,aACzDrsB,QAAQ,WACRN,UAAWN,EAAQksB,UACnBjmB,MAAM,UACNe,aAAW,OACXnG,QAASmsB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAAC3sB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACG4mB,IAAY,OAAIH,QAAJ,IAAIA,GAAJ,UAAIA,EAAU7X,MAAK,SAAAolB,GAAC,OAAIA,EAAE5+B,KAAOwxB,YAAjC,aAAI,EAA4CqN,QAC3D,gBAACpM,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMk6B,cACzDl5B,QAAQ,WACRN,UAAWN,EAAQy5B,SACnBxzB,MAAM,UACNe,aAAW,SACXnG,QAASg5B,EANX,UAQE,eAAC,KAAD,IARF,0FAYA,gBAACjM,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMg6B,YACzDh5B,QAAQ,WACRN,UAAWN,EAAQisB,OACnBhmB,MAAM,UACNe,aAAW,SACXnG,QAAS84B,EANX,UAQE,eAAC,KAAD,IARF,gGC9MRv6B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAyXbu6B,GA9WmC,SAAAr6B,GAChD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,uBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEIvkB,GAAUxL,EAAMzE,IAFpB,cAERwS,EAFQ,gBAGQ/D,KAHR,UAGRwK,EAHQ,QAIVzG,EAAI5R,eAAgB0H,EAJV,kCAKOwH,GAAW0C,EAAIzT,QALtB,QAKNq/B,EALM,OAMZH,EAAWG,GANC,yCAQOruB,GAAcyC,EAAIzT,QARzB,QAQNs/B,EARM,OASZH,EAAcG,GATF,QAWV/1B,IACFm1B,EAAiB,CACft9B,MAAOqS,EAAIyF,SACX5X,MAAOmS,EAAInS,MACXC,YAAakS,EAAIlS,YACjBC,UAAWiS,EAAIjS,UACfC,WAAYgS,EAAIhS,WAChBC,SAAU+R,EAAI9K,KACdhF,SAAU8P,EAAI9P,SACd3D,OAAQyT,EAAIzT,OACZ2B,SAAU8R,EAAI9R,SACdC,YAAa6R,EAAI7R,YACjBC,aAAc4R,EAAI5R,eAEpBsY,EAAWD,IACLM,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAOwS,EAAI9P,cAEzCs7B,EAAUzkB,EAAIG,QAEhB8a,GAAW,IA9BC,4CAAH,sDA2CbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBx0B,MAAOq9B,EAAcr9B,MACrBE,MAAOm9B,EAAcn9B,MACrBC,YAAak9B,EAAcl9B,YAC3BC,UAAWi9B,EAAcj9B,UACzBC,WAAYg9B,EAAch9B,WAC1BC,SAAU+8B,EAAc/8B,SACxBiC,SAAU86B,EAAc96B,SACxB3D,OAAQy+B,EAAcz+B,OACtB2B,SAAU88B,EAAc98B,SACxBC,YAAa68B,EAAc78B,YAC3BC,aAAc48B,EAAc58B,eAG9B,EAA0C8I,IAAMhF,SAAS,CACvDvE,MAAO,GACPE,MAAO,GACPC,YAAa,GACbC,UAAW,GACXC,WAAY,GACZC,SAAU,GACViC,SAAU,EACV3D,OAAQ,EACR2B,SAAU,EACVC,YAAa,EACbC,cAAc,IAXhB,mBAAO48B,EAAP,KAAsBC,EAAtB,KAcA,EAA8B/zB,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAA8Bt0B,IAAMhF,SAAmB,IAAvD,mBAAOse,EAAP,KAAgBib,EAAhB,KACA,EAAoCv0B,IAAMhF,SAAsB,IAAhE,mBAAO4rB,EAAP,KAAmB4N,EAAnB,KACA,EAAwBx0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KA0BMgqB,EAAgB,uCAAG,WAAOl5B,GAAP,mBAAAzH,EAAA,0DACjBD,EAAOw2B,KACRl0B,SAAWoF,EAAME,OAAO1E,MACP,oBAAlBlD,EAAKsC,SAHc,oBAIrBtC,EAAKyC,cAAe,EACA,IAAhBzC,EAAKY,OALY,gCAMAgR,GAAc5R,EAAKY,QANnB,OAMbs/B,EANa,OAOnBH,EAAcG,GAPK,kCAUrBlgC,EAAKyC,cAAe,EACA,IAAhBzC,EAAKY,OAXY,kCAYA+Q,GAAW3R,EAAKY,QAZhB,QAYbs/B,EAZa,OAanBH,EAAcG,GAbK,QAiBvBZ,EAAiBt/B,GAjBM,4CAAH,sDA+BhBggC,EAAgB,uCAAG,WAAOt4B,GAAP,mBAAAzH,EAAA,0DACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,OACvBlD,EAAKyC,aAHc,gCAIFkP,GAAW3R,EAAKY,QAJd,OAIfq/B,EAJe,OAKrBH,EAAWG,GALU,wCAOFruB,GAAc5R,EAAKY,QAPjB,QAOfs/B,EAPe,OAQrBH,EAAcG,GARO,QAUvBZ,EAAiBt/B,GAVM,4CAAH,sDAyBhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEMsqB,GAChBjkB,EAAMzE,GACNw9B,EAAcn9B,MACdm9B,EAAcl9B,YACdk9B,EAAcj9B,UACdi9B,EAAch9B,WACdg9B,EAAc/8B,SACd+8B,EAAc98B,SACd88B,EAAc78B,YACd68B,EAAc58B,cAXJ,eAcD6D,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAnBE,gDAsBZyL,EAAW,wJAAD,cACVzL,GAAQ,GAvBI,yDAAH,qDA2Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcr9B,MACrBkW,MAAM,iCACN5Q,QAAQ,WACRqlB,UAAQ,IAEV,gBAAC5lB,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,YACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj9B,UACrBqF,SAvIgB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKoC,UAAYsF,EAAME,OAAO1E,MAC9Bo8B,EAAiBt/B,IAqILkY,MAAM,qBACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAch9B,WACrBoF,SAzIiB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKqC,WAAaqF,EAAME,OAAO1E,MAC/Bo8B,EAAiBt/B,IAuILkY,MAAM,6CACN5Q,QAAQ,gBAGZ,gBAACP,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,eAA/C,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcn9B,MACrBuF,SArKY,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKkC,MAAQwF,EAAME,OAAO1E,MAC1Bo8B,EAAiBt/B,IAmKLkY,MAAM,QACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcl9B,YACrBsF,SAvKkB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IAqKLkY,MAAM,6CACN5Q,QAAQ,gBAGZ,gBAACE,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,2BACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc/8B,SACrBmF,SAAUm5B,EANZ,UAQE,eAAC9qB,GAAA,EAAD,CAAkB5S,MAAO,UAAzB,iDAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,UAAzB,6DAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,gBAAzB,6DAAe,GAGf,eAAC4S,GAAA,EAAD,CAAkB5S,MAAO,kBAAzB,kGAAe,MAIjB,eAACsE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc96B,SACrBkD,SAjKe,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuE,SAAWmD,EAAME,OAAO1E,MAC7B,IAAMyY,EAASb,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO7B,EAAKuE,YAC3CoX,GACFkkB,EAAUlkB,EAAOJ,QAGnB+jB,EAAiBt/B,IA0JPsH,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKO,IAA3Bw9B,EAAc96B,UACb,eAACiD,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcz+B,OACrB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAMG,IAAzBw9B,EAAcz+B,QACb,eAAC,IAAMwM,SAAP,UACGiyB,EAAc58B,aACb,eAAC+E,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,6CACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc98B,SACrBkF,SA5KS,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuC,SAAWmF,EAAME,OAAO1E,MAC7Bo8B,EAAiBt/B,IA0KDsH,QAAQ,WAPV,SASGud,EAAQlP,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAMrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc78B,YACrBiF,SAtLY,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKwC,YAAckF,EAAME,OAAO1E,MAChCo8B,EAAiBt/B,IAoLDsH,QAAQ,WAPV,SASG6qB,EAAWxc,KAAI,SAAAwK,GAAC,OACf,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,cAS7B,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,uECzXCs5B,GAAc,WACzB,IAuDMR,EAAK,uCAAG,WAAOx+B,GAAP,SAAA5B,EAAA,sEACM2B,GAAQC,GADd,UAEA,IAFA,8BAGVq2B,EAAS,2gBACT/sB,GAAQ,GAJE,mBAKH,GALG,iCAQL,GARK,2CAAH,sDAWLo1B,EAAO,uCAAG,WAAO1+B,GAAP,SAAA5B,EAAA,sEACI6B,GAAUD,GADd,UAEF,IAFE,8BAGZq2B,EAAS,2gBACT/sB,GAAQ,GAJI,mBAKL,GALK,iCAQP,GARO,2CAAH,sDAWb,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,yDACL0xB,QAASjhB,GACTkiB,QApGwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,WACPwJ,WAAY,iCACZhc,MAAO,KAET,CACEwS,MAAO,YACPwJ,WAAY,qBACZhc,MAAO,KAET,CACEwS,MAAO,aACPwJ,WAAY,6CACZhc,MAAO,KAET,CACEwS,MAAO,OACPwJ,WAAY,2BACZhc,MAAO,KAET,CACEwS,MAAO,QACPwJ,WAAY,2BACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,6CACZhc,MAAO,KAET,CACEwS,MAAO,WACPwJ,WAAY,yDACZhc,MAAO,KAET,CACEwS,MAAO,WACPwJ,WAAY,sEACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,0DACZhc,MAAO,KAET,CACEwS,MAAO,SACPwJ,WAAY,qBACZhc,MAAO,IACPlN,KAAM,YAkDJyjB,SAAU,GACVQ,UAlBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAiBlBhF,aAde,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAYlB2H,YAAaD,EACbG,cAAeD,EACf/0B,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,4HACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAgBvpB,QAASitB,EAAetD,UAAWyD,IACzDptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,gHACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAgB7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACrEptB,QAASmtB,QCpHXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA4Mb06B,GA3LmD,SAAAx6B,GAChE,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEMvnB,GAAY,EAAG,GAAI,IAAK,CAAC,EAAG,IAFlC,cAERiyB,EAFQ,gBAGIvvB,KAHJ,OAGR6C,EAHQ,OAIVlK,IACF+e,EAAc7U,GACd2sB,EAAYD,EAAM95B,WAClBovB,GAAW,IAPC,2CAAH,sDAoBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp2B,UAAWi/B,EAAcj/B,UACzB8C,MAAOm8B,EAAcn8B,MACrBE,YAAai8B,EAAcj8B,YAC3BC,iBAAkBg8B,EAAch8B,mBAGlC,EAA8BkI,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAwB,CACtEnG,UAAW,GACX8C,MAAO,EACPE,YAAa,GACbC,iBAAkB,KAJpB,mBAAOg8B,EAAP,KAAsBC,EAAtB,KAMA,EAAoC/zB,IAAMhF,SAAsB,IAAhE,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAAkC3d,IAAMhF,WAAxC,mBAAOkZ,EAAP,KAAkBE,EAAlB,KACA,EAAgCpU,IAAMhF,SAAoB,IAA1D,mBAAO0d,EAAP,KAAiB+c,EAAjB,KACA,EAAwBz1B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAiCMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,sEACIkD,GAChBk8B,EAAcj/B,UACdi/B,EAAcn8B,MACdm8B,EAAcj8B,YACdi8B,EAAch8B,kBALF,eAOHiD,EAAMwuB,UACfxuB,EAAMwuB,UAAUC,WAEhBne,EAAW,uJACXzL,GAAQ,IAXI,2CAAH,qDAeb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,UACH01B,QAAM,EACNrf,MAAM,6CACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj/B,UACrBqH,SA9EoB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKI,UAAYsH,EAAME,OAAO1E,MAC9Bo8B,EAAiBt/B,IA4ETsH,QAAQ,WAPV,SASG2c,EAAStO,KAAI,SAAAwK,GAAC,OACb,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,mDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj8B,YACrBqE,SAjFsB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKoD,YAAcsE,EAAME,OAAO1E,MAChC,IAAM+9B,EAAQn9B,EAAWuX,MAAK,SAAA8E,GAAC,OAAIA,EAAEte,KAAO7B,EAAKoD,eAC7C69B,IACFthB,EAAashB,GACTA,EAAMr+B,QACR5C,EAAKqD,iBAAmB,OAG5Bi8B,EAAiBt/B,IAwETsH,QAAQ,WAPV,SASGxD,EAAW6R,KAAI,SAAAwK,GAAC,OACf,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKpB4d,GAAaA,EAAU7c,MACtB,eAAC4E,GAAA,EAAD,CACE3F,GAAG,QACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcn8B,MACrBuE,SArGc,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKkD,MAASwE,EAAME,OAAO1E,MAAmB,EAC9Co8B,EAAiBt/B,IAmGPkY,MAAM,mDACN5Q,QAAQ,WACRkI,KAAK,WAGP,eAAChI,GAAA,EAAD,CACE3F,GAAG,iBACH01B,QAAM,EACNrf,MAAM,mDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAch8B,iBACrBoE,SA9FyB,SAACC,GACpC,IAAM1H,EAAOw2B,IACbx2B,EAAKqD,iBAAmBqE,EAAME,OAAO1E,MACrCo8B,EAAiBt/B,IA4FPsH,QAAQ,WAPV,gBASGmY,QATH,IASGA,OATH,EASGA,EAAWS,gBAAgBvK,KAAI,SAAAwK,GAAC,OAC/B,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAEjd,OADUid,EAAEte,SAMvB,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iEC3MC25B,GAAuB,WAClC,IAmCM71B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGuF,GAAuB3D,GAD1B,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAsC7sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KAOA,OACE,gBAAC,IAAMprB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,oGACL0xB,QAAS9gB,GACT+hB,QA7DwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,QACPwJ,WAAY,mDACZhc,MAAO,IACPlN,KAAM,UAER,CACE0f,MAAO,iBACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,iCACZhc,MAAO,KAET,CACEwS,MAAO,YACPwJ,WAAY,qBACZhc,MAAO,KAET,CACEwS,MAAO,gBACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,qBACZhc,MAAO,MA+BLuW,SAAU,GACVQ,UAZY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAWlBpF,eAAgBloB,EAChBG,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,2JACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAwBvpB,QAASitB,EAAetD,UAAWyD,IACjEptB,QAASitB,Q,yECnEXtyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXwsB,SAAU,CACRtsB,QAASH,EAAMI,QAAQ,IAEzBssB,QAAS,CACP/lB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBymB,WAAY,CACVx0B,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBylB,SAAU,CACRxzB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBiY,OAAQ,CACNhmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrB0mB,UAAW,CACTz0B,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBkY,UAAW,CACTjmB,MAAO3G,EAAMuW,QAAQC,OAAOC,MAC5B/B,gBAAiB,UACjB,UAAW,CACTA,gBAAiB,YAGrBrE,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAefi7B,GAAe,SAAC/6B,GAA0B,IAAD,EAC9CI,EAAUZ,KAoDVw7B,EAAW,uCAAG,WAAOn3B,EAAoBka,EAAc9U,GAAzC,mBAAAtP,EAAA,sEACAyP,GAAoB2U,EApDpB,EAoDuC,OAAQ9U,GAD/C,OAElB,GADM8E,EADY,OAEdlK,EAAW,CAEb,IADMo3B,EADO,aACCvhC,GACLwZ,EAAI,EAAGA,EAvDA,GAuDmBA,EAAInF,EAAIpN,UAAU6J,OAAQ0I,IAC3D+nB,EAxDc,GAwDXld,EAAO,GAAmB7K,GAAKnF,EAAIpN,UAAUuS,GAGlDuZ,EAAQwO,GACRC,EAAantB,EAAIoO,SATD,2CAAH,0DAajBvY,qBAAU,WACR8oB,MACC,IAEH,IAAMA,EAAc,WAClB,IAAI7oB,GAAY,EAGhB,OAFAm3B,EAAYn3B,EAAWs3B,EAAWlyB,GAE3B,WACLpF,GAAY,IAIVu3B,EAAgB,SAACrd,GACrB,IAAIla,GAAY,EAGhB,OAFAm3B,EAAYn3B,EAAWka,EAAM9U,GAEtB,WACLpF,GAAY,IAahB,EAAwB5D,mBAAoB,IAA5C,mBAAOvG,EAAP,KAAa+yB,EAAb,KACA,EAA8BxsB,mBAAiB,GAA/C,mBAAO4sB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7sB,qBAAxC,mBAAO8sB,EAAP,KAAqBC,EAArB,KACA,EAAkC/sB,mBAAiB,GAAnD,mBAAOk7B,EAAP,KAAkBD,EAAlB,KACA,EAA4Bj7B,mBAAiB,IAA7C,mBAAOgJ,EAAP,KAAeqO,EAAf,KAEMqW,EAAY,uCAAG,WAAO5P,EAAcpc,GAArB,eAAAhI,EAAA,sDACb0hC,EAAKtd,EAAO,EAClB+O,EAAW/O,GACXqd,EAAcC,GAHK,2CAAH,wDAeZt2B,EAAQ,uCAAG,sBAAApL,EAAA,0DACXozB,IAAgB/sB,EAAMitB,eADX,gCAEKjtB,EAAMitB,eAAeF,GAF1B,eAIXL,IAJW,2CAAH,qDASRQ,EAAQ,uCAAG,sBAAAvzB,EAAA,sDACXqG,EAAMmtB,WACRntB,EAAMmtB,UAAUT,EAAY1nB,KAAK,KAFpB,2CAAH,qDAMRs2B,EAAO,uCAAG,sBAAA3hC,EAAA,sEACIqD,GAAa+vB,GADjB,eAGZL,IAHY,2CAAH,qDAOP6O,EAAS,uCAAG,sBAAA5hC,EAAA,sEACEsD,GAAe8vB,GADjB,cAEN,GACRL,IAHc,2CAAH,qDAOT8O,EAAW,uCAAG,sBAAA7hC,EAAA,sEACAuD,GAAiB6vB,GADjB,cAER,GACRL,IAHgB,2CAAH,qDAOXU,EAAM,uCAAG,sBAAAzzB,EAAA,sDACTozB,GAAgB/sB,EAAMqtB,cACxBrtB,EAAMqtB,aAAaN,EAAcL,EAAY1nB,KAAK,KAFvC,2CAAH,qDAMNG,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIApF,EAAM6E,SACR7E,EAAM6E,SAAQ,IAWlB,OACE,gBAAC,IAAMiC,SAAP,WACE,eAAC,GAAD,IACC9G,EAAM6E,SAAW7E,EAAMstB,OACtB,eAAC9nB,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMlF,EAAMkF,KACZU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAACW,EAAA,EAAD,CAAOD,QAASV,EAAaY,SAAS,QAAtC,SACG/F,EAAMstB,UAIb,gBAAC7sB,EAAA,EAAD,CAAMG,UAAU,SAASF,UAAWN,EAAQ+rB,SAAUxrB,WAAS,EAACoG,aAAa,UAA7E,UACE,eAACP,EAAA,EAAD,CAAYE,MAAM,SAAS1F,QAAQ,KAAnC,8DAGA,eAACE,GAAA,EAAD,CACE3F,GAAG,wBACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB6B,MAAM,wFACNhV,MAAOqM,EACP9H,SAhCmB,SAACC,GAC1B,IAAMq6B,EAAQr6B,EAAME,OAAO1E,MAC3B6vB,EAAQ,IACRnV,EAAUmkB,GArFY,SAACC,GACvB,IAAI73B,GAAY,EAChBm3B,EAAYn3B,EAAW,EAAG63B,GAoF1BC,CAAgBF,MA8BZ,eAAC,KAAD,CACE/X,MAAO,CAAEjiB,UAAW,KACpBwf,KAAMvnB,EACNqkB,KAAM8O,EACNW,SA9MY,EA8MF2N,EACV1N,QA7MsB,CAC5B,CAAE7E,MAAO,KAAMgT,UAAU,EAAOxJ,WAAY,KAAMhc,MAAO,KACzD,CACEwS,MAAO,OACPwJ,WAAY,mDACZwJ,UAAU,EACVxlB,MAAO,KAET,CACEwS,MAAO,QACPwJ,WAAY,2BACZwJ,UAAU,EACVxlB,MAAO,KAET,CACEwS,MAAO,uBACPwJ,WAAY,mFACZwJ,UAAU,EACVxlB,MAAO,KAET,CACEwS,MAAO,OACPwJ,WAAY,uCACZwJ,UAAU,EACVxlB,MAAO,IACPlN,KAAM,UAER,CACE0f,MAAO,aACPwJ,WAAY,6CACZwJ,UAAU,EACVxlB,MAAO,KAET,CACEwS,MAAO,WACPwJ,WAAY,yDACZwJ,UAAU,EACVxlB,MAAO,IACPylB,YAAa,SAAA/yB,GAAM,gCAAOA,EAAO6hB,IAAI9D,gBAAlB,aAAO,EAAqB/rB,QAEjD,CACE8tB,MAAO,YACPwJ,WAAY,qEACZwJ,UAAU,EACVxlB,MAAO,IACPlN,KAAM,YAiKFyjB,SAhNY,EAiNZe,mBAAoB,CAjNR,GAkNZC,aAAcA,EACdE,uBAxGY,SAACC,EAAoCnsB,GACnDmsB,EAAetjB,OAAS,IAC1BwiB,EAAgBc,EAAe,IAC3B9tB,EAAM+tB,aACR/tB,EAAM+tB,YAAYD,EAAe,QAsGjC,gBAACrtB,EAAA,EAAD,CAAMC,UAAWN,EAAQ+rB,SAAUvrB,UAAU,MAAMD,WAAS,EAACE,eAAe,WAAWkG,aAAa,UAApG,UACE,eAACtG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAWrmB,EAAMmtB,UACjBnsB,QAAQ,WACRN,UAAWN,EAAQgsB,QACnB/lB,MAAM,UACNe,aAAW,MACXnG,QAASisB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAACzsB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMqtB,aACzDrsB,QAAQ,WACRN,UAAWN,EAAQksB,UACnBjmB,MAAM,UACNe,aAAW,OACXnG,QAASmsB,EANX,UAQE,eAAC,KAAD,IARF,wDAYF,eAAC3sB,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACG4mB,IAAY,UAAIrzB,EAAKqb,MAAK,SAAAolB,GAAC,OAAIA,EAAE5+B,KAAOwxB,YAA5B,aAAI,EAAuC+O,WACtD,gBAAC9N,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,EAC3B/rB,QAAQ,WACRN,UAAWN,EAAQ06B,UACnBz0B,MAAM,UACNe,aAAW,SACXnG,QAASu6B,EANX,UAQE,eAAC,KAAD,IARF,mHAYA,gBAACxN,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,EAC3B/rB,QAAQ,WACRN,UAAWN,EAAQy5B,SACnBxzB,MAAM,UACNe,aAAW,SACXnG,QAASs6B,EANX,UAQE,eAAC,KAAD,IARF,mFAcN,gBAAC96B,EAAA,EAAD,CAAMG,UAAU,MAAMD,WAAS,EAACE,eAAe,WAAWkG,aAAa,UAAvE,UACE,eAACtG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,EAC3B/rB,QAAQ,WACRN,UAAWN,EAAQy6B,WACnBx0B,MAAM,UACNe,aAAW,QACXnG,QAASq6B,EANX,UAQE,eAAC,KAAD,IARF,0EAYF,eAAC76B,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASoF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzD,SACE,gBAAC6nB,GAAA,EAAD,CACE3H,UAAW0G,GAAiC,KAAjBA,IAAwB/sB,EAAMitB,eACzDjsB,QAAQ,WACRN,UAAWN,EAAQisB,OACnBhmB,MAAM,UACNe,aAAW,SACXnG,QAAS8D,EANX,UAQE,eAAC,KAAD,IARF,4D,UClVNvF,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,IAExBiY,MAAO,CACLvW,QAAS,QAEXsY,IAAK,CACHpD,OAAQ,IACRN,MAAO,KAETsI,KAAM,CACJtG,SAAU,UA+YD2jB,GArYiC,SAAA/7B,GAC9C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEKrmB,KAFL,OAERsyB,EAFQ,OAGVn4B,IACFojB,EAAc+U,GACdjM,GAAW,IALC,2CAAH,sDASPkM,EAAgB,uCAAG,WAAOp4B,GAAP,eAAAlK,EAAA,6DACvBo2B,GAAW,GADY,SAEFhlB,GAAuBmxB,EAAY/gC,YAFjC,OAEjB2N,EAFiB,OAGnBjF,IACF+e,EAAc9Z,EAAOsoB,gBACrBrB,GAAW,IALU,2CAAH,sDAkBhBoM,EAAkB,WACtB,IAAIt4B,GAAY,EAGhB,OAFAo4B,EAAiBp4B,GAEV,WACLA,GAAY,IAIhBD,qBAAU,YAlBU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAiBR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMohC,EAAYphC,KAClBX,YAAa+hC,EAAY/hC,YACzBiD,MAAO8+B,EAAY9+B,MACnBC,qBAAsB6+B,EAAY7+B,qBAClClC,WAAY+gC,EAAY/gC,WACxBmC,WAAY4+B,EAAY5+B,aAG1B,EAAsC2H,IAAMhF,SAAS,CACnDnF,KAAM,GACNX,YAAa,GACbiD,MAAO,EACPC,qBAAsB,EACtBlC,WAAY,GACZmC,WAAY,KANd,mBAAO4+B,EAAP,KAAoBE,EAApB,KASA,EAAkCn3B,IAAMhF,SAAoD,IAA5F,mBAAOo8B,EAAP,KAAkBC,EAAlB,KACA,EAAoCr3B,IAAMhF,SAA2B,IAArE,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAAoC3d,IAAMhF,SAAqB,IAA/D,mBAAO+mB,EAAP,KAAmBC,EAAnB,KACA,EAAwBhiB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KACA,EAA8BrL,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAAwB9qB,IAAMhF,SAAS,GAAvC,mBAAO0wB,EAAP,KAAaC,EAAb,KACA,EAAsB3rB,IAAMhF,WAA5B,mBAAO6Z,EAAP,KAAYyiB,EAAZ,KACA,EAA4Bt3B,IAAMhF,SAAS,IAA3C,oBAAOsD,GAAP,MAAei5B,GAAf,MAKMC,GAA6B,SAACr7B,GAClC,GAAIA,GAASi7B,EAAW,CACtB,IAAMK,EAAcL,EAAUj7B,EAAME,OAAO/F,IACvCmhC,GACFA,EAAY9/B,MAAQjC,SAASyG,EAAME,OAAO1E,OAC1C8/B,EAAY5/B,YAAcsE,EAAME,OAAO/F,IAEvC8gC,EAAUj7B,EAAME,OAAO/F,IAAM,CAAEuB,YAAasE,EAAME,OAAO/F,GAAIqB,MAAOjC,SAASyG,EAAME,OAAO1E,QAG5F0/B,EAAa,gBAAKD,MAIhBM,GAA4B,SAACphC,EAAY6F,GAC7C,GAAIA,GAASi7B,EAAW,CACtB,IAAMK,EAAcL,EAAU9gC,GAC1BmhC,GACFA,EAAY3/B,iBAAmBqE,EAAME,OAAO1E,MAC5C8/B,EAAY5/B,YAAcvB,GAE1B8gC,EAAU9gC,GAAM,CAAEuB,YAAavB,EAAIwB,iBAAkBqE,EAAME,OAAO1E,OAGpE0/B,EAAa,gBAAKD,MAyDhBl3B,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJgsB,GAAM,uCAAG,sBAAAl3B,EAAA,sDACTuiC,EAAY/gC,WAAWqP,OAAS,GAClC8F,EAAW,4GACXzL,GAAQ,KAERs3B,IACAvL,EAAQ,IANG,2CAAH,qDAUNE,GAAM,uCAAG,sBAAAn3B,EAAA,sDACbi3B,EAAQ,GADK,2CAAH,qDAIN3vB,GAAO,uCAAG,8BAAAtH,EAAA,2DACVuiC,EAAYphC,KAAK0P,OAAS,GADhB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHq3B,EAAY/hC,YAAYqQ,OAAS,GAJ9B,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,wBAUZ,IAAW/J,KAFX2qB,QAAQC,IAAI2W,GACNvzB,EAAS,GACIuzB,EACjBvzB,EAAOoR,KAAKmiB,EAAUvhC,IAXZ,iBAcMqC,GAChB++B,EAAYphC,KACZohC,EAAY/hC,YACZ+hC,EAAY9+B,MACZ8+B,EAAY7+B,qBACZ6+B,EAAY/gC,WACZ+gC,EAAY5+B,WANiB,OAO7Bwc,QAP6B,IAO7BA,IAAO,KACPhR,GAtBU,gBAyBD9I,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IA9BE,4CAAH,qDAmCb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAAC,KAAD,CAAOU,QAASV,GAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACY,IAAT6pB,EACC,gBAAC,IAAM7pB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAYphC,KACnBqG,SAtIW,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzBw/B,EAAe1iC,IAoIHkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAY/hC,YACnBgH,SAlIkB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKS,YAAciH,EAAME,OAAO1E,MAChCw/B,EAAe1iC,IAgIHkY,MAAM,mDACNoP,WAAS,EACThgB,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,eACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,2BACNhV,MAAOs/B,EAAY9+B,MACnB+D,SAxIY,SAACC,GACzB,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAK0D,MAAQ4zB,GAGfoL,EAAe1iC,MAmIL,eAACwH,GAAA,EAAD,CACE3F,GAAG,0BACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,mFACNhV,MAAOs/B,EAAY7+B,qBACnB8D,SAvI2B,SAACC,GACxC,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAK2D,qBAAuB2zB,GAG9BoL,EAAe1iC,MAkIL,eAACwH,GAAA,EAAD,CACE3F,GAAG,cACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,6CACNhV,MAAOs/B,EAAY5+B,WACnB6D,SAtKiB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK4D,WAAa8D,EAAME,OAAO1E,MAC/Bw/B,EAAe1iC,MAqKL,eAACwH,GAAA,EAAD,CACE3F,GAAG,kBACH01B,QAAM,EACNrf,MAAM,yDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAY/gC,WACnBgG,SA9Ie,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAKyB,WAAaiG,EAAME,OAAO1E,MAC/Bw/B,EAAe1iC,IA4IHsH,QAAQ,WAPV,SASGgmB,EAAW3X,KAAI,SAAAutB,GAAG,OACjB,eAACptB,GAAA,EAAD,CAAuB5S,MAAOggC,EAAIrhC,GAAlC,SACGqhC,EAAI9hC,MADQ8hC,EAAIrhC,SAKvB,wBACEshC,OAAO,UACPn8B,UAAWN,EAAQ2X,MACnBxc,GAAG,wBACH2N,KAAK,OACL/H,SAtJU,SAACC,GACvB,IAAM07B,EAAO17B,EAAME,OAAOy7B,OAAS37B,EAAME,OAAOy7B,MAAM,GAClDD,IACFrX,QAAQC,IAAIoX,GACZP,EAAOO,GACPN,GAAUQ,IAAIC,gBAAgBH,QAmJtB,gBAACz3B,EAAA,EAAD,CAAM3E,UAAWN,EAAQ2P,OAAQ/O,QAAQ,WAAzC,UACE,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAACq8B,GAAA,EAAD,CACEx8B,UAAWN,EAAQ0Z,IACnBiF,MAAOjF,EAAMvW,GAxOR,uBAyOLmvB,MAAM,gIAGV,eAACjsB,EAAA,EAAD,UACE,eAAChG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,wBAAOs8B,QAAQ,wBAAwBz8B,UAAWN,EAAQ2P,OAA1D,SACE,eAAChP,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUM,UAAU,OAAtD,uIASV,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAASD,UAAU,SAASF,UAAWN,EAAQse,KAAlG,SACGlhB,EAAW6R,KAAI,SAAA+tB,GAAE,OAChB,gBAAC,IAAMt2B,SAAP,WACE,eAACN,EAAA,EAAD,UAAa42B,EAAGtiC,OACfsiC,EAAG5/B,WAAW6R,KAAI,SAAAwK,GAAC,QA1PlBte,EA0PkB,OAClB,eAAC,IAAMuL,SAAP,UACG+S,EAAEvd,MACD,eAAC4E,GAAA,EAAD,CACE3F,GAAIse,EAAEte,GACNmF,UAAWN,EAAQ2P,OACnBnT,MAAOy/B,IAAS,UAAIA,EAAUxiB,EAAEte,WAAhB,aAAI,EAAiBqB,OACrCuE,SAAUs7B,GACV7qB,MAAOiI,EAAE/e,KACToO,KAAK,SACLlI,QAAQ,aAGV,eAACE,GAAA,EAAD,CACE3F,GAAIse,EAAEte,GACNmF,UAAWN,EAAQ2P,OACnBnT,MAAOy/B,IAAS,UAAIA,EAAUxiB,EAAEte,WAAhB,aAAI,EAAiBwB,kBACrCoE,UA3QN5F,EA2QyBse,EAAEte,GA3QZohC,GAA0B33B,U,EAAWzJ,IA4Q9CqW,MAAOiI,EAAE/e,KACTkG,QAAQ,WACRiwB,QAAM,EAPR,SASGpX,EAAED,gBAAgBvK,KAAI,SAAAguB,GAAE,OACvB,eAAC7tB,GAAA,EAAD,CAAsB5S,MAAOygC,EAAG9hC,GAAhC,SACG8hC,EAAGzgC,OADSygC,EAAG9hC,UAtBLse,EAAEte,SAHN6hC,EAAG7hC,SAqC9B,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACY,IAAT8vB,EACC,eAAC5vB,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAAS4vB,GAA9F,4CAIA,gBAAC,IAAM/pB,SAAP,WACE,eAACrG,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACE,eAAe,aAAnD,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,WAAWC,QAAS6vB,GAA7F,8CAIF,eAACrwB,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACE,eAAe,WAAnD,SACE,eAACE,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2P,OACnB1J,MAAM,UACNrF,QAAQ,YACRC,QAASA,GALX,sECxYZzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,IAExBiY,MAAO,CACLvW,QAAS,QAEXsY,IAAK,CACHpD,OAAQ,IACRN,MAAO,KAETsI,KAAM,CACJtG,SAAU,UA8bDklB,GAnb6B,SAAAt9B,GAC1C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,qBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEQlmB,GAAW7J,EAAMzE,IAFzB,cAERiI,EAFQ,gBAGWsG,GAAc9J,EAAMzE,IAH/B,cAGRgiC,EAHQ,gBAIK7zB,KAJL,OAIRsyB,EAJQ,OAMVn4B,IACFu4B,EAAe,CACbthC,KAAM0I,EAAQ1I,KACdX,YAAaqJ,EAAQrJ,YACrBiD,MAAOoG,EAAQpG,MACfC,qBAAsBmG,EAAQnG,qBAC9BlC,WAAU,UAAEqI,EAAQqjB,gBAAV,aAAE,EAAkBtrB,GAC9B+B,WAAYkG,EAAQlG,aAGtBkgC,GAAkBD,GAClBtW,EAAc+U,GACdjM,GAAW,GACXyM,GAAU,aAAD,OAAch5B,EAAQC,UAnBnB,4CAAH,sDAuBPg6B,EAAkB,SAACte,GACvB,IADyD,EACnDue,EAAW,GACX/X,EAAS,GAF0C,eAIrCgY,IAJqC,IAIzD,2BAAoC,CAAC,IAAD,EAAzBve,EAAyB,QAC5BqL,EAAS,GADmB,eAEdrL,EAAM5hB,YAFQ,IAElC,2BAAsC,CAAC,IAA5Bsf,EAA2B,QACpC2N,EAAO3N,EAAMhgB,aAAyBggB,GAHN,8BAMlC4gB,EAASte,EAAM7jB,IAAMkvB,GAVkC,mDAalCtL,GAbkC,IAazD,2BAAoC,CAAC,IAA1Bye,EAAyB,QAC5BtjB,EAAMojB,EAASE,EAASriC,IAC9B,GAAI+e,EAAK,CAAC,IAAD,iBACasjB,EAASpgC,YADtB,IACP,2BAAyC,CAAC,IAA/Bsf,EAA8B,QACjCjD,EAAIS,EAAIwC,EAAMvhB,IAChBse,IACEiD,EAAMxgB,MACRqpB,EAAO7I,EAAMvhB,IAAM,CAAEuB,YAAaggB,EAAMvhB,GAAIqB,MAAOjC,SAASkf,EAAEjd,OAAQ9C,UAAWkG,EAAMzE,IAEvFoqB,EAAO7I,EAAMvhB,IAAM,CAAEuB,YAAaggB,EAAMvhB,GAAIwB,iBAAkB8c,EAAE9c,iBAAkBjD,UAAWkG,EAAMzE,MAPlG,iCAf8C,8BA6BzD+gC,EAAa3W,IAGTsW,EAAgB,uCAAG,WAAOp4B,GAAP,eAAAlK,EAAA,6DACvBo2B,GAAW,GADY,SAEFhlB,GAAuBmxB,EAAY/gC,YAFjC,OAEjB2N,EAFiB,OAGnBjF,IACF+e,EAAc9Z,EAAOsoB,gBACrBqM,EAAgB30B,EAAOsoB,gBACvBrB,GAAW,IANU,2CAAH,sDAmBhBoM,EAAkB,WACtB,IAAIt4B,GAAY,EAGhB,OAFAo4B,EAAiBp4B,GAEV,WACLA,GAAY,IAIhBD,qBAAU,YAlBU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAiBR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMohC,EAAYphC,KAClBX,YAAa+hC,EAAY/hC,YACzBiD,MAAO8+B,EAAY9+B,MACnBC,qBAAsB6+B,EAAY7+B,qBAClClC,WAAY+gC,EAAY/gC,WACxBmC,WAAY4+B,EAAY5+B,aAG1B,EAAsC2H,IAAMhF,SAAS,CACnDnF,KAAM,GACNX,YAAa,GACbiD,MAAO,EACPC,qBAAsB,EACtBlC,WAAY,GACZmC,WAAY,KANd,mBAAO4+B,EAAP,KAAoBE,EAApB,KASA,EAAkCn3B,IAAMhF,SAAoD,IAA5F,mBAAOo8B,EAAP,KAAkBC,EAAlB,KACA,EAAoCr3B,IAAMhF,SAA2B,IAArE,mBAAOzC,EAAP,KAAmBolB,EAAnB,KACA,EAAoC3d,IAAMhF,SAAqB,IAA/D,mBAAO+mB,EAAP,KAAmBC,EAAnB,KACA,EAAwBhiB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KACA,EAA8BrL,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAAwB9qB,IAAMhF,SAAS,GAAvC,mBAAO0wB,EAAP,KAAaC,EAAb,KACA,EAAsB3rB,IAAMhF,WAA5B,mBAAO6Z,EAAP,KAAYyiB,EAAZ,KACA,GAA4Bt3B,IAAMhF,SAAS,IAA3C,qBAAOsD,GAAP,MAAei5B,GAAf,MACA,GAA4Cv3B,IAAMhF,SAA2B,IAA7E,qBAAO09B,GAAP,MAAuBH,GAAvB,MAIMf,GAA6B,SAACr7B,GAClC,GAAIA,GAASi7B,EAAW,CACtB,IAAMK,EAAcL,EAAUj7B,EAAME,OAAO/F,IACvCmhC,GACFA,EAAY9/B,MAAQjC,SAASyG,EAAME,OAAO1E,OAC1C8/B,EAAY5/B,YAAcsE,EAAME,OAAO/F,IAEvC8gC,EAAUj7B,EAAME,OAAO/F,IAAM,CAC3BuB,YAAasE,EAAME,OAAO/F,GAC1BqB,MAAOjC,SAASyG,EAAME,OAAO1E,OAC7B9C,UAAWkG,EAAMzE,IAIrB+gC,EAAa,gBAAKD,MAIhBM,GAA4B,SAACphC,EAAY6F,GAC7C,GAAIA,GAASi7B,EAAW,CACtB,IAAMK,EAAcL,EAAU9gC,GAC1BmhC,GACFA,EAAY3/B,iBAAmBqE,EAAME,OAAO1E,MAC5C8/B,EAAY5/B,YAAcvB,GAE1B8gC,EAAU9gC,GAAM,CAAEuB,YAAavB,EAAIwB,iBAAkBqE,EAAME,OAAO1E,MAAO9C,UAAWkG,EAAMzE,IAG5F+gC,EAAa,gBAAKD,MAwDhBl3B,GAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJgsB,GAAM,uCAAG,sBAAAl3B,EAAA,sDACTuiC,EAAY/gC,WAAWqP,OAAS,GAClC8F,EAAW,4GACXzL,GAAQ,KAERs3B,IACAvL,EAAQ,IANG,2CAAH,qDAUNE,GAAM,uCAAG,sBAAAn3B,EAAA,sDACbi3B,EAAQ,GADK,2CAAH,qDAIN3vB,GAAO,uCAAG,8BAAAtH,EAAA,2DACVuiC,EAAYphC,KAAK0P,OAAS,GADhB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHq3B,EAAY/hC,YAAYqQ,OAAS,GAJ9B,iBAKZ8F,EAAW,4JACXzL,GAAQ,GANI,wBASZ,IAAW/J,KADLgO,EAAS,GACIuzB,EACjBvzB,EAAOoR,KAAKmiB,EAAUvhC,IAVZ,iBAaMqpB,GAChBnkB,EAAMzE,GACN2gC,EAAYphC,KACZohC,EAAY/hC,YACZ+hC,EAAY9+B,MACZ8+B,EAAY7+B,qBACZ6+B,EAAY/gC,WACZ+gC,EAAY5+B,WAPiB,OAQ7Bwc,QAR6B,IAQ7BA,IAAO,KACPhR,GAtBU,gBAyBD9I,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IA9BE,4CAAH,qDAmCb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,GAJX,SAME,eAAC,KAAD,CAAOU,QAASV,GAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACY,IAAT6pB,EACC,gBAAC,IAAM7pB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAYphC,KACnBqG,SArIW,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzBw/B,EAAe1iC,IAmIHkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,qBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAY/hC,YACnBgH,SAjIkB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAKS,YAAciH,EAAME,OAAO1E,MAChCw/B,EAAe1iC,IA+HHkY,MAAM,mDACNoP,WAAS,EACThgB,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,eACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,2BACNhV,MAAOs/B,EAAY9+B,MACnB+D,SAvIY,SAACC,GACzB,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAK0D,MAAQ4zB,GAGfoL,EAAe1iC,MAkIL,eAACwH,GAAA,EAAD,CACE3F,GAAG,0BACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,mFACNhV,MAAOs/B,EAAY7+B,qBACnB8D,SAtI2B,SAACC,GACxC,IAAM1H,EAAOw2B,IACPc,EAAW5vB,EAAME,OAAO1E,MAC1Bo0B,EAAW,IACbt3B,EAAK2D,qBAAuB2zB,GAG9BoL,EAAe1iC,MAiIL,eAACwH,GAAA,EAAD,CACE3F,GAAG,cACHyF,QAAQ,WACRN,UAAWN,EAAQ2P,OACnB7G,KAAK,SACL0I,MAAM,6CACNhV,MAAOs/B,EAAY5+B,WACnB6D,SArKiB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK4D,WAAa8D,EAAME,OAAO1E,MAC/Bw/B,EAAe1iC,MAoKL,eAACwH,GAAA,EAAD,CACE3F,GAAG,kBACH01B,QAAM,EACNrf,MAAM,yDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOs/B,EAAY/gC,WACnBgG,SA7Ie,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAKyB,WAAaiG,EAAME,OAAO1E,MAC/Bw/B,EAAe1iC,IA2IHsH,QAAQ,WAPV,SASGgmB,EAAW3X,KAAI,SAAAutB,GAAG,OACjB,eAACptB,GAAA,EAAD,CAAuB5S,MAAOggC,EAAIrhC,GAAlC,SACGqhC,EAAI9hC,MADQ8hC,EAAIrhC,SAKvB,wBACEshC,OAAO,UACPn8B,UAAWN,EAAQ2X,MACnBxc,GAAG,wBACH2N,KAAK,OACL/H,SArJU,SAACC,GACvB,IAAM07B,EAAO17B,EAAME,OAAOy7B,OAAS37B,EAAME,OAAOy7B,MAAM,GAClDD,IACFP,EAAOO,GACPN,GAAUQ,IAAIC,gBAAgBH,QAmJtB,gBAACz3B,EAAA,EAAD,CAAM3E,UAAWN,EAAQ2P,OAAQ/O,QAAQ,WAAzC,UACE,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,eAACq8B,GAAA,EAAD,CAAWx8B,UAAWN,EAAQ0Z,IAAKiF,MAAOxb,GAAQmvB,MAAM,gIAE1D,eAACjsB,EAAA,EAAD,UACE,eAAChG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAA/B,SACE,wBAAOs8B,QAAQ,wBAAwBz8B,UAAWN,EAAQ2P,OAA1D,SACE,eAAChP,EAAA,EAAD,CAAQC,QAAQ,YAAYqF,MAAM,UAAUM,UAAU,OAAtD,uIASV,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGxF,WAAS,EAACE,eAAe,SAASD,UAAU,SAASF,UAAWN,EAAQse,KAAlG,SACGlhB,EAAW6R,KAAI,SAAA+tB,GAAE,OAChB,gBAAC,IAAMt2B,SAAP,WACE,eAACN,EAAA,EAAD,UAAa42B,EAAGtiC,OACfsiC,EAAG5/B,WAAW6R,KAAI,SAAAwK,GAAC,QAzPlBte,EAyPkB,OAClB,eAAC,IAAMuL,SAAP,UACG+S,EAAEvd,MACD,eAAC4E,GAAA,EAAD,CACE3F,GAAIse,EAAEte,GACNmF,UAAWN,EAAQ2P,OACnBnT,MAAOy/B,IAAS,UAAIA,EAAUxiB,EAAEte,WAAhB,aAAI,EAAiBqB,OACrCuE,SAAUs7B,GACV7qB,MAAOiI,EAAE/e,KACToO,KAAK,SACLlI,QAAQ,aAGV,eAACE,GAAA,EAAD,CACE3F,GAAIse,EAAEte,GACNmF,UAAWN,EAAQ2P,OACnBnT,MAAOy/B,IAAS,UAAIA,EAAUxiB,EAAEte,WAAhB,aAAI,EAAiBwB,kBACrCoE,UA1QN5F,EA0QyBse,EAAEte,GA1QZohC,GAA0B33B,U,EAAWzJ,IA2Q9CqW,MAAOiI,EAAE/e,KACTkG,QAAQ,WACRiwB,QAAM,EAPR,SASGpX,EAAED,gBAAgBvK,KAAI,SAAAguB,GAAE,OACvB,eAAC7tB,GAAA,EAAD,CAAsB5S,MAAOygC,EAAG9hC,GAAhC,SACG8hC,EAAGzgC,OADSygC,EAAG9hC,UAtBLse,EAAEte,SAHN6hC,EAAG7hC,SAqC9B,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACY,IAAT8vB,EACC,eAAC5vB,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAAS4vB,GAA9F,4CAIA,gBAAC,IAAM/pB,SAAP,WACE,eAACrG,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACE,eAAe,aAAnD,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,WAAWC,QAAS6vB,GAA7F,8CAIF,eAACrwB,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACE,eAAe,WAAnD,SACE,eAACE,EAAA,EAAD,CACEmI,KAAK,SACLxI,UAAWN,EAAQ2P,OACnB1J,MAAM,UACNrF,QAAQ,YACRC,QAASA,GALX,4EC3cL48B,GAAmB,WAC9B,IAAM94B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGwF,GAAc5D,GADjB,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEqmB,UAdY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAalBhF,aAVe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAQlBtE,YAAaA,EACbd,eAAgBloB,EAChBG,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,oGACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAevpB,QAASitB,EAAetD,UAAWyD,IACxDptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,0GACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAa7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IAClEptB,QAASmtB,QC7CXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA2Ebg+B,GAjE+B,SAAA99B,GAC5C,IAAMI,EAAUZ,KAEhB,EAAwByF,IAAMhF,SAAS,IAAvC,mBAAOnF,EAAP,KAAa49B,EAAb,KAEA,EAAwBzzB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAMMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVmB,EAAK0P,OAAS,GADJ,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,sCAKM9G,GAAajD,GALnB,eAMDkF,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAXE,2CAAH,qDAgBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO9B,EACPqG,SA5CmB,SAACC,GACxBs3B,EAAQt3B,EAAME,OAAO1E,QA4CjBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,8DCtEFzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SA+Ibi+B,GApI2B,SAAA/9B,GAAU,IAAD,EAC3CI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI/lB,KAFJ,OAER+D,EAFQ,OAGVlK,IACF4Q,EAAW1G,GACXgiB,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,uBAAO,CACvBp1B,KAAMi+B,EAAcj+B,KACpBmD,SAAQ,UAAE+B,EAAM/B,gBAAR,QAAoB86B,EAAc96B,WAG5C,EAA8BgH,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA0C9qB,IAAMhF,SAAS,CACvDnF,KAAM,GACNmD,SAAQ,UAAE+B,EAAM/B,gBAAR,QAAoB,IAF9B,mBAAO86B,EAAP,KAAsBC,EAAtB,KAKA,EAA8B/zB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAAwBxP,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAcMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVo/B,EAAcj+B,KAAK0P,OAAS,GADlB,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHk0B,EAAc96B,SAAW,GAJtB,iBAKZqS,EAAW,mFACXzL,GAAQ,GANI,yCAQM7G,GAAW+6B,EAAcj+B,KAAMi+B,EAAc96B,UARnD,gBASD+B,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAcj+B,KACrBqG,SA7De,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzBo8B,EAAiBt/B,IA2DTkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,mDACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOm8B,EAAc96B,SACrBkD,SAjEiB,SAACC,GAC1B,IAAM1H,EAAOw2B,IACbx2B,EAAKuE,SAAWtD,SAASyG,EAAME,OAAO1E,OACtCo8B,EAAiBt/B,IA+DTsH,QAAQ,WACRqlB,cAA6BjY,IAAnBpO,EAAM/B,SARlB,SAUGuW,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iECxINzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAkJbk+B,GAvIuB,SAAAh+B,GACpC,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,iBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI/lB,KAFJ,cAER+D,EAFQ,gBAGKlC,GAAQ7L,EAAMzE,IAHnB,OAGR7B,EAHQ,OAIVmK,IACF4Q,EAAW1G,GACXwG,EAAQ,CACNzZ,KAAMpB,EAAKoB,KACXmD,SAAUvE,EAAKuE,WAEjB8xB,GAAW,IAVC,2CAAH,sDAuBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMwZ,EAAKxZ,KACXmD,SAAUqW,EAAKrW,WAGjB,EAA8BgH,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAAwB9qB,IAAMhF,SAAS,CACrCnF,KAAM,GACNmD,SAAU,IAFZ,mBAAOqW,EAAP,KAAaC,EAAb,KAIA,EAA8BtP,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAAwBxP,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAcMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACV2a,EAAKxZ,KAAK0P,OAAS,GADT,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,4BAIHyP,EAAKrW,SAAW,GAJb,iBAKZqS,EAAW,+FACXzL,GAAQ,GANI,yCAQMwf,GAAWrkB,EAAMzE,GAAI+Y,EAAKxZ,KAAMwZ,EAAKrW,UAR3C,gBASD+B,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAdE,4CAAH,qDAmBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,gBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0X,EAAKxZ,KACZqG,SA7DgB,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2X,EAAQ7a,IA2DAkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,YACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAO0X,EAAKrW,SACZkD,SAjEoB,SAACC,GAC7B,IAAM1H,EAAOw2B,IACbx2B,EAAKuE,SAAWtD,SAASyG,EAAME,OAAO1E,OACtC2X,EAAQ7a,IA+DAsH,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,uEC1ICg9B,GAAgC,SAAAj+B,GAC3C,IASM+E,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACG0F,GAAW1E,SAASY,IADvB,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaMmQ,EAAYh0B,GAAgBlF,K,UAAWhF,EAAMzE,IAEnD,OACE,gBAAC,IAAMuL,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,uCACL0xB,QAAS0R,EACTzQ,QA7CwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,MAyCLuW,SAAU,EACVM,eAAgBloB,EAChBooB,UArBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAoBlBhF,aAjBe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAelBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,EACPC,SAAO,IAET,eAAC,GAAD,CACEzyB,KAAM,mIACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAYnwB,SAAU+B,EAAMzE,GAAIsJ,QAASitB,EAAetD,UAAWyD,IACzEptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,yIACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAU7yB,GAAIZ,SAASw3B,GAAWttB,QAASmtB,EAAaxD,UAAWyD,IACzEptB,QAASmtB,QClEXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAgGbq+B,GArF2B,SAAAn+B,GACxC,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,sEACIgS,GAAUhR,SAASqF,EAAMzE,KAD7B,OACRwS,EADQ,OAEVlK,GACF60B,EAAQ3qB,EAAIjT,MAHA,2CAAH,sDAgBb8I,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,MAAwBznB,IAAMhF,SAAS,IAAvC,mBAAOnF,EAAP,KAAa49B,EAAb,KACA,EAAwBzzB,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAMMnL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,2DACVmB,EAAK0P,OAAS,GADJ,gBAEZ8F,EAAW,4JACXzL,GAAQ,GAHI,sCAKMuf,GAAapkB,EAAMzE,GAAIT,GAL7B,eAMDkF,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAXE,2CAAH,qDAgBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGL,eAAC1O,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO9B,EACPqG,SA5CmB,SAACC,GACxBs3B,EAAQt3B,EAAME,OAAO1E,QA4CjBgV,MAAM,mDACN5Q,QAAQ,aAEV,eAAC,GAAD,CAAUzF,GAAIZ,SAASqF,EAAMzE,MAC7B,eAACkF,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,oEChGKm9B,GAAa,WACxB,IASMr5B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACGyF,GAAazE,SAASY,IADzB,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,6CACL0xB,QAASxiB,GACTyjB,QA3CwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,MAuCLuW,SAAU,GACVM,eAAgBloB,EAChBooB,UAnBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAkBlBhF,aAfe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAalBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,8FACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAcvpB,QAASitB,EAAetD,UAAWyD,IACvDptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,oGACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAY7yB,GAAI42B,EAAUttB,QAASmtB,EAAaxD,UAAWyD,IACjEptB,QAASmtB,QC1DXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAmQbu+B,GAzP+B,SAAAr+B,GAC5C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEQ/lB,KAFR,OAERwK,EAFQ,OAGV3Q,IACF4Q,EAAWD,GACXub,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMwjC,EAAWxjC,KACjBR,OAAQgkC,EAAWhkC,OACnB6D,WAAYmgC,EAAWngC,WACvBC,SAAUkgC,EAAWlgC,SACrBC,WAAYigC,EAAWjgC,WACvBC,YAAaggC,EAAWhgC,YACxBzC,YAAayiC,EAAWziC,cAG1B,EAAoCoJ,IAAMhF,SAAS,CACjDnF,KAAM,GACNR,OAAQ,EACR6D,WAAY,GACZC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbzC,YAAa,KAPf,mBAAOyiC,EAAP,KAAmBC,EAAnB,KAUA,EAA8Bt5B,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAS,GAA3C,mBAAOoV,EAAP,KAAempB,EAAf,KACA,EAA4Bv5B,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAAwBt0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KA+CMopB,EAAgB,uCAAG,WAAOt4B,GAAP,eAAAzH,EAAA,uDACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,MAC3B2hC,EAAc7kC,GAHS,2CAAH,sDAMhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEMuE,GAChBogC,EAAWxjC,KACXwjC,EAAWhkC,OACXgkC,EAAWngC,WACXmgC,EAAWlgC,SACXkgC,EAAWjgC,WACXigC,EAAWhgC,YACXggC,EAAWziC,aATD,eAYDmE,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAjBE,gDAoBZyL,EAAW,wJAAD,cACVzL,GAAQ,GArBI,yDAAH,qDAyBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWxjC,KAClBqG,SA3Ga,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2hC,EAAc7kC,IAyGJkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWziC,YAClBsF,SA3Fc,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IAyFJkY,MAAM,kFACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,mBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWjgC,WAClB8C,SAzGmB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK2E,WAAa+C,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAuGJkY,MAAM,sEACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOyY,EACPlU,SAjGe,SAACC,GAC1B,IAAMnD,EAAWmD,EAAME,OAAO1E,MAC9B4hC,EAAUvgC,GACV,IAAM6W,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO0C,KACnC6W,GACFykB,EAAUzkB,EAAIG,SA6FNjU,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKT,IAAX8Z,GACC,gBAAC,IAAMvO,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhkC,OAClB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,SACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWngC,WAClBgD,SA7Je,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKyE,WAAaiD,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IA2JAkY,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWlgC,SAClB+C,SA/Ja,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK0E,SAAWgD,EAAME,OAAO1E,MAC7B2hC,EAAc7kC,IA6JAkY,MAAM,uCACN5Q,QAAQ,gBAId,eAACE,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhgC,YAClB6C,SAvJoB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAK4E,YAAc8C,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IAqJJkY,MAAM,+DACN5Q,QAAQ,gBAGZ,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iEC5PNzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAsRb2+B,GA3Q2B,SAAAz+B,GACxC,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,mBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI/jB,GAAUhM,EAAMzE,IAFpB,cAERwS,EAFQ,gBAGQ/D,KAHR,OAGRwK,EAHQ,OAIV3Q,IACF4Q,EAAWD,GACXgqB,EAAUzwB,EAAIuG,KAAKrW,UACnBsgC,EAAc,CACZzjC,KAAMiT,EAAIjT,KACVR,OAAQyT,EAAIuG,KAAK/Y,GACjB4C,WAAY4P,EAAI5P,WAChBC,SAAU2P,EAAI3P,SACdC,WAAY0P,EAAI1P,WAChBC,YAAayP,EAAIqQ,SACjBviB,YAAakS,EAAIlS,eAGbiZ,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAOwS,EAAIuG,KAAKrW,cAE9Cs7B,EAAUzkB,EAAIG,QAGhB8a,GAAW,IAtBC,2CAAH,sDAmCbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMwjC,EAAWxjC,KACjBR,OAAQgkC,EAAWhkC,OACnB6D,WAAYmgC,EAAWngC,WACvBC,SAAUkgC,EAAWlgC,SACrBC,WAAYigC,EAAWjgC,WACvBC,YAAaggC,EAAWhgC,YACxBzC,YAAayiC,EAAWziC,cAG1B,EAAoCoJ,IAAMhF,SAAS,CACjDnF,KAAM,GACNR,OAAQ,EACR6D,WAAY,GACZC,SAAU,GACVC,WAAY,GACZC,YAAa,GACbzC,YAAa,KAPf,mBAAOyiC,EAAP,KAAmBC,EAAnB,KAUA,EAA8Bt5B,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAS,GAA3C,mBAAOoV,EAAP,KAAempB,EAAf,KACA,EAA4Bv5B,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAAwBt0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KA+CMopB,EAAgB,uCAAG,WAAOt4B,GAAP,eAAAzH,EAAA,uDACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,MAC3B2hC,EAAc7kC,GAHS,2CAAH,sDAMhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEM2qB,GAChBtkB,EAAMzE,GACN+iC,EAAWxjC,KACXwjC,EAAWhkC,OACXgkC,EAAWngC,WACXmgC,EAAWlgC,SACXkgC,EAAWjgC,WACXigC,EAAWhgC,YACXggC,EAAWziC,aAVD,eAaDmE,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAlBE,gDAqBZyL,EAAW,wJAAD,cACVzL,GAAQ,GAtBI,yDAAH,qDA0Bb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWxjC,KAClBqG,SA5Ga,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2hC,EAAc7kC,IA0GJkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWziC,YAClBsF,SA5Fc,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IA0FJkY,MAAM,kFACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,mBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWjgC,WAClB8C,SA1GmB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK2E,WAAa+C,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAwGJkY,MAAM,sEACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOyY,EACPlU,SAlGe,SAACC,GAC1B,IAAMnD,EAAWmD,EAAME,OAAO1E,MAC9B4hC,EAAUvgC,GACV,IAAM6W,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO0C,KACnC6W,GACFykB,EAAUzkB,EAAIG,SA8FNjU,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKT,IAAX8Z,GACC,gBAAC,IAAMvO,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhkC,OAClB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,SACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWngC,WAClBgD,SA9Je,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKyE,WAAaiD,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IA4JAkY,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWlgC,SAClB+C,SAhKa,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK0E,SAAWgD,EAAME,OAAO1E,MAC7B2hC,EAAc7kC,IA8JAkY,MAAM,uCACN5Q,QAAQ,gBAId,eAACE,GAAA,EAAD,CACE3F,GAAG,eACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhgC,YAClB6C,SAxJoB,SAACC,GAC/B,IAAM1H,EAAOw2B,IACbx2B,EAAK4E,YAAc8C,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IAsJJkY,MAAM,+DACN5Q,QAAQ,gBAGZ,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iECpRCy9B,GAAa,WACxB,IA0BM35B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACG2F,GAAa3E,SAASY,IADzB,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,mDACL0xB,QAAS1gB,GACT2hB,QA5DwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,SACPwJ,WAAY,iCACZhc,MAAO,IACPylB,YAAa,SAAC/yB,GAAD,gBACRA,EAAO6hB,IAAItsB,WADH,aACkByK,EAAO6hB,IAAItV,OAAOva,KADpC,aAC6CgO,EAAO6hB,IAAIrW,KAAKxZ,KAD7D,aACsEgO,EAAO6hB,IAAIxsB,WADjF,aACgG2K,EAAO6hB,IAAIvsB,YAE1H,CACEwqB,MAAO,WACPwJ,WAAY,6CACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,6CACZhc,MAAO,MAuCLuW,SAAU,GACVM,eAAgBloB,EAChBooB,UAnBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAkBlBhF,aAfe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAalBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,6KACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAcvpB,QAASitB,EAAetD,UAAWyD,IACvDptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,mLACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAY7yB,GAAIZ,SAASw3B,GAAWttB,QAASmtB,EAAaxD,UAAWyD,IAC3EptB,QAASmtB,QC3EXxyB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAkPb6+B,GAxOqC,SAAA3+B,GAClD,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEQ/lB,KAFR,OAERwK,EAFQ,OAGV3Q,IACF4Q,EAAWD,GACXub,GAAW,IALC,2CAAH,sDAkBbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMwjC,EAAWxjC,KACjBR,OAAQgkC,EAAWhkC,OACnB6D,WAAYmgC,EAAWngC,WACvBC,SAAUkgC,EAAWlgC,SACrBC,WAAYigC,EAAWjgC,WACvBxC,YAAayiC,EAAWziC,cAG1B,EAAoCoJ,IAAMhF,SAAS,CACjDnF,KAAM,GACNR,OAAQ,EACR6D,WAAY,GACZC,SAAU,GACVC,WAAY,GACZxC,YAAa,KANf,mBAAOyiC,EAAP,KAAmBC,EAAnB,KASA,EAA8Bt5B,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAS,GAA3C,mBAAOoV,EAAP,KAAempB,EAAf,KACA,EAA4Bv5B,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAAwBt0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAyCMopB,EAAgB,uCAAG,WAAOt4B,GAAP,eAAAzH,EAAA,uDACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,MAC3B2hC,EAAc7kC,GAHS,2CAAH,sDAMhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEM4E,GAChB+/B,EAAWxjC,KACXwjC,EAAWhkC,OACXgkC,EAAWngC,WACXmgC,EAAWlgC,SACXkgC,EAAWjgC,WACXigC,EAAWziC,aARD,eAWDmE,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAhBE,gDAmBZyL,EAAW,wJAAD,cACVzL,GAAQ,GApBI,yDAAH,qDAwBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWxjC,KAClBqG,SApGa,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2hC,EAAc7kC,IAkGJkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWziC,YAClBsF,SApFc,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IAkFJkY,MAAM,kFACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,mBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWjgC,WAClB8C,SAlGmB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK2E,WAAa+C,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAgGJkY,MAAM,sEACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOyY,EACPlU,SAhGe,SAACC,GAC1B,IAAMnD,EAAWmD,EAAME,OAAO1E,MAC9B4hC,EAAUvgC,GACV,IAAM6W,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO0C,KACnC6W,GACFykB,EAAUzkB,EAAIG,SA4FNjU,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKT,IAAX8Z,GACC,gBAAC,IAAMvO,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhkC,OAClB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,SACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWngC,WAClBgD,SAtJe,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKyE,WAAaiD,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAoJAkY,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWlgC,SAClB+C,SAxJa,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK0E,SAAWgD,EAAME,OAAO1E,MAC7B2hC,EAAc7kC,IAsJAkY,MAAM,uCACN5Q,QAAQ,mBAKhB,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iEC3ONzB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoQ,OAAQ,CACNxN,OAAQ7C,EAAMI,QAAQ,SAoQb8+B,GAzPiC,SAAA5+B,GAC9C,IAAMI,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,mBAAAlK,EAAA,6DACdo2B,GAAW,GADG,SAEI9jB,GAAajM,EAAMzE,IAFvB,cAERwS,EAFQ,gBAGQ/D,KAHR,OAGRwK,EAHQ,OAIV3Q,IACF4Q,EAAWD,GACXgqB,EAAUzwB,EAAIuG,KAAKrW,UACnBsgC,EAAc,CACZzjC,KAAMiT,EAAIjT,KACVR,OAAQyT,EAAIuG,KAAK/Y,GACjB4C,WAAY4P,EAAI5P,WAChBC,SAAU2P,EAAI3P,SACdC,WAAY0P,EAAI1P,WAChBxC,YAAakS,EAAIlS,eAGbiZ,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAOwS,EAAIuG,KAAKrW,cAE9Cs7B,EAAUzkB,EAAIG,QAGhB8a,GAAW,IArBC,2CAAH,sDAkCbnsB,qBAAU,YATU,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,IAAMwD,EAAY,iBAAO,CACvBp1B,KAAMwjC,EAAWxjC,KACjBR,OAAQgkC,EAAWhkC,OACnB6D,WAAYmgC,EAAWngC,WACvBC,SAAUkgC,EAAWlgC,SACrBC,WAAYigC,EAAWjgC,WACvBxC,YAAayiC,EAAWziC,cAG1B,EAAoCoJ,IAAMhF,SAAS,CACjDnF,KAAM,GACNR,OAAQ,EACR6D,WAAY,GACZC,SAAU,GACVC,WAAY,GACZxC,YAAa,KANf,mBAAOyiC,EAAP,KAAmBC,EAAnB,KASA,EAA8Bt5B,IAAMhF,UAAS,GAA7C,mBAAOywB,EAAP,KAAgBX,EAAhB,KACA,EAA8B9qB,IAAMhF,SAAmB,IAAvD,mBAAOuU,EAAP,KAAgBC,EAAhB,KACA,EAA4BxP,IAAMhF,SAAS,GAA3C,mBAAOoV,EAAP,KAAempB,EAAf,KACA,EAA4Bv5B,IAAMhF,SAAiB,IAAnD,mBAAOgV,EAAP,KAAeskB,EAAf,KACA,EAAwBt0B,IAAMhF,UAAkB,GAAhD,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA8BI,IAAMhF,SAAiB,IAArD,mBAAO2P,EAAP,KAAgBU,EAAhB,KAyCMopB,EAAgB,uCAAG,WAAOt4B,GAAP,eAAAzH,EAAA,uDACjBD,EAAOw2B,KACR51B,OAAS8G,EAAME,OAAO1E,MAC3B2hC,EAAc7kC,GAHS,2CAAH,sDAMhByL,EAAc,SAAC/D,EAA8BgE,GAClC,cAAXA,GAIJP,GAAQ,IAGJ5D,EAAO,uCAAG,sBAAAtH,EAAA,+EAEM4qB,GAChBvkB,EAAMzE,GACN+iC,EAAWxjC,KACXwjC,EAAWhkC,OACXgkC,EAAWngC,WACXmgC,EAAWlgC,SACXkgC,EAAWjgC,WACXigC,EAAWziC,aATD,eAYDmE,EAAMwuB,WACfxuB,EAAMwuB,UAAUC,UAChBzuB,EAAM6E,SAAQ,KAEdyL,EAAW,uJACXzL,GAAQ,IAjBE,gDAoBZyL,EAAW,wJAAD,cACVzL,GAAQ,GArBI,yDAAH,qDAyBb,OACE,gBAACpE,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,SAAlD,UACE,eAAC2E,EAAA,EAAD,CACEC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CT,KAAMA,EACNU,iBAAkB,IAClBC,QAASV,EAJX,SAME,eAAC,KAAD,CAAOU,QAASV,EAAaY,SAAS,UAAtC,SACG6J,MAGJ8gB,EACC,eAACjwB,EAAA,EAAD,CAAME,WAAS,EAACoG,aAAa,UAAUlG,eAAe,SAAtD,SACE,eAACkwB,GAAA,EAAD,MAGF,gBAAC,IAAMjqB,SAAP,WACE,gBAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAASC,eAAe,eAAlD,UACE,eAACK,GAAA,EAAD,CACE3F,GAAG,aACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWxjC,KAClBqG,SArGa,SAACC,GACxB,IAAM1H,EAAOw2B,IACbx2B,EAAKoB,KAAOsG,EAAME,OAAO1E,MACzB2hC,EAAc7kC,IAmGJkY,MAAM,mDACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,cACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWziC,YAClBsF,SArFc,SAACC,GACzB,IAAM1H,EAAOw2B,IACbx2B,EAAKmC,YAAcuF,EAAME,OAAO1E,MAChC2hC,EAAc7kC,IAmFJkY,MAAM,kFACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,mBACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWjgC,WAClB8C,SAnGmB,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAK2E,WAAa+C,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAiGJkY,MAAM,sEACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,SACH01B,QAAM,EACNrf,MAAM,uCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAOyY,EACPlU,SAjGe,SAACC,GAC1B,IAAMnD,EAAWmD,EAAME,OAAO1E,MAC9B4hC,EAAUvgC,GACV,IAAM6W,EAAMN,EAAQO,MAAK,SAAAC,GAAC,OAAIA,EAAEzZ,KAAO0C,KACnC6W,GACFykB,EAAUzkB,EAAIG,SA6FNjU,QAAQ,WAPV,SASGwT,EAAQnF,KAAI,SAAAwK,GAAC,OACZ,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKT,IAAX8Z,GACC,gBAAC,IAAMvO,SAAP,WACE,eAAC5F,GAAA,EAAD,CACE3F,GAAG,OACH01B,QAAM,EACNrf,MAAM,iCACNlR,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWhkC,OAClB6G,SAAUu4B,EACV14B,QAAQ,WAPV,SASGiU,EAAO5F,KAAI,SAAAwK,GAAC,OACX,eAACrK,GAAA,EAAD,CAAqB5S,MAAOid,EAAEte,GAA9B,SACGse,EAAE/e,MADU+e,EAAEte,SAKrB,eAAC2F,GAAA,EAAD,CACE3F,GAAG,SACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWngC,WAClBgD,SAvJe,SAACC,GAC9B,IAAM1H,EAAOw2B,IACbx2B,EAAKyE,WAAaiD,EAAME,OAAO1E,MAC/B2hC,EAAc7kC,IAqJAkY,MAAM,iCACN5Q,QAAQ,aAEV,eAACE,GAAA,EAAD,CACE3F,GAAG,WACHmF,UAAWN,EAAQ2P,OACnBnT,MAAO0hC,EAAWlgC,SAClB+C,SAzJa,SAACC,GAC5B,IAAM1H,EAAOw2B,IACbx2B,EAAK0E,SAAWgD,EAAME,OAAO1E,MAC7B2hC,EAAc7kC,IAuJAkY,MAAM,uCACN5Q,QAAQ,mBAKhB,eAACP,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,WAA/B,SACE,eAACE,EAAA,EAAD,CAAQmI,KAAK,SAASxI,UAAWN,EAAQ2P,OAAQ1J,MAAM,UAAUrF,QAAQ,YAAYC,QAASA,EAA9F,iEClQC49B,GAAgB,WAC3B,IAqBM95B,EAAQ,uCAAG,WAAOxJ,GAAP,SAAA5B,EAAA,sEACG4F,GAAgB5E,SAASY,IAD5B,UAEH,IAFG,8BAGbq2B,EAAS,+TACT/sB,GAAQ,GAJK,mBAKN,GALM,iCAQR,GARQ,2CAAH,sDAWd,EAAwBI,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,KAAcsE,EAAd,KACA,EAAoC3sB,IAAMhF,UAAS,GAAnD,mBAAO4xB,EAAP,KAAmBC,EAAnB,KACA,EAAgC7sB,IAAMhF,UAAS,GAA/C,mBAAO8xB,EAAP,KAAiBC,EAAjB,KACA,EAAsC/sB,IAAMhF,SAAS,CAAEwuB,QAAS,kBAAMhJ,QAAQC,IAAI,OAAlF,mBAAOuM,EAAP,KAAwBC,EAAxB,KACA,EAAgCjtB,IAAMhF,SAAS,IAA/C,mBAAOkyB,EAAP,KAAiBpE,EAAjB,KAaA,OACE,gBAAC,IAAMjnB,SAAP,WACE,eAAC,GAAD,CACEhM,KAAK,uCACL0xB,QAASzgB,GACT0hB,QAvDwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,OACPwJ,WAAY,mDACZhc,MAAO,KAET,CACEwS,MAAO,SACPwJ,WAAY,iCACZhc,MAAO,IACPylB,YAAa,SAAC/yB,GAAD,gBACRA,EAAO6hB,IAAItsB,WADH,aACkByK,EAAO6hB,IAAItV,OAAOva,KADpC,aAC6CgO,EAAO6hB,IAAIrW,KAAKxZ,KAD7D,aACsEgO,EAAO6hB,IAAIxsB,WADjF,aACgG2K,EAAO6hB,IAAIvsB,YAE1H,CACEwqB,MAAO,cACPwJ,WAAY,6CACZhc,MAAO,MAuCLuW,SAAU,GACVM,eAAgBloB,EAChBooB,UAnBY,SAACkF,GACjBP,GAAc,GACdI,EAAW,CAAEzD,QAAS4D,KAkBlBhF,aAfe,SAACiF,EAAoBD,GACxCtE,EAAYuE,GACZN,GAAY,GACZE,EAAW,CAAEzD,QAAS4D,KAalBntB,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,IAET,eAAC,GAAD,CACExyB,KAAM,+IACNoK,KAAM2sB,EACNzD,KAAM,eAAC,GAAD,CAAiBvpB,QAASitB,EAAetD,UAAWyD,IAC1DptB,QAASitB,IAEX,eAAC,GAAD,CACEh3B,KAAM,qJACNoK,KAAM6sB,EACN3D,KAAM,eAAC,GAAD,CAAe7yB,GAAIZ,SAASw3B,GAAWttB,QAASmtB,EAAaxD,UAAWyD,IAC9EptB,QAASmtB,QC9EJ8M,GAAc,WACzB,IAwCM/E,EAAK,uCAAG,WAAOx+B,GAAP,SAAA5B,EAAA,sEACM2B,GAAQC,GADd,UAEA,IAFA,iDAGH,GAHG,iCAML,GANK,2CAAH,sDASL0+B,EAAO,uCAAG,WAAO1+B,GAAP,SAAA5B,EAAA,sEACI6B,GAAUD,GADd,UAEF,IAFE,iDAGL,GAHK,iCAMP,GANO,2CAAH,sDASb,EAAwB0J,IAAMhF,UAAS,GAAvC,mBAAOiF,EAAP,KAAaL,EAAb,KACA,EAA0BI,IAAMhF,SAAS,IAAzC,mBAAOqtB,EAAP,UAEA,OACE,eAAC,IAAMxmB,SAAP,UACE,eAAC,GAAD,CACEhM,KAAK,6CACL0xB,QAASlgB,GACTmhB,QAlEwB,CAC5B,CAAE7E,MAAO,KAAMwJ,WAAY,KAAMhc,MAAO,KACxC,CACEwS,MAAO,WACPwJ,WAAY,iCACZhc,MAAO,KAET,CACEwS,MAAO,YACPwJ,WAAY,qBACZhc,MAAO,KAET,CACEwS,MAAO,aACPwJ,WAAY,6CACZhc,MAAO,KAET,CACEwS,MAAO,QACPwJ,WAAY,QACZhc,MAAO,KAET,CACEwS,MAAO,aACPwJ,WAAY,QACZhc,MAAO,KAET,CACEwS,MAAO,cACPwJ,WAAY,6CACZhc,MAAO,KAET,CACEwS,MAAO,SACPwJ,WAAY,qBACZhc,MAAO,IACPlN,KAAM,YA+BJyjB,SAAU,GACVqN,YAAaD,EACbG,cAAeD,EACf/0B,KAAMA,EACNL,QAASA,EACTyoB,MAAOA,OCrET9tB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRziB,WAAYxC,EAAMI,QAAQ,GAC1B2C,WAAY/C,EAAM6a,WAAWkF,gBAE/B1P,OAAQ,CACNlQ,QAASH,EAAMI,QAAQ,SA+Edi/B,GA1EoB,WACjC,IAAM9gB,EAAO,uCAAG,WAAOpa,GAAP,eAAAlK,EAAA,sEACIiR,GAAmB3B,GADvB,OACR8E,EADQ,OAEVlK,GACFinB,EAAa/c,GAHD,2CAAH,sDAOb,EAAkC9N,mBAAqB,IAAvD,mBAAO8qB,EAAP,KAAkBD,EAAlB,KACA,EAA4B7qB,mBAAS,IAArC,mBAAOgJ,EAAP,KAAeqO,EAAf,KAOM0nB,EAAkB,uCAAG,WAAO59B,GAAP,iBAAAzH,EAAA,6DACnB2gB,EAAMlZ,EAAME,OAAO1E,MACzB0a,EAAUgD,GAFe,SAGP1P,GAAmB0P,GAHZ,OAGnBvM,EAHmB,OAIzB+c,EAAa/c,GAJY,2CAAH,sDAOxBnK,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAA/E,sGAIF,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,gBAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA9E,UACE,eAACM,GAAA,EAAD,CACE3F,GAAG,iBACHqB,MAAOqM,EACP9H,SAAU69B,EACVptB,MAAM,wHACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,UACGsqB,EAAU1b,KAAI,SAAAqY,GAAQ,OACrB,eAAC,GAAD,CAEEA,SAAUA,EACVS,cAAY,EACZJ,SAAQ,yCAAWL,EAAS5W,KAApB,0BAhDTka,EAgDkDtD,EAASuD,YA/ChE,IAAIC,KAAKF,GACV2M,uBA+COjP,YAAU,EACVD,YAAU,GALLf,EAASnsB,IA7ChB,IAACyvB,uBC/BfxrB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX0d,YAAa,CACXpb,YAAavC,EAAMI,QAAQ,GAC3BoC,WAAYxC,EAAMI,QAAQ,GAC1BqC,cAAezC,EAAMI,QAAQ,IAE/Byd,YAAa,CACXrb,WAAYxC,EAAMI,QAAQ,IAE5B6kB,SAAU,CACRziB,WAAYxC,EAAMI,QAAQ,GAC1B2C,WAAY/C,EAAM6a,WAAWkF,gBAE/B1P,OAAQ,CACNlQ,QAASH,EAAMI,QAAQ,SA6Edi/B,GAxEoB,WACjC,IAAM9gB,EAAO,uCAAG,WAAOpa,GAAP,eAAAlK,EAAA,sEACIkR,GAA6B5B,GADjC,OACR8E,EADQ,OAEVlK,GACFinB,EAAa/c,GAHD,2CAAH,sDAOb,EAAkC9N,mBAAqB,IAAvD,mBAAO8qB,EAAP,KAAkBD,EAAlB,KACA,EAA4B7qB,mBAAS,IAArC,mBAAOgJ,EAAP,KAAeqO,EAAf,KAOM0nB,EAAkB,uCAAG,WAAO59B,GAAP,iBAAAzH,EAAA,6DACnB2gB,EAAMlZ,EAAME,OAAO1E,MACzB0a,EAAUgD,GAFe,SAGPzP,GAA6ByP,GAHtB,OAGnBvM,EAHmB,OAIzB+c,EAAa/c,GAJY,2CAAH,sDAOxBnK,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAoa,EAAQpa,GACD,WACLA,GAAY,KAEb,IAEH,IAAMzD,EAAUZ,KAEhB,OACE,gBAAC,IAAMsH,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAAnE,SACE,eAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASH,WAAS,EAA/F,SACE,gBAACF,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASF,WAAS,EAA/D,UACE,eAACF,EAAA,EAAD,UACE,eAAC+F,EAAA,EAAD,CAAYE,MAAM,SAAShG,UAAWN,EAAQukB,SAAU3jB,QAAQ,KAAK2F,UAAU,KAA/E,sGAIF,eAAClG,EAAA,EAAD,CAAMwF,MAAI,EAACrF,UAAU,MAAMC,eAAe,SAASF,WAAS,EAA5D,SACE,gBAACF,EAAA,EAAD,CAAMC,UAAWN,EAAQid,YAAanX,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACtF,WAAS,EAACC,UAAU,SAA9E,UACE,eAACM,GAAA,EAAD,CACE3F,GAAG,iBACHqB,MAAOqM,EACP9H,SAAU69B,EACVptB,MAAM,wHACN5Q,QAAQ,aAEV,eAACP,EAAA,EAAD,UACGsqB,EAAU1b,KAAI,SAAAqY,GAAQ,OACrB,eAAC,GAAD,CAEEA,SAAUA,EACVS,cAAY,EACZJ,SAAQ,yCAAWL,EAAS5W,KAApB,0BAhDTka,EAgDkDtD,EAASuD,YA/ChE,IAAIC,KAAKF,GACV2M,wBA2CYjQ,EAASnsB,IA7ChB,IAACyvB,uB,oBCnCfxrB,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJoQ,UAAWtQ,EAAMI,QAAQ,IACzBuG,MAAO,OACP+N,gBAAiB,aA+CR6qB,GA1CA,WACb,IAAM7+B,EAAUZ,KAEhB,OACE,yBAAQkB,UAAWN,EAAQR,KAA3B,SACE,eAACs/B,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAW98B,SAAS,KAApB,SACE,gBAAC5B,EAAA,EAAD,CAAME,WAAS,EAACb,QAAS,EAAzB,UACE,gBAACW,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC+4B,GAAA,EAAD,CAAKnf,aAAc,EAAnB,mGACA,eAACmf,GAAA,EAAD,UACE,eAACt4B,EAAA,EAAD,CAAMC,KAAK,SAAX,gEAEF,eAACq4B,GAAA,EAAD,UACE,eAACt4B,EAAA,EAAD,CAAMC,KAAK,gBAAX,qFAGJ,gBAACpG,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC+4B,GAAA,EAAD,CAAKnf,aAAc,EAAnB,oEACA,eAACmf,GAAA,EAAD,UACE,gBAAC14B,EAAA,EAAD,sBACU,eAACI,EAAA,EAAD,CAAMC,KAAK,4BAAX,qCAGZ,eAACq4B,GAAA,EAAD,UACE,gBAAC14B,EAAA,EAAD,yFACiB,eAACI,EAAA,EAAD,CAAMC,KAAK,sBAAX,qCAIrB,gBAACpG,EAAA,EAAD,CAAMwF,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,eAAC+4B,GAAA,EAAD,CAAKnf,aAAc,EAAnB,iFACA,eAACmf,GAAA,EAAD,4OACA,eAACA,GAAA,EAAD,2GC1CR1/B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqf,KAAM,CACJzc,OAAQ7C,EAAMI,QAAQ,IAExBs/B,WAAY,CACVv/B,QAASH,EAAMI,QAAQ,SA0Ddu/B,GArDD,WACZ,IAAMj/B,EAAUZ,KAEVgtB,EAAO,uCAAG,WAAO3oB,GAAP,eAAAlK,EAAA,sEACI4S,KADJ,OACRwB,EADQ,OAEVlK,GACF21B,EAAWzrB,GAHC,2CAAH,sDAgBb9I,IAAMrB,WAAU,YATI,WAClB,IAAIC,GAAY,EAChB2oB,EAAQ3oB,GAQR6oB,KACC,IAEH,MAA8BznB,IAAMhF,SAAmB,IAAvD,mBAAOse,EAAP,KAAgBib,EAAhB,KAEA,OACE,gBAAC,IAAM1yB,SAAP,WACE,eAAC,GAAD,IACA,eAACrG,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASC,WAAW,SAAnD,SACE,gBAACL,EAAA,EAAD,CAAMyF,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACrF,UAAU,SAASC,eAAe,SAASC,WAAW,SAASH,WAAS,EAAlG,UACE,eAAC6F,EAAA,EAAD,CAAYxF,QAAQ,KAAK0iB,MAAO,CAAEvhB,cAAe,QAAjD,yIAGA,eAAC1B,EAAA,EAAD,CAAME,WAAS,EAACC,UAAU,SAA1B,SACG2d,EAAQlP,KAAI,SAAAoP,GAAC,OACZ,eAACpZ,EAAA,EAAD,CAAMmzB,UAAW,EAAG93B,UAAWN,EAAQ4e,KAAvC,SACE,gBAACve,EAAA,EAAD,CAAMC,UAAWN,EAAQg/B,WAAYz+B,WAAS,EAACC,UAAU,MAAMC,eAAe,SAA9E,UACE,eAACJ,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,aAAakG,aAAa,SAASd,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAnF,SACE,eAAC,GAAD,CAAYgY,OAAQM,MAEtB,eAAChe,EAAA,EAAD,CAAME,WAAS,EAACE,eAAe,SAASkG,aAAa,SAASd,MAAI,EAACC,GAAI,GAAIC,GAAI,EAA/E,SACE,eAACS,EAAA,EAAD,CAAMC,KAAI,cAAS4X,EAAE5iB,YAAX,KAAV,SAAsC4iB,EAAE5iB,oBANI4iB,EAAEljB,kBCvB5D+jC,GAAaC,YAAY,CAC7BtpB,QAAS,CACPyZ,QAAS,CACP8P,KAAM,WAERC,UAAW,CACTD,KAAM,WAqCGE,GAhCO,kBACpB,gBAACC,EAAA,EAAD,CAAejgC,MAAO4/B,GAAtB,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOM,KAAK,IAAIxa,QAAS,eAAC,GAAD,MACzB,eAAC,IAAD,CAAOwa,KAAK,8BAA8Bxa,QAAS,eAAC,GAAD,MACnD,eAAC,IAAD,CAAOwa,KAAK,0BAA0Bxa,QAAS,eAAC,GAAD,MAC/C,eAAC,IAAD,CAAOwa,KAAK,QAAQxa,QAAS,eAAC,GAAD,MAC7B,eAAC,IAAD,CAAOwa,KAAK,YAAYxa,QAAS,eAAC,GAAD,MACjC,eAAC,IAAD,CAAOwa,KAAK,sBAAsBxa,QAAS,eAAC,GAAD,MAC3C,eAAC,IAAD,CAAOwa,KAAK,gBAAgBxa,QAAS,eAAC,GAAD,MACrC,eAAC,IAAD,CAAOwa,KAAK,cAAcxa,QAAS,eAAC,GAAD,MACnC,eAAC,IAAD,CAAOwa,KAAK,aAAaxa,QAAS,eAAC,GAAD,MAClC,eAAC,IAAD,CAAOwa,KAAK,SAASxa,QAAS,eAAC,GAAD,MAC9B,eAAC,IAAD,CAAOwa,KAAK,0BAA0Bxa,QAAS,eAAC,GAAD,MAC/C,eAAC,IAAD,CAAOwa,KAAK,oBAAoBxa,QAAS,eAAC,GAAD,MACzC,eAAC,IAAD,CAAOwa,KAAK,yBAAyBxa,QAAS,eAAC,GAAD,MAC9C,eAAC,IAAD,CAAOwa,KAAK,oBAAoBxa,QAAS,eAAC,GAAD,MACzC,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOwa,KAAK,2BAA2Bxa,QAAS,eAAC,GAAD,MAChD,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOwa,KAAK,oBAAoBxa,QAAS,eAAC,GAAD,MACzC,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAAC,GAAD,MACtC,eAAC,IAAD,CAAOwa,KAAK,gBAAgBxa,QAAS,eAAC,GAAD,MACrC,eAAC,IAAD,CAAOwa,KAAK,iBAAiBxa,QAAS,eAACya,GAAD,MACtC,eAAC,IAAD,CAAOD,KAAK,SAASxa,QAAS,eAAC,GAAD,SAEhC,eAAC,GAAD,QCxDW0a,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,UACE,eAAC,GAAD,QAGJhxB,SAASixB,eAAe,SAG1BZ,O","file":"static/js/main.79da3aa0.chunk.js","sourcesContent":["import axios from 'axios';\n\nimport ItemOfPurchase from 'src/Types/ItemOfPurchase';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport ParameterBlockCreateRequest from 'src/Types/ParameterBlockCreateRequest';\nimport ParameterCreateRequest from 'src/Types/ParameterCreateRequest';\nimport PurchaseRequest from 'src/Types/PurchaseRequest';\n\nasync function post<T>(url: string, data: T) {\n  return (await axios.post(url, data)).data;\n}\n\nasync function addToCart(productId: string, count: number) {\n  return await post('/api/CustomerLists/cart/', { productId: productId, count: count });\n}\n\nasync function addToWishlist(productId: string) {\n  return await post(`/api/CustomerLists/wishlist/${productId}/`, null);\n}\n\nasync function createReview(productId: string, mark: number, description: string) {\n  return await post(`/api/Review/`, { productId: productId, mark: mark, description: description });\n}\n\nasync function getPrepurchaseInfo(items: ItemOfPurchase[]) {\n  const cityId = localStorage.getItem('cityId');\n  const data = { cityId: cityId, purchaseItems: items };\n  return await post(`/api/Purchase/preinfo`, data);\n}\n\nasync function createPurchase(data: PurchaseRequest) {\n  const cityId = localStorage.getItem('cityId');\n  data.cityId = parseInt(cityId as string);\n  if (data.delivery) {\n    data.delivery.cityId = parseInt(cityId as string);\n  }\n\n  return await post(`/api/Purchase/`, data);\n}\n\nasync function createCommonCategory(name: string, description: string) {\n  const data = { name: name, description: description };\n  return await post(`/api/CommonCategory`, data);\n}\n\nasync function createCategory(name: string, description: string, deliveryPrice: number, commonCategoryId: string) {\n  const data = { name: name, description: description, deliveryPrice, commonCategoryId };\n  return await post(`/api/Category`, data);\n}\n\nasync function setCategoryParameterBlocks(categoryId: string, blocks: ParameterBlockCreateRequest[]) {\n  return await post(`/api/ParameterBlock/setMany/${categoryId}`, blocks);\n}\n\nasync function createParameterBlock(name: string) {\n  const data = { name };\n  return await post(`/api/ParameterBlock/`, data);\n}\n\nasync function banUser(id: string) {\n  return await post(`/api/Account/Ban/${id}`, null);\n}\n\nasync function unbanUser(id: string) {\n  return await post(`/api/Account/Unban/${id}`, null);\n}\n\nasync function registerWorker(\n  login: string,\n  password: string,\n  email: string,\n  phoneNumber: string,\n  firstName: string,\n  secondName: string,\n  roleName: string,\n  outletId: number,\n  warehouseId: number,\n  outletWorker: boolean,\n) {\n  const data = {\n    login,\n    password,\n    email,\n    phoneNumber,\n    firstName,\n    secondName,\n    roleName,\n    outletId: outletWorker ? outletId : null,\n    warehouseId: outletWorker ? null : warehouseId,\n  };\n  return await post(`/api/Account/RegisterWorker/`, data);\n}\n\nasync function createParameter(\n  name: string,\n  important: boolean,\n  range: boolean,\n  minValue: number,\n  maxValue: number,\n  parameterBlockId: string,\n) {\n  const data = { name, important, range, minValue, maxValue, parameterBlockId };\n  return await post(`/api/TechParameter/`, data);\n}\n\nasync function createParameterValue(techParameterId: string, value: string) {\n  const data = { value, techParameterId };\n  return await post(`/api/ParameterValue`, data);\n}\n\nasync function createProductParameter(\n  productId: string,\n  value: number | null,\n  parameterId: string,\n  parameterValueId: string | null,\n) {\n  const data = { productId, value, parameterId, parameterValueId };\n  return await post(`/api/ProductParameter`, data);\n}\n\nasync function cloneProduct(productId: string) {\n  return await post(`/api/Product/clone/${productId}`, null);\n}\n\nasync function publishProduct(productId: string) {\n  return await post(`/api/Product/publish/${productId}`, null);\n}\n\nasync function unpublishProduct(productId: string) {\n  return await post(`/api/Product/unpublish/${productId}`, null);\n}\n\nasync function createProduct(\n  name: string,\n  description: string,\n  price: number,\n  priceWithoutDiscount: number,\n  categoryId: string,\n  vendorCode: string,\n  picFile: File | null,\n  parameters?: ParameterCreateRequest[],\n) {\n  const formData = new FormData();\n  formData.append('name', name);\n  formData.append('description', description);\n  formData.append('price', `${price}`);\n  formData.append('priceWithoutDiscount', `${priceWithoutDiscount}`);\n  formData.append('categoryId', categoryId);\n  formData.append('vendorCode', vendorCode);\n  if (picFile) {\n    formData.append('picFile', picFile);\n  }\n\n  const parameterString = JSON.stringify(parameters);\n  formData.append(`parameterString`, parameterString);\n\n  return await post(`/api/Product`, formData);\n}\n\nasync function createRegion(name: string) {\n  const data = { name };\n  return await post(`/api/Geography/region`, data);\n}\n\nasync function createCity(name: string, regionId: number) {\n  const data = { name, regionId };\n  return await post(`/api/Geography/city`, data);\n}\n\nasync function createOutlet(\n  name: string,\n  cityId: number,\n  streetName: string,\n  building: string,\n  postalCode: string,\n  noteForUser: string,\n  phoneNumber: string,\n) {\n  const data = { name, cityId, streetName, building, postalCode, noteForUser, phoneNumber };\n  return await post(`/api/Estate/outlet`, data);\n}\n\nasync function createWarehouse(\n  name: string,\n  cityId: number,\n  streetName: string,\n  building: string,\n  postalCode: string,\n  phoneNumber: string,\n) {\n  const data = { name, cityId, streetName, building, postalCode, phoneNumber };\n  return await post(`/api/Estate/warehouse`, data);\n}\n\nasync function banReview(id: string) {\n  return await post(`/api/Review/Ban/${id}`, null);\n}\n\nexport {\n  addToCart,\n  addToWishlist,\n  createReview,\n  getPrepurchaseInfo,\n  createPurchase,\n  createCommonCategory,\n  createCategory,\n  setCategoryParameterBlocks,\n  createParameterBlock,\n  createParameter,\n  banUser,\n  unbanUser,\n  registerWorker,\n  createParameterValue,\n  createProductParameter,\n  cloneProduct,\n  publishProduct,\n  unpublishProduct,\n  createProduct,\n  createRegion,\n  createCity,\n  createOutlet,\n  createWarehouse,\n  banReview,\n};\n","import axios from 'axios';\n\nasync function deleteRequest<T>(url: string, data: T) {\n  return (await axios.delete(url, data)).data;\n}\n\nasync function deleteFromCart(productId: string) {\n  return await deleteRequest(`/api/CustomerLists/cart/${productId}`, null);\n}\n\nasync function deleteFromWishlist(productId: string) {\n  return await deleteRequest(`/api/CustomerLists/wishlist/${productId}`, null);\n}\n\nasync function deleteCommonCategory(id: string) {\n  return await deleteRequest(`/api/CommonCategory/${id}`, null);\n}\n\nasync function deleteCategory(id: string) {\n  return await deleteRequest(`/api/Category/${id}`, null);\n}\n\nasync function deleteParameterBlock(id: string) {\n  return await deleteRequest(`/api/ParameterBlock/${id}`, null);\n}\n\nasync function deleteParameter(id: string) {\n  return await deleteRequest(`/api/TechParameter/${id}`, null);\n}\n\nasync function deleteParameterValue(id: string) {\n  return await deleteRequest(`/api/ParameterValue/${id}`, null);\n}\n\nasync function deleteProductParameter(id: string) {\n  return await deleteRequest(`/api/ProductParameter/${id}`, null);\n}\n\nasync function deleteProduct(id: string) {\n  return await deleteRequest(`/api/Product/${id}`, null);\n}\n\nasync function deleteRegion(id: number) {\n  return await deleteRequest(`/api/Geography/region/${id}`, null);\n}\n\nasync function deleteCity(id: number) {\n  return await deleteRequest(`/api/Geography/city/${id}`, null);\n}\n\nasync function deleteOutlet(id: number) {\n  return await deleteRequest(`/api/Estate/outlet/${id}`, null);\n}\n\nasync function deleteWarehouse(id: number) {\n  return await deleteRequest(`/api/Estate/warehouse/${id}`, null);\n}\n\nexport {\n  deleteFromCart,\n  deleteFromWishlist,\n  deleteCommonCategory,\n  deleteCategory,\n  deleteParameterBlock,\n  deleteParameter,\n  deleteParameterValue,\n  deleteProductParameter,\n  deleteProduct,\n  deleteRegion,\n  deleteCity,\n  deleteOutlet,\n  deleteWarehouse,\n};\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IPoductCounter {\n  count: number;\n  id?: string;\n  onCount?: (newCount: number, id?: string) => void;\n}\n\nconst PoductCounter: React.FC<IPoductCounter> = props => {\n  const [currentCount, setCount] = useState<number>(props.count);\n  const classes = useStyles();\n\n  const onCount = (newCount: number) => {\n    let countValue = newCount;\n    if (newCount > 99) {\n      countValue = 99;\n    } else if (newCount < 1) {\n      countValue = 1;\n    }\n\n    if (currentCount !== countValue) {\n      if (props.onCount) {\n        props.onCount(countValue, props.id);\n      }\n\n      setCount(countValue);\n    }\n  };\n\n  const addCount = () => {\n    const curCount = currentCount + 1;\n    onCount(curCount);\n  };\n\n  const minCount = () => {\n    const curCount = currentCount - 1;\n    onCount(curCount);\n  };\n\n  const onlyNubmers = /^\\d[0-2]$/;\n  const onTextChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const curStringCount = event.target.value as string;\n    if (onlyNubmers.test(curStringCount)) {\n      onCount(parseInt(curStringCount));\n    } else {\n      onCount(1);\n    }\n  };\n\n  return (\n    <Grid className={classes.root} container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n      <Button variant=\"outlined\" onClick={addCount}>\n        +\n      </Button>\n      <TextField id=\"counter\" value={currentCount} onChange={onTextChanged} variant=\"outlined\" />\n      <Button variant=\"outlined\" onClick={minCount}>\n        -\n      </Button>\n    </Grid>\n  );\n};\n\nexport default PoductCounter;\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button, Snackbar } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Close from '@mui/icons-material/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Alert } from '@material-ui/lab';\n\nimport Product from 'src/Types/Product';\nimport { addToCart, addToWishlist } from 'src/Requests/PostRequests';\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\n\nimport PoductCounter from './PoductCounter';\n\ninterface IProductCard {\n  product: Product;\n  hideBuy?: boolean;\n  hideLike?: boolean;\n  showCounter?: boolean;\n  count?: number;\n  isChecked?: boolean;\n  onCount?: (newCount: number, productId?: string) => void;\n  onDelete?: (productId: string) => void;\n  onBuy?: () => void;\n  onWished?: () => void;\n  onChecked?: (product: Product, added: boolean) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      marginBottom: theme.spacing(1),\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    button: {\n      padding: theme.spacing(1),\n    },\n    buttonright: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(1),\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(1),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    thinbold: {\n      fontWeight: 550,\n    },\n    crossed: {\n      textDecoration: 'line-through',\n    },\n    rating: {\n      margin: theme.spacing(1),\n    },\n    ratingNum: {\n      marginLeft: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductCard: React.FC<IProductCard> = props => {\n  const role = sessionStorage.getItem('signed');\n  const [isShown, setIsShown] = useState(false);\n  const [isChecked, setChecked] = useState(props.isChecked ?? false);\n  const picUrl = 'https://localhost:5001/products/';\n  const [picture, setPicture] = useState(`${picUrl}${props.product.picURL}`);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let isMounted = true;\n    const img = new Image();\n    img.src = `${picUrl}${props.product.picURL}`;\n\n    if (!role || role === 'Guest') {\n      const cart = localStorage.getItem('cartItems');\n      if (cart) {\n        props.product.inCart = cart.includes(props.product.id);\n        setInCart(props.product.inCart);\n      }\n    }\n\n    if (isMounted) {\n      img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const [inCart, setInCart] = useState(props.product.inCart);\n  const [inWishlist, setInWishlist] = useState(props.product.inWishlist);\n\n  const addProductToCart = async () => {\n    if (role && role !== 'Guest') {\n      const response = await addToCart(props.product.id, 0);\n      if (response !== null) {\n        setInCart(true);\n        if (props.onBuy) {\n          props.onBuy();\n        }\n      }\n    } else {\n      const items = localStorage.getItem('cartItems');\n\n      if (items) {\n        if (items.includes(props.product.id)) {\n          return;\n        }\n        localStorage.setItem('cartItems', `${items},${props.product.id}`);\n      } else {\n        localStorage.setItem('cartItems', props.product.id);\n      }\n    }\n  };\n\n  const addProductToWishlist = async () => {\n    if (role) {\n      const response = await addToWishlist(props.product.id);\n      if (response !== null) {\n        setInWishlist(true);\n        if (props.onWished) {\n          props.onWished();\n        }\n      }\n    } else {\n      setOpen(true);\n    }\n  };\n\n  const deleteProductFromWishlist = async () => {\n    const response = await deleteFromWishlist(props.product.id);\n    if (response === 1) {\n      setInWishlist(false);\n      if (props.onWished) {\n        props.onWished();\n      }\n    }\n  };\n\n  const onDelete = props.onDelete?.bind(this, props.product.id);\n\n  const onChange = () => {\n    if (props.onChecked) {\n      props.onChecked(props.product, !isChecked);\n    }\n\n    setChecked(!isChecked);\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n    >\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"info\">\n          Зарегистрируйтесь для использования всех возможностей магазина!\n        </Alert>\n      </Snackbar>\n      <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n        {props.onChecked && (\n          <Grid container direction=\"column\" item alignItems=\"center\" justifyContent=\"center\" xs={12} sm={1}>\n            <Checkbox color=\"primary\" onChange={onChange} checked={isChecked} />\n          </Grid>\n        )}\n        <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"center\" item xs={12} sm={3}>\n          <img className={classes.cover} src={picture} alt={props.product.name} />\n          <Typography variant=\"body1\">{isShown && props.product.vendorCode}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} container direction=\"column\">\n          <CardContent className={classes.content}>\n            <Grid>\n              <Typography align=\"center\" component=\"h5\" variant=\"h5\">\n                <Link href={`/product/${props.product.id}`} color=\"inherit\">\n                  {props.product.name}\n                </Link>\n              </Typography>\n              {props.product.priceWithoutDiscount && props.product.priceWithoutDiscount > props.product.price ? (\n                <React.Fragment>\n                  <Typography\n                    align=\"center\"\n                    variant=\"h6\"\n                    color=\"textSecondary\"\n                    className={`${classes.crossed} ${classes.thinbold}`}\n                  >\n                    {props.product.priceWithoutDiscount}₽\n                  </Typography>\n                  <Typography align=\"center\" color=\"primary\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n                    {props.product.price}₽\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <Typography align=\"center\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n                  {props.product.price}₽\n                </Typography>\n              )}\n            </Grid>\n          </CardContent>\n          <Grid\n            container\n            item\n            xs={12}\n            justifyContent=\"center\"\n            alignContent=\"center\"\n            direction=\"row\"\n            className={classes.rating}\n          >\n            <Rating name=\"read-only\" value={props.product.mark} readOnly />\n            <Typography className={`${classes.bold} ${classes.ratingNum}`}>{props.product.mark}</Typography>\n          </Grid>\n        </Grid>\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" item xs={12} sm={2}>\n          {!props.hideLike && (\n            <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n              {inWishlist ? (\n                <IconButton\n                  aria-label=\"favourite\"\n                  color=\"primary\"\n                  className={classes.button}\n                  onClick={deleteProductFromWishlist}\n                >\n                  <FavoriteIcon />\n                </IconButton>\n              ) : (\n                <IconButton aria-label=\"favourite\" className={classes.button} onClick={addProductToWishlist}>\n                  <FavoriteIcon />\n                </IconButton>\n              )}\n            </Grid>\n          )}\n          {!props.hideBuy && (\n            <Grid container justifyContent=\"center\" item xs={12} sm={8}>\n              {inCart ? (\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" href=\"/cart\">\n                  В Корзине\n                </Button>\n              ) : (\n                <Button className={classes.button} variant=\"outlined\" onClick={addProductToCart}>\n                  Купить\n                </Button>\n              )}\n            </Grid>\n          )}\n          {props.showCounter && (\n            <Grid item xs={12} sm={6}>\n              <PoductCounter id={props.product.id} count={props.count as number} onCount={props.onCount} />\n            </Grid>\n          )}\n          {props.onDelete && (\n            <Grid item xs={12} sm={4}>\n              <IconButton aria-label=\"favourite\" className={classes.buttonright} onClick={onDelete}>\n                <Close />\n              </IconButton>\n            </Grid>\n          )}\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProductCard;\n","import axios from 'axios';\n\nimport Login from 'src/Types/Login';\nimport Register from 'src/Types/Register';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport UserMainInfo from 'src/Types/UserMainInfo';\n\nconst serverAnswers = {\n  noCommand: 0,\n  signedIn: 3,\n  userNotFound: 10,\n};\n\nconst authViaGoogle = async (token: string): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/GoogleAuth', { token: token })).data;\n\nconst logInRequest = async (logInData: Login): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Login', logInData)).data;\n\nconst registrationRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Register', registrationData)).data;\n\nconst regViaGoogleRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/RegisterViaGoogle', registrationData)).data;\n\nconst getRole = async (): Promise<string> => (await axios.get('/api/Account/Role')).data;\n\nconst getUserInfo = async (): Promise<UserMainInfo> => (await axios.get('/api/Account/GetCurrentUserInfo')).data;\n\nconst logOut = async (): Promise<string> => (await axios.post('/api/Account/LogOut')).data;\n\nexport {\n  serverAnswers,\n  authViaGoogle,\n  logInRequest,\n  registrationRequest,\n  regViaGoogleRequest,\n  getRole,\n  getUserInfo,\n  logOut,\n};\n","const Roles = {\n  guest: 'Guest',\n  admin: 'Admin',\n  customer: 'Customer',\n};\n\nexport default Roles;\n","import axios from 'axios';\n\nimport Category from 'src/Types/Category';\nimport CategoryAllParameterBlocks from 'src/Types/CategoryAllParameterBlocks';\nimport City from 'src/Types/City';\nimport CommonCategory from 'src/Types/CommonCategory';\nimport FilterValue from 'src/Types/FilterValue';\nimport Outlet from 'src/Types/Outlet';\nimport Parameter from 'src/Types/Parameter';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport Product from 'src/Types/Product';\nimport Purchase from 'src/Types/Purchase';\nimport Region from 'src/Types/Region';\nimport SalesStatistics from 'src/Types/SalesStatistics';\nimport SalesTimeStatistics from 'src/Types/SalesTimeStatistics';\nimport Sorting from 'src/Types/Sorting';\nimport Warehouse from 'src/Types/Warehouse';\nimport WorkersSales from 'src/Types/WorkersSales';\n\nasync function getRequest(url: string) {\n  return (await axios.get(url)).data;\n}\n\nasync function getProducts(currentPage: number, itemsOnPage: number, sortType: string, price: number[]) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const params = new URLSearchParams(location.search);\n  const search = params.get('search');\n  let url = `/api/Product?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n  if (search) {\n    url += `&search=${search}`;\n  }\n\n  return await getRequest(url);\n}\n\nasync function getSearchedProducts(currentPage: number, itemsOnPage: number, sortType: string, search: string) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const url = `/api/Product?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&search=${search}`;\n  return await getRequest(url);\n}\n\nasync function getCart() {\n  const url = `/api/CustomerLists/cart`;\n  return await getRequest(url);\n}\n\nasync function getCartUnsigned() {\n  const items = localStorage.getItem('cartItems');\n  const url = `/api/CustomerLists/cart/unsigned?productIds=${items}`;\n  return await getRequest(url);\n}\n\nasync function getWishlist() {\n  const url = `/api/CustomerLists/wishlist`;\n  return await getRequest(url);\n}\n\nasync function getCategories(commonCategory: string) {\n  return (await getRequest(`/api/Category/${commonCategory}`)) as Category[];\n}\n\nasync function getAllCategories() {\n  return (await getRequest(`/api/Category/`)) as Category[];\n}\n\nasync function getCommonCategories() {\n  return (await getRequest('/api/CommonCategory')) as CommonCategory[];\n}\n\nasync function getReviews(productId: string) {\n  return await getRequest(`/api/Review/${productId}`);\n}\n\nasync function getProduct(id: string) {\n  const cityId = localStorage.getItem('cityId');\n  return (await getRequest(`/api/Product/${id}?cityId=${cityId}`)) as Product;\n}\n\nasync function getParameters(id: string) {\n  return (await getRequest(`/api/Product/parameters/${id}`)) as ParameterBlock[];\n}\n\nasync function getRegions() {\n  return (await getRequest('/api/Geography/regions')) as Region[];\n}\n\nasync function getAllRegions() {\n  return (await getRequest('/api/Geography/allRegions')) as Region[];\n}\n\nasync function getCategoryById(id: string) {\n  return (await getRequest(`/api/Category/id/${id}`)) as Category;\n}\n\nasync function getRegionCities(id: number) {\n  return (await getRequest(`/api/Geography/cities/${id}`)) as City[];\n}\n\nasync function getProductsOfCategory(\n  categoryName: string,\n  currentPage: number,\n  itemsOnPage: number,\n  sortType: string,\n  price: number[],\n  filters: FilterValue[],\n) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  let url = `/api/Category/name/${categoryName}?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n\n  for (const filter of filters) {\n    if (filter.range) {\n      if (filter.minValue || filter.maxValue) {\n        if (!filter.minValue) {\n          filter.minValue = '0';\n        }\n        if (!filter.maxValue) {\n          filter.maxValue = '0';\n        }\n        url += `&${filter.id}=${filter.minValue},${filter.maxValue}`;\n      }\n    } else {\n      if (filter.itemIds && filter.itemIds.length > 0) {\n        url += `&${filter.id}=${filter.itemIds?.join(',')}`;\n      }\n    }\n  }\n\n  return await getRequest(url);\n}\n\nfunction sortTypeParsing(sortType: string): Sorting {\n  if (sortType.includes('reverse')) {\n    return { type: sortType.split(' ')[0], reverse: true };\n  } else {\n    return { type: sortType.split(' ')[0], reverse: false };\n  }\n}\n\nasync function getPurchases() {\n  return (await getRequest('/api/Purchase')) as Purchase[];\n}\n\nasync function getOutletPurchases(search: string) {\n  return (await getRequest(`/api/Purchase/outlet?search=${search}`)) as Purchase[];\n}\n\nasync function getOutletHistoricalPurchases(search: string) {\n  return (await getRequest(`/api/Purchase/outletHistory?search=${search}`)) as Purchase[];\n}\n\nasync function getCommonCategory(id: string) {\n  return (await getRequest(`/api/CommonCategory/${id}`)) as CommonCategory;\n}\n\nasync function getCategoryParamBlocks(id: string) {\n  return (await getRequest(`/api/Category/parameterBlocks/${id}`)) as CategoryAllParameterBlocks;\n}\n\nasync function getParamBlocks() {\n  return (await getRequest(`/api/ParameterBlock`)) as ParameterBlock[];\n}\n\nasync function getParameterBlock(id: string) {\n  return (await getRequest(`/api/ParameterBlock/${id}`)) as ParameterBlock;\n}\n\nasync function getTechParameters() {\n  return (await getRequest(`/api/TechParameter`)) as Parameter[];\n}\n\nasync function getTechListParameters() {\n  return (await getRequest(`/api/TechParameter/lists`)) as Parameter[];\n}\n\nasync function getParameter(id: string) {\n  return (await getRequest(`/api/TechParameter/${id}`)) as Parameter;\n}\n\nasync function getOutlets(id: number) {\n  return (await getRequest(`/api/Estate/outlets/${id}`)) as Outlet[];\n}\n\nasync function getWarehouses(id: number) {\n  return (await getRequest(`/api/Estate/warehouses/city/${id}`)) as Warehouse[];\n}\n\nasync function getWorkers() {\n  return await getRequest(`/api/Account/GetWorkers`);\n}\n\nasync function getWorker(id: string) {\n  return await getRequest(`/api/Account/${id}`);\n}\n\nasync function getParameterValues() {\n  return await getRequest(`/api/ParameterValue`);\n}\n\nasync function getParameterValue(id: string) {\n  return await getRequest(`/api/ParameterValue/${id}`);\n}\n\nasync function getProductParameter() {\n  return await getRequest(`/api/ProductParameter`);\n}\n\nasync function getRegion(id: number) {\n  return await getRequest(`/api/Geography/region/${id}`);\n}\n\nasync function getValuesOfParameter(id: string) {\n  return await getRequest(`/api/ParameterValue/parameter/${id}`);\n}\n\nasync function getCity(id: number) {\n  return await getRequest(`/api/Geography/city/${id}`);\n}\n\nasync function getAllOutlets() {\n  return await getRequest(`/api/Estate/outlets/`);\n}\n\nasync function getAllWarehouses() {\n  return await getRequest(`/api/Estate/warehouses/`);\n}\n\nasync function getOutlet(id: number) {\n  return await getRequest(`/api/Estate/outlet/${id}`);\n}\n\nasync function getWarehouse(id: number) {\n  return await getRequest(`/api/Estate/warehouse/${id}`);\n}\n\nasync function getOrdersForMonth(type: number, finished: boolean) {\n  return (await getRequest(`/api/Statistics/monthOrders/${type}?finished=${finished}`)) as SalesTimeStatistics[];\n}\n\nasync function getMonthSales(type: number) {\n  return (await getRequest(`/api/Statistics/monthSales/${type}`)) as SalesStatistics;\n}\n\nasync function getTotalSales(type: number) {\n  return (await getRequest(`/api/Statistics/totalSales/${type}`)) as SalesStatistics;\n}\n\nasync function getClients() {\n  return await getRequest(`/api/Account/GetClients`);\n}\n\nasync function getCityOulets() {\n  const cityId = localStorage.getItem('cityId');\n  return await getRequest(`/api/Estate/outlets/${cityId}`);\n}\n\nasync function getStatFile(fromDate: Date, toDate: Date) {\n  return await getRequest(\n    `/api/Statistics/statForPeriod?fromDate=${fromDate.toISOString()}&toDate=${toDate.toISOString()}`,\n  );\n}\n\nasync function getWorkersSales(type: number) {\n  return (await getRequest(`/api/Statistics/workersSales/${type}`)) as WorkersSales;\n}\n\nexport default getRequest;\n\nexport {\n  getProducts,\n  getRequest,\n  getCategories,\n  getCommonCategories,\n  getProductsOfCategory,\n  getProduct,\n  getCart,\n  getWishlist,\n  getReviews,\n  getParameters,\n  getRegions,\n  getRegion,\n  getAllRegions,\n  getCartUnsigned,\n  getPurchases,\n  getAllCategories,\n  getCommonCategory,\n  getCategoryById,\n  getCategoryParamBlocks,\n  getParamBlocks,\n  getParameterValue,\n  getParameterValues,\n  getParameterBlock,\n  getTechParameters,\n  getTechListParameters,\n  getParameter,\n  getWorkers,\n  getOutlets,\n  getWarehouses,\n  getWorker,\n  getProductParameter,\n  getSearchedProducts,\n  getRegionCities,\n  getValuesOfParameter,\n  getCity,\n  getAllOutlets,\n  getAllWarehouses,\n  getOutlet,\n  getWarehouse,\n  getOrdersForMonth,\n  getClients,\n  getOutletPurchases,\n  getOutletHistoricalPurchases,\n  getMonthSales,\n  getTotalSales,\n  getCityOulets,\n  getStatFile,\n  getWorkersSales,\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { Typography } from '@material-ui/core';\n\nimport CommonCategory from 'src/Types/CommonCategory';\nimport { getCommonCategories } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n    menu: {\n      padding: theme.spacing(1),\n    },\n    item: {\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    largeObject: {\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n    smallObject: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nconst CategorySelector: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [comCategories, setComCategories] = React.useState<CommonCategory[]>([]);\n\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    const keyValue = 'Tab';\n    if (event.key === keyValue) {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const getCategs = async () => {\n      const res = await getCommonCategories();\n      if (isMounted) {\n        setComCategories(res);\n      }\n    };\n    getCategs();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div ref={anchorRef}>\n        {open ? (\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            className={classes.largeObject}\n            onClick={handleToggle}\n            endIcon={<ArrowDropUpIcon />}\n          >\n            Категории\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.largeObject}\n            endIcon={<ArrowDropDownIcon />}\n          >\n            Категории\n          </Button>\n        )}\n        {open ? (\n          <Button\n            variant=\"outlined\"\n            size=\"medium\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.smallObject}\n          >\n            <ArrowDropUpIcon />\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            size=\"medium\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.smallObject}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        )}\n      </div>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown} className={classes.menu}>\n              {comCategories instanceof Array &&\n                comCategories.map((comCategory, index) => (\n                  <MenuItem\n                    className={classes.item}\n                    key={index}\n                    onClick={() => {\n                      document.location.href = `/common/${comCategory.name}`;\n                    }}\n                  >\n                    <Typography variant=\"h6\" component=\"h6\">\n                      {comCategory.name}\n                    </Typography>\n                  </MenuItem>\n                ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </div>\n  );\n};\n\nexport default CategorySelector;\n","import React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport { AlertTitle } from '@material-ui/lab';\nimport MuiAlert from '@mui/material/Alert';\n\ninterface IErrorSnackBar {\n  open: boolean;\n  setOpen: (b: boolean) => void;\n  message: string;\n  errors: string[];\n}\n\nconst ErrorSnackBar: React.FC<IErrorSnackBar> = props => {\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={props?.open} onClose={handleClose}>\n      <MuiAlert onClose={handleClose} severity=\"warning\">\n        <AlertTitle>{props?.message}</AlertTitle>\n        <ul>\n          {props?.errors.map((er, key) => (\n            <li key={key}>{er}</li>\n          ))}\n        </ul>\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ErrorSnackBar;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\n\nimport Login from 'src/Types/Login';\nimport { authViaGoogle, logInRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst LoginForm: React.FC = () => {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState<Login>({ login: '', password: '', rememberMe: true });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleRememberMeChange = () => {\n    setLoginData({ login: loginData.login, password: loginData.password, rememberMe: !loginData.rememberMe });\n  };\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: event.target.value as string,\n      password: loginData.password,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: loginData.login,\n      password: event.target.value as string,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handleGoogleLoginSuccess = async (googleData: unknown) => {\n    if (googleData) {\n      const authResponse = (googleData as GoogleLoginResponse)?.getAuthResponse();\n      if (authResponse) {\n        googleRedirectTo(googleData as GoogleLoginResponse);\n      }\n    }\n  };\n\n  const logInButtonClicked = async () => {\n    redirectTo(await logInRequest(loginData));\n  };\n\n  const redirectTo = async (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const googleRedirectTo = async (googleData: GoogleLoginResponse) => {\n    const id = googleData?.getAuthResponse()?.id_token;\n    const serverResult = await authViaGoogle(id);\n    switch (serverResult.code) {\n      case serverAnswers.userNotFound:\n        redirectToRegistrationPage(id, googleData);\n        break;\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(serverResult.message);\n        setErrors(serverResult.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const redirectToRegistrationPage = (id: string, googleData: GoogleLoginResponse) => {\n    const profile = googleData.getBasicProfile();\n    const regData: Register = {\n      login: '',\n      password: '',\n      email: profile.getEmail(),\n      firstName: profile.getGivenName(),\n      secondName: profile.getFamilyName(),\n      token: id,\n    };\n\n    history.pushState(regData, '', '/registration');\n    window.location.replace('/registration');\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={loginData.login}\n        onChange={handleLoginChange}\n        label=\"Логин\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={loginData.password}\n        onChange={handlePasswordChange}\n        label=\"Пароль\"\n        variant=\"outlined\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={loginData.rememberMe}\n            onChange={handleRememberMeChange}\n            name=\"rememberMe\"\n            color=\"primary\"\n          />\n        }\n        label=\"Запомнить меня\"\n        className={classes.spaces}\n      />\n      <Grid container justifyContent=\"flex-end\">\n        <Button\n          type=\"submit\"\n          className={classes.spaces}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={logInButtonClicked}\n        >\n          Войти\n        </Button>\n      </Grid>\n      <Grid className={classes.spaces} container justifyContent=\"center\">\n        <Typography component=\"div\">Войти с помощью</Typography>\n      </Grid>\n      <Grid container justifyContent=\"center\">\n        <GoogleLogin\n          clientId={'1036988036938-9u2bo3aiqo038ehm8tlb3vl9lq6bm27f.apps.googleusercontent.com'}\n          buttonText=\"Войти через Google\"\n          onSuccess={handleGoogleLoginSuccess}\n          cookiePolicy={'single_host_origin'}\n        />\n      </Grid>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport LoginForm from './LoginForm';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst LoginModal: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} color=\"secondary\" variant=\"outlined\" onClick={handleClickOpen}>\n        Войти\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Войти</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <LoginForm />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Grid container justifyContent=\"center\">\n            <Typography>Вы здесь впервые?</Typography>\n            <Link href=\"/Registration\"> Зарегистрироваться </Link>\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import Avatar from '@mui/material/Avatar';\nimport React from 'react';\n\nimport UseBaseInfo from 'src/Types/UserBaseInfo';\n\ninterface IUserAvatar {\n  userInfo: UseBaseInfo;\n}\n\nconst UserAvatar: React.FC<IUserAvatar> = props => {\n  const picUrl = 'https://localhost:5001/users/';\n  const picPath = props.userInfo?.avatar?.includes('http')\n    ? props.userInfo?.avatar\n    : `${picUrl}${props.userInfo.avatar}`;\n\n  const stringToColor = (string: string) => {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.substr(-2);\n    }\n\n    return color;\n  };\n\n  const stringAvatar = (name: string) => ({\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name[0]}`,\n  });\n\n  return (\n    <React.Fragment>\n      {props.userInfo &&\n        (props.userInfo.avatar ? (\n          <Avatar alt={props.userInfo.userName} src={picPath} />\n        ) : (\n          <Avatar {...stringAvatar(props.userInfo.userName)} />\n        ))}\n    </React.Fragment>\n  );\n};\nexport default UserAvatar;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { Divider, Typography } from '@material-ui/core';\n\nimport { getUserInfo, logOut } from 'src/Requests/AccountRequests';\nimport UserInfo from 'src/Types/UserMainInfo';\n\nimport UserAvatar from './UserAvatar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n    menu: {\n      padding: theme.spacing(1),\n    },\n    item: {\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  }),\n);\n\nconst UserMiniPanel: React.FC = () => {\n  const classes = useStyles();\n\n  const [userInfo, setUserInfo] = useState<UserInfo>();\n  const [open, setOpen] = React.useState<boolean>(false);\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const prevOpen = useRef(open);\n  useEffect(() => {\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  useEffect(() => {\n    let isMounted = true;\n    getUserInformation(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    const keyValue = 'Tab';\n    if (event.key === keyValue) {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const getUserInformation = async (isMounted: boolean) => {\n    const userInformation = await getUserInfo();\n\n    if (isMounted) {\n      setUserInfo(userInformation);\n    }\n  };\n\n  const signOut = async () => {\n    await logOut();\n    sessionStorage.removeItem('signed');\n    document.location.href = `/`;\n  };\n\n  return (\n    <React.Fragment>\n      {userInfo && (\n        <React.Fragment>\n          <Button onClick={handleToggle} ref={anchorRef}>\n            <UserAvatar userInfo={{ userName: userInfo.userName, avatar: userInfo.avatar, role: userInfo.role }} />\n          </Button>\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList\n                  autoFocusItem={open}\n                  id=\"menu-list-grow\"\n                  onKeyDown={handleListKeyDown}\n                  className={classes.menu}\n                >\n                  <Typography align=\"center\" variant=\"h5\" color=\"primary\" component=\"h5\">\n                    {userInfo.userName}\n                  </Typography>\n                  <Typography align=\"center\" variant=\"subtitle2\" component=\"h6\">\n                    {`${userInfo.firstName} ${userInfo.secondName}`}\n                  </Typography>\n                  <Divider />\n                  <MenuItem\n                    className={classes.item}\n                    onClick={() => {\n                      document.location.href = `/purchases`;\n                    }}\n                  >\n                    <Typography variant=\"h5\">Мои заказы</Typography>\n                  </MenuItem>\n                  {(userInfo.role === 'Admin' || userInfo.role === 'Manager') && (\n                    <MenuItem\n                      className={classes.item}\n                      onClick={() => {\n                        document.location.href = `/admin`;\n                      }}\n                    >\n                      <Typography variant=\"h5\">Администрирование</Typography>\n                    </MenuItem>\n                  )}\n                  {(userInfo.role === 'ShopAssistant' || userInfo.role === 'Manager' || userInfo.role === 'Admin') && (\n                    <React.Fragment>\n                      <MenuItem\n                        className={classes.item}\n                        onClick={() => {\n                          document.location.href = `/OutletOrders`;\n                        }}\n                      >\n                        <Typography variant=\"h5\">Заказы</Typography>\n                      </MenuItem>\n                      <MenuItem\n                        className={classes.item}\n                        onClick={() => {\n                          document.location.href = `/OrdersHistory`;\n                        }}\n                      >\n                        <Typography variant=\"h5\">История</Typography>\n                      </MenuItem>\n                    </React.Fragment>\n                  )}\n                  <MenuItem className={classes.item} onClick={signOut}>\n                    <Typography variant=\"h5\">Выйти</Typography>\n                  </MenuItem>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Popper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\nexport default UserMiniPanel;\n","import React, { useEffect, useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { Accordion } from '@material-ui/core';\n\nimport City from 'src/Types/City';\nimport Region from 'src/Types/Region';\nimport { getRegions } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    bar: {\n      backgroundColor: 'white',\n    },\n  }),\n);\n\nconst CityNavigation: React.FC = () => {\n  const classes = useStyles();\n\n  const [city, setCity] = useState<City | null>(null);\n  const [regions, setRegions] = useState<Region[]>([]);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    let isMounted = true;\n    getCity(isMounted);\n    getRegionsInfo(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const getCity = async (isMounted: boolean) => {\n    const cityName = localStorage.getItem('cityName');\n    const cityId = localStorage.getItem('cityId');\n    if (isMounted) {\n      if (cityName && cityId) {\n        setCity({ id: parseInt(cityId), name: cityName });\n      } else {\n        setOpen(true);\n      }\n    }\n  };\n\n  const getRegionsInfo = async (isMounted: boolean) => {\n    const res = await getRegions();\n    if (isMounted) {\n      setRegions(res);\n    }\n  };\n\n  const handleClose = () => {\n    const cityName = localStorage.getItem('cityName');\n    const cityId = localStorage.getItem('cityId');\n    if (!cityName || !cityId) {\n      const region = regions.find(r => r.cities.find(c => c.name === 'Москва'));\n      if (region) {\n        const cityAutoPicked = region.cities.find(c => c.name === 'Москва');\n        if (cityAutoPicked) {\n          localStorage.setItem('cityName', cityAutoPicked.name);\n          localStorage.setItem('cityId', cityAutoPicked.id.toString());\n          setCity(cityAutoPicked);\n        }\n      }\n    }\n    setOpen(false);\n  };\n\n  const onCityClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const id = parseInt(event.currentTarget.id);\n    const reg = regions.find(r => r.cities.find(c => c.id === id));\n    const cit = reg?.cities.find(c => c.id === id);\n    if (cit) {\n      pickCity(cit);\n    }\n  };\n\n  const pickCity = (cit: City) => {\n    localStorage.setItem('cityName', cit.name);\n    localStorage.setItem('cityId', cit.id.toString());\n    setCity(cit);\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" item xs={12} className={classes.bar}>\n      <Button variant=\"text\" size=\"small\" color=\"primary\" onClick={handleClickOpen}>\n        {city?.name ?? 'Выберите город'}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\n        <DialogContent>\n          {regions.map((reg, index) => (\n            <Accordion key={index}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                <Typography>{reg.name}</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid item xs={12}>\n                  <List component=\"nav\">\n                    {reg.cities.map((cit, ind) => (\n                      <React.Fragment key={ind}>\n                        <Divider />\n                        <ListItem>\n                          <Button\n                            id={cit.id.toString()}\n                            onClick={onCityClick}\n                            variant=\"text\"\n                            size=\"small\"\n                            color=\"primary\"\n                          >\n                            {cit.name}\n                          </Button>\n                        </ListItem>\n                      </React.Fragment>\n                    ))}\n                  </List>\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n          ))}\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default CityNavigation;\n","import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DevicesIcon from '@material-ui/icons/Devices';\n\nimport { getRole } from 'src/Requests/AccountRequests';\nimport Roles from 'src/Types/Roles';\n\nimport CategorySelector from './CategorySelector';\nimport LoginModal from './LoginModal';\nimport UserMiniPanel from './UserMiniPanel';\nimport CityNavigation from './CityNavigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.common.white,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    inputRoot: {\n      color: '#000',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    searchIcon: {\n      color: '#999',\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    logoButton: {\n      fontSize: '30px',\n      fontFamily: 'cursive',\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n    logoIcon: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    largeObject: {\n      [theme.breakpoints.down('md')]: {\n        display: 'none',\n      },\n    },\n    smallObject: {\n      [theme.breakpoints.up('lg')]: {\n        display: 'none',\n      },\n    },\n    realElement: {\n      height: 25,\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = () => {\n  const classes = useStyles();\n\n  const [isAuth, setAuth] = useState<boolean>(false);\n  const [loaded, setLoaded] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>('');\n\n  useEffect(() => {\n    let isMounted = true;\n    checkAuth(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const onSearchChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const str = event.target.value as string;\n    setSearch(str);\n  };\n\n  const searchRequest = (event: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      history.pushState({}, 'DTS', `/?search=${search}`);\n      window.location.replace(`/?search=${search}`);\n    }\n  };\n\n  const checkAuth = async (isMounted: boolean) => {\n    const authres = await getRole();\n\n    if (isMounted) {\n      if (authres !== Roles.guest) {\n        sessionStorage.setItem('signed', authres);\n        setAuth(true);\n      } else {\n        setAuth(false);\n      }\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar>\n        <CityNavigation />\n        <Toolbar>\n          <Grid item xs={12} sm={2}>\n            <Button\n              variant=\"text\"\n              size=\"large\"\n              color=\"secondary\"\n              href=\"/\"\n              className={classes.logoButton}\n              startIcon={<DevicesIcon />}\n            >\n              DTS\n            </Button>\n            <Button variant=\"text\" size=\"large\" color=\"secondary\" href=\"/\" className={classes.logoIcon}>\n              <DevicesIcon />\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <CategorySelector />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                onKeyDown={searchRequest}\n                onChange={onSearchChange}\n                value={search}\n                placeholder=\"Поиск\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <ButtonGroup\n              className={classes.smallObject}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"large\"\n              aria-label=\"text primary button group\"\n            >\n              <Button href=\"/wishlist\">\n                <FavoriteBorderIcon />\n              </Button>\n              <Button href=\"/cart\">\n                <ShoppingCartOutlinedIcon />\n              </Button>\n            </ButtonGroup>\n            <ButtonGroup\n              className={classes.largeObject}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"large\"\n              aria-label=\"text primary button group\"\n            >\n              <Button href=\"/wishlist\" startIcon={<FavoriteBorderIcon />}>\n                Избранное\n              </Button>\n              <Button href=\"/cart\" startIcon={<ShoppingCartOutlinedIcon />}>\n                Корзина\n              </Button>\n            </ButtonGroup>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            {loaded && (isAuth ? <UserMiniPanel /> : <LoginModal />)}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <div className={classes.realElement} />\n    </React.Fragment>\n  );\n};\nexport default NavigationBar;\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { Observer } from 'mobx-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    selector: {\n      marginLeft: theme.spacing(6),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n  }),\n);\n\ninterface ISortBar {\n  type: string;\n  onChange: (sortType: string) => void;\n}\n\nconst SortBar: React.FC<ISortBar> = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleSortTypeChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.onChange(event.target.value as string);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\">\n        <Grid className={classes.selector} container alignItems=\"center\" justifyContent=\"flex-start\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"sorting-controlled-open-select-label\">Сортировка</InputLabel>\n            <Observer>\n              {() => (\n                <Select\n                  labelId=\"sorting-controlled-open-select-label\"\n                  id=\"sorting-controlled-open-select\"\n                  open={open}\n                  onClick={handleOpen}\n                  value={props.type}\n                  onChange={handleSortTypeChanged}\n                >\n                  <MenuItem value={'price'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Цена\n                  </MenuItem>\n                  <MenuItem value={'price reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Цена\n                  </MenuItem>\n                  <MenuItem value={'name'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Название\n                  </MenuItem>\n                  <MenuItem value={'name reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Название\n                  </MenuItem>\n                  <MenuItem value={'rating'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Оценка\n                  </MenuItem>\n                  <MenuItem value={'rating reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Оценка\n                  </MenuItem>\n                </Select>\n              )}\n            </Observer>\n          </FormControl>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SortBar;\n","import React, { useState } from 'react';\nimport { Observer } from 'mobx-react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Parameter from 'src/Types/Parameter';\nimport FilterValue from 'src/Types/FilterValue';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      textDecoration: 'underline',\n    },\n    beforeText: {\n      paddingRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IRangeFilter {\n  parameter: Parameter;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst RangeFilter: React.FC<IRangeFilter> = props => {\n  const classes = useStyles();\n  const [minValue, setMinValue] = useState<string>('');\n  const [maxValue, setMaxValue] = useState<string>('');\n  const paramValue = props.pickedParams.find(i => i.id === props.parameter.id);\n\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    if (paramValue) {\n      paramValue.minValue = event.target.value as string;\n    }\n\n    setMinValue(event.target.value as string);\n    props.setParameter({\n      id: props.parameter.id,\n      minValue: event.target.value as string,\n      maxValue: paramValue?.maxValue,\n      range: true,\n    });\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    if (paramValue) {\n      paramValue.maxValue = event.target.value as string;\n    }\n\n    setMaxValue(event.target.value as string);\n    props.setParameter({\n      id: props.parameter.id,\n      minValue: paramValue?.minValue ?? minValue,\n      maxValue: event.target.value as string,\n      range: true,\n    });\n  };\n\n  return (\n    <Grid item container justifyContent=\"space-evenly\" alignItems=\"flex-start\" direction=\"column\" xs={12}>\n      <Typography className={classes.heading}>{props.parameter.name}:</Typography>\n      <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" direction=\"row\" xs={12}>\n        <Typography className={classes.beforeText} variant=\"body1\">\n          От:\n        </Typography>\n        <Observer>\n          {() => (\n            <TextField\n              id=\"minPrice\"\n              variant=\"outlined\"\n              placeholder={props.parameter.minValue.toString()}\n              size=\"small\"\n              type=\"number\"\n              value={paramValue?.minValue ?? minValue}\n              onChange={handleMinChange}\n            />\n          )}\n        </Observer>\n      </Grid>\n      <Grid item container justifyContent=\"flex-start\" alignItems=\"center\" direction=\"row\" xs={12}>\n        <Typography className={classes.beforeText} variant=\"body1\">\n          До:\n        </Typography>\n        <Observer>\n          {() => (\n            <TextField\n              id=\"minPrice\"\n              variant=\"outlined\"\n              placeholder={props.parameter.maxValue.toString()}\n              size=\"small\"\n              type=\"number\"\n              value={paramValue?.maxValue ?? maxValue}\n              onChange={handleMaxChange}\n            />\n          )}\n        </Observer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RangeFilter;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Parameter from 'src/Types/Parameter';\nimport FilterValue from 'src/Types/FilterValue';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      textDecoration: 'underline',\n    },\n    beforeText: {\n      paddingRight: theme.spacing(1),\n    },\n    checkboxField: {\n      maxHeight: 130,\n      overflow: 'auto',\n    },\n  }),\n);\n\ninterface IListFilter {\n  parameter: Parameter;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst ListFilter: React.FC<IListFilter> = props => {\n  const classes = useStyles();\n\n  const [picked, setPicked] = useState<boolean[]>([]);\n  const getChecked = (isMounted: boolean) => {\n    const value = props.parameter.parameterValues.map(p =>\n      props.pickedParams.find(pic => pic.id === props.parameter.id && pic.itemIds?.find(i => i === p.id))\n        ? true\n        : false,\n    );\n\n    if (isMounted) {\n      setPicked(value);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getChecked(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const onCheckboxChanged = (event: React.ChangeEvent, checked: boolean) => {\n    const pickedValues: string[] = [];\n    for (let i = 0; i < props.parameter.parameterValues.length; i++) {\n      if (picked[i]) {\n        pickedValues.push(props.parameter.parameterValues[i].id);\n      }\n    }\n\n    const ind = props.parameter.parameterValues.findIndex(p => p.id === event.currentTarget.id);\n    if (checked) {\n      pickedValues.push(event.currentTarget.id);\n    } else {\n      const index = pickedValues.findIndex(v => v === event.currentTarget.id);\n      if (index !== -1) {\n        pickedValues.splice(index, 1);\n      }\n    }\n\n    picked[ind] = checked;\n    setPicked([...picked]);\n    props.setParameter({ id: props.parameter.id, itemIds: pickedValues, range: false });\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Typography className={classes.heading}>{props.parameter.name}:</Typography>\n      <Grid item xs={12} className={classes.checkboxField}>\n        {props.parameter.parameterValues.map(\n          (val, index) =>\n            picked[index] !== undefined && (\n              <FormControlLabel\n                key={index}\n                control={<Checkbox color=\"primary\" onChange={onCheckboxChanged} checked={picked[index]} id={val.id} />}\n                label={val.value}\n              />\n            ),\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ListFilter;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { Observer } from 'mobx-react';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport FilterValue from 'src/Types/FilterValue';\n\nimport RangeFilter from './RangeFilter';\nimport ListFilter from './ListFilter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      marginLeft: theme.spacing(1),\n      fontSize: 1.1 * theme.typography.fontSize,\n    },\n  }),\n);\n\ninterface IFilterBlock {\n  parameterBlock: ParameterBlock;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst FilterBlock: React.FC<IFilterBlock> = props => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Accordion variant=\"outlined\">\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Typography className={classes.heading}>{props.parameterBlock.name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Grid item xs={12}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              {props.parameterBlock.parameters.map((val, index) => (\n                <React.Fragment key={index}>\n                  <Divider />\n                  <ListItem>\n                    {val.range ? (\n                      <Observer>\n                        {() => (\n                          <RangeFilter\n                            pickedParams={props.pickedParams}\n                            setParameter={props.setParameter}\n                            parameter={val}\n                          />\n                        )}\n                      </Observer>\n                    ) : (\n                      <Observer>\n                        {() => (\n                          <ListFilter\n                            pickedParams={props.pickedParams}\n                            setParameter={props.setParameter}\n                            parameter={val}\n                          />\n                        )}\n                      </Observer>\n                    )}\n                  </ListItem>\n                </React.Fragment>\n              ))}\n            </List>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nexport default FilterBlock;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Observer } from 'mobx-react';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport FilterValue from 'src/Types/FilterValue';\n\nimport FilterBlock from './FilterBlock';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rightTextField: {\n      marginLeft: theme.spacing(1),\n    },\n    leftTextField: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IFilterBar {\n  priceRange: number[];\n  pickedPrices: number[];\n  parameterBlocks: ParameterBlock[];\n  pickedParams: FilterValue[];\n  applyChanges: () => void;\n  setPrices: (i: number, newValue: unknown) => void;\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst FilterBar: React.FC<IFilterBar> = props => {\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(0, event.target.value);\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(1, event.target.value);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Card variant=\"outlined\">\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem>\n            <Typography variant=\"h5\" component=\"h5\">\n              Фильтры\n            </Typography>\n          </ListItem>\n          <Divider variant=\"middle\" />\n          <ListItem>\n            <Typography id=\"price-slider\" gutterBottom>\n              Цена\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"minPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[0].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.leftTextField}\n                  value={props.pickedPrices[0]}\n                  onChange={handleMinChange}\n                  InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">₽</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"maxPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[1].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.rightTextField}\n                  value={props.pickedPrices[1]}\n                  onChange={handleMaxChange}\n                  InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">₽</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n          </ListItem>\n          <Observer>\n            {() => (\n              <React.Fragment>\n                {props.parameterBlocks &&\n                  props.parameterBlocks.map((val, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <FilterBlock\n                          parameterBlock={val}\n                          setParameter={props.setParameter}\n                          pickedParams={props.pickedParams}\n                        />\n                      </ListItem>\n                    </React.Fragment>\n                  ))}\n              </React.Fragment>\n            )}\n          </Observer>\n          <Divider variant=\"middle\" />\n          <ListItem>\n            <Grid container justifyContent=\"center\">\n              <Button variant=\"contained\" color=\"primary\" onClick={props.applyChanges}>\n                Применить\n              </Button>\n            </Grid>\n          </ListItem>\n        </List>\n      </Card>\n    </Grid>\n  );\n};\nexport default FilterBar;\n","import FilterValue from 'src/Types/FilterValue';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport Product from 'src/Types/Product';\n\ninterface ISettings {\n  currentPage: number;\n  sortType: string;\n  pickedPrice: number[];\n  productList: Product[];\n  filters: ParameterBlock[];\n  lastPage: number;\n  priceRange: number[];\n  pickedParams: FilterValue[];\n\n  handlePageChange(event: React.ChangeEvent<unknown>, value: number): void;\n  setPage(value: number): void;\n  setSortType(type: string): void;\n  filtersApplied(): void;\n  setParameterValue(newValue: FilterValue): void;\n  setInfo(prodList: unknown, maxPage: number, minPrice: number, maxPrice: number, filters: ParameterBlock[]): void;\n  checkPickedPrices(i: number, newValue: unknown): void;\n  setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown): void;\n  setFilters(params: URLSearchParams): void;\n  isItNumber(value: unknown): boolean;\n  createURL(): void;\n}\n\nfunction createProdParams(getItems: () => void): ISettings {\n  const settings: ISettings = {\n    currentPage: 1,\n    sortType: 'price',\n    pickedPrice: [0, 0],\n    productList: [],\n    filters: [],\n    lastPage: 0,\n    priceRange: [0, 0],\n    pickedParams: [],\n\n    handlePageChange(event: React.ChangeEvent<unknown>, value: number) {\n      this.setPage(value);\n    },\n\n    setPage(value: number) {\n      if (value <= this.lastPage && value > 0 && value !== 1) {\n        this.currentPage = value;\n      } else {\n        this.currentPage = 1;\n      }\n      this.createURL();\n    },\n\n    setSortType(type: string) {\n      if (this.sortType !== type) {\n        this.setPage(1);\n        this.sortType = type;\n        this.createURL();\n      }\n    },\n\n    filtersApplied() {\n      this.setPage(1);\n      this.createURL();\n    },\n\n    setInfo(prodList: Product[], maxPage: number, minPrice: number, maxPrice: number, filters: ParameterBlock[]) {\n      this.productList = prodList;\n      this.filters = filters;\n      this.lastPage = maxPage;\n      this.priceRange = [minPrice, maxPrice];\n      if (this.pickedPrice[0] === 0) {\n        this.pickedPrice[0] = minPrice;\n      }\n      if (this.pickedPrice[1] === 0) {\n        this.pickedPrice[1] = maxPrice;\n      }\n    },\n\n    checkPickedPrices(i: number, newValue: unknown) {\n      const regexFull = /^\\d*$/;\n      const regexPunct = /\\d+\\.\\d+/;\n      if ((regexFull.test(newValue as string) || regexPunct.test(newValue as string)) && (i === 0 || i === 1)) {\n        if ((newValue as string) === '') {\n          this.pickedPrice[i] = 0;\n        } else {\n          this.pickedPrice[i] = newValue as number;\n        }\n      }\n    },\n\n    setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown) {\n      if (this.isItNumber(minPrice)) {\n        this.checkPickedPrices(0, minPrice as number);\n      }\n      if (this.isItNumber(maxPrice)) {\n        this.checkPickedPrices(1, maxPrice as number);\n      }\n      if (sort !== null && sort !== this.sortType) {\n        this.sortType = sort as string;\n      }\n      if (this.isItNumber(currPage)) {\n        this.setPage(parseInt(currPage as string));\n      }\n      this.createURL();\n    },\n\n    isItNumber(value: unknown): boolean {\n      if (!isNaN(parseInt(value as string))) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    setParameterValue(newValue: FilterValue) {\n      const param = this.pickedParams.find(f => f.id === newValue.id);\n      if (param) {\n        param.itemIds = newValue.itemIds;\n        param.maxValue = newValue.maxValue;\n        param.minValue = newValue.minValue;\n      } else {\n        this.pickedParams.push(newValue);\n      }\n    },\n\n    setFilters(params: URLSearchParams) {\n      this.pickedParams.splice(0, this.pickedParams.length);\n      const keys = params.keys();\n      let key = keys.next();\n      let value;\n      while (!key.done) {\n        value = params.get(key.value as string)?.split(',');\n        if (value && value.length > 0) {\n          if (!isNaN(parseInt(value[0] as string))) {\n            this.pickedParams.push({ id: key.value as string, range: true, minValue: value[0], maxValue: value[1] });\n          } else {\n            this.pickedParams.push({ id: key.value as string, range: false, itemIds: value });\n          }\n        }\n\n        key = keys.next();\n      }\n    },\n\n    createURL() {\n      const params = new URLSearchParams(location.search);\n      if (this.currentPage === 1) {\n        params.delete('page');\n      } else {\n        params.set('page', this.currentPage.toString());\n      }\n      if (this.sortType === 'price') {\n        params.delete('sort');\n      } else {\n        params.set('sort', this.sortType);\n      }\n      if (this.pickedPrice[0] === this.priceRange[0] && this.pickedPrice[1] === this.priceRange[1]) {\n        params.delete('minPrice');\n        params.delete('maxPrice');\n      } else {\n        params.set('minPrice', this.pickedPrice[0].toString());\n        params.set('maxPrice', this.pickedPrice[1].toString());\n      }\n\n      for (const filter of this.pickedParams) {\n        if (filter.range) {\n          if (filter.minValue || filter.maxValue) {\n            if (!filter.minValue) {\n              filter.minValue = '0';\n            }\n            if (!filter.maxValue) {\n              filter.maxValue = '0';\n            }\n            params.set(filter.id, `${filter.minValue},${filter.maxValue}`);\n          }\n        } else {\n          if (filter.itemIds && filter.itemIds.length > 0) {\n            params.set(filter.id, filter.itemIds?.join(','));\n          }\n        }\n      }\n\n      history.pushState({}, 'Products', `?${params.toString()}`);\n      getItems();\n    },\n  };\n\n  return settings;\n}\n\nexport { createProdParams };\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProductsOfCategory } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\ninterface ICategoryPage {\n  categoryName: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryWord: {\n      fontWeight: 600,\n      padding: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst CategoryPage: React.FC = () => {\n  const params = useParams();\n\n  const object = createProdParams(async () => {\n    const res = await getProductsOfCategory(\n      params?.categoryName as string,\n      data.currentPage,\n      10,\n      data.sortType,\n      data.pickedPrice,\n      data.pickedParams,\n    );\n\n    data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice, res.container.parameterBlocks);\n  });\n  const data = useLocalObservable(() => object);\n\n  const getProducts = async (isMounted: boolean) => {\n    const qParams = new URLSearchParams(location.search);\n    data.setParams(qParams.get('page'), qParams.get('minPrice'), qParams.get('maxPrice'), qParams.get('sort'));\n    data.setFilters(qParams);\n\n    const res = await getProductsOfCategory(\n      params?.categoryName as string,\n      data.currentPage,\n      10,\n      data.sortType,\n      data.pickedPrice,\n      data.pickedParams,\n    );\n    if (isMounted !== false && res.container !== undefined) {\n      data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice, res.container.parameterBlocks);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProducts(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" alignItems=\"center\" container>\n            <Grid>\n              <Typography className={classes.categoryWord} variant=\"h5\" component=\"h5\">\n                {params.categoryName}\n              </Typography>\n            </Grid>\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      parameterBlocks={data.filters}\n                      pickedParams={data.pickedParams}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                      setParameter={data.setParameterValue}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justifyContent=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryPage;\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProducts } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductsPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getProducts(data.currentPage, 10, data.sortType, data.pickedPrice);\n    if (isMounted) {\n      const params = new URLSearchParams(location.search);\n      data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice, []);\n      data.setParams(params.get('page'), params.get('minPrice'), params.get('maxPrice'), params.get('sort'));\n    }\n  };\n\n  const object = createProdParams(async () => {\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\n    data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice, []);\n  });\n\n  const data = useLocalObservable(() => object);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={12} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justifyContent=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductsPage;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Outlet from 'src/Types/Outlet';\n\ninterface IOutletInfo {\n  outlet: Outlet;\n}\n\nconst OutletInfo: React.FC<IOutletInfo> = props => (\n  <Grid item xs={12} direction=\"column\" justifyContent=\"space-evenly\" alignItems=\"stretch\" container>\n    <Typography variant=\"h6\" color=\"primary\">\n      {props.outlet.name}\n    </Typography>\n    <Typography>\n      {`${props.outlet.region.name}, ${props.outlet.city.name}, ${props.outlet.streetName}, ${props.outlet.building}`}\n    </Typography>\n    {props.outlet.userNote && <Typography color=\"textSecondary\">{props.outlet.userNote}</Typography>}\n  </Grid>\n);\n\nexport default OutletInfo;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport OutletProduct from 'src/Types/OutletProduct';\n\nimport OutletInfo from './OutletInfo';\n\ninterface IOutletCount {\n  outlet: OutletProduct;\n}\n\nconst OutletCount: React.FC<IOutletCount> = props => (\n  <Grid item xs={12}>\n    <Grid direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\" item xs={12} container>\n      <Grid item xs={12} sm={10}>\n        <OutletInfo outlet={props.outlet.outlet} />\n      </Grid>\n      <Typography>{props.outlet.count}</Typography>\n    </Grid>\n  </Grid>\n);\n\nexport default OutletCount;\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport { Typography } from '@material-ui/core';\n\nimport OutletProduct from 'src/Types/OutletProduct';\n\nimport OutletCount from './OutletCount';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    bar: {\n      backgroundColor: 'white',\n    },\n    dialog: {\n      minWidth: 480,\n    },\n  }),\n);\n\ninterface ICityNavigation {\n  outlets?: OutletProduct[];\n  isInWarehouse?: boolean;\n}\n\nconst CityNavigation: React.FC<ICityNavigation> = props => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Grid direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"stretch\" item xs={12} container>\n        <Button variant=\"text\" size=\"small\" color=\"primary\" onClick={handleClickOpen}>\n          В наличии в магазинах: {props.outlets?.length}\n        </Button>\n        <Typography>На складе: {props.isInWarehouse ? 'есть' : 'нет'}</Typography>\n      </Grid>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className={classes.dialog}\n      >\n        <DialogTitle id=\"alert-dialog-title\">В магазинах:</DialogTitle>\n        <DialogContent className={classes.dialog}>\n          {props.outlets?.map((o, index) => (\n            <OutletCount outlet={o} key={index} />\n          ))}\n        </DialogContent>\n      </Dialog>\n    </Grid>\n  );\n};\nexport default CityNavigation;\n","import React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport { addToCart, addToWishlist } from 'src/Requests/PostRequests';\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\nimport OutletProduct from 'src/Types/OutletProduct';\n\nimport UnitProducts from './UnitProducts';\n\ninterface IPriceLikeBuyCard {\n  price?: number;\n  id?: string;\n  rating?: number;\n  priceWithoutDiscount?: number;\n  onBuy?: () => void;\n  onWished?: () => void;\n  inCart?: boolean;\n  inWishlist?: boolean;\n  outlets?: OutletProduct[];\n  isInWarehouse?: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      margin: theme.spacing(1),\n    },\n    grid: {\n      minHeight: 80,\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(2),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    thinbold: {\n      fontWeight: 500,\n    },\n    crossed: {\n      textDecoration: 'line-through',\n    },\n    toLeft: {\n      paddingLeft: theme.spacing(1),\n    },\n    rating: {\n      margin: theme.spacing(2),\n    },\n    ratingNum: {\n      marginLeft: theme.spacing(2),\n    },\n  }),\n);\n\nconst PriceLikeBuyCard: React.FC<IPriceLikeBuyCard> = props => {\n  const checkInCart = () => {\n    const role = sessionStorage.getItem('signed');\n    if (!role) {\n      const cart = localStorage.getItem('cartItems');\n      if (cart) {\n        return cart.includes(props.id as string);\n      }\n    }\n    return props.inCart;\n  };\n\n  const [inCart, setInCart] = useState(checkInCart());\n  const [inWishlist, setInWishlist] = useState(props.inWishlist);\n\n  const addProductToCart = async () => {\n    const role = sessionStorage.getItem('signed');\n\n    if (role) {\n      const response = await addToCart(props.id as string, 0);\n      if (response !== null) {\n        setInCart(true);\n        if (props.onBuy) {\n          props.onBuy();\n        }\n      }\n    } else {\n      const items = localStorage.getItem('cartItems');\n      if (items) {\n        if (items.includes(props.id as string)) {\n          return;\n        }\n        localStorage.setItem('cartItems', `${items},${props.id}`);\n      } else {\n        localStorage.setItem('cartItems', props.id as string);\n      }\n      setInCart(true);\n    }\n  };\n\n  const addProductToWishlist = async () => {\n    const response = await addToWishlist(props.id as string);\n    if (response !== null) {\n      setInWishlist(true);\n      if (props.onWished) {\n        props.onWished();\n      }\n    }\n  };\n\n  const deleteProductFromWishlist = async () => {\n    const response = await deleteFromWishlist(props.id as string);\n    if (response === 1) {\n      setInWishlist(false);\n      if (props.onWished) {\n        props.onWished();\n      }\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid justifyContent=\"center\" alignItems=\"center\" container>\n        <Grid className={classes.grid} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n          <Grid item container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" xs={12} sm={6}>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\n              Цена:\n            </Typography>\n            {props.priceWithoutDiscount && props.price && props.priceWithoutDiscount > props.price ? (\n              <Grid container justifyContent=\"center\" direction=\"row\">\n                <Typography align=\"center\" color=\"primary\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n                  {props.price}₽\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  className={`${classes.crossed} ${classes.thinbold} ${classes.toLeft}`}\n                >\n                  {props.priceWithoutDiscount}\n                </Typography>\n              </Grid>\n            ) : (\n              <Typography align=\"center\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n                {props.price}₽\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={12} sm={6} container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={3} container justifyContent=\"flex-start\">\n              {inWishlist ? (\n                <IconButton aria-label=\"favourite\" color=\"primary\" onClick={deleteProductFromWishlist}>\n                  <FavoriteIcon />\n                </IconButton>\n              ) : (\n                <IconButton aria-label=\"favourite\" onClick={addProductToWishlist}>\n                  <FavoriteIcon />\n                </IconButton>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              {inCart ? (\n                <Button color=\"primary\" variant=\"outlined\" href=\"/cart\">\n                  Корзина\n                </Button>\n              ) : (\n                <Button color=\"primary\" variant=\"contained\" onClick={addProductToCart}>\n                  Купить\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          item\n          xs={12}\n          justifyContent=\"center\"\n          alignContent=\"center\"\n          direction=\"row\"\n          className={classes.rating}\n        >\n          <Rating className={classes.rating} name=\"read-only\" value={props.rating} readOnly />\n          <Typography className={`${classes.bold} ${classes.rating}`}>{props.rating}</Typography>\n        </Grid>\n        <UnitProducts outlets={props.outlets} isInWarehouse={props.isInWarehouse} />\n      </Grid>\n    </Card>\n  );\n};\n\nexport default PriceLikeBuyCard;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport PriceLikeBuyCard from 'src/Components/Parts/PriceLikeBuyCard';\nimport ParameterBlock from 'src/Types/ParameterBlock';\n\ninterface IDetailedProductCard {\n  product?: Product;\n  paramBlocks?: ParameterBlock[];\n  image?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      maxWidth: 260,\n      maxHeight: 400,\n      margin: theme.spacing(2),\n    },\n    card: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst DetailedProductCard: React.FC<IDetailedProductCard> = props => {\n  const classes = useStyles();\n  const paramString = (): string => {\n    let string = '';\n    props.paramBlocks?.map(block =>\n      block.parameters.map(param => {\n        if (param.important && string.length < 110) {\n          string += `${param.name}:${param.value}, `;\n        }\n      }),\n    );\n    return `${string.substring(0, string.length - 2)}...`;\n  };\n\n  const strinTechParams = paramString();\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <Grid direction=\"row\" justifyContent=\"center\" container>\n        <Grid item xs={12} sm={6} direction=\"column\" justifyContent=\"center\" alignItems=\"center\" container>\n          <img className={classes.image} src={props.image} />\n          Артикул: {props.product?.vendorCode}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" component=\"h6\">\n            {strinTechParams}\n          </Typography>\n          <PriceLikeBuyCard\n            price={props.product?.price}\n            priceWithoutDiscount={props.product?.priceWithoutDiscount}\n            rating={props.product?.mark}\n            id={props.product?.id}\n            inCart={props.product?.inCart}\n            inWishlist={props.product?.inWishlist}\n            outlets={props.product?.outletProducts}\n            isInWarehouse={props.product?.isInWarehouse}\n          />\n        </Grid>\n      </Grid>\n      <Grid direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container />\n    </Card>\n  );\n};\n\nexport default DetailedProductCard;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IProductDescription {\n  productName: string;\n  productDescription: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    descriptionText: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst ProductDescription: React.FC<IProductDescription> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"space-around\" item xs={12}>\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Описание ${props.productName}`}\n      </Typography>\n      <Grid className={classes.descriptionText} container justifyContent=\"flex-start\">\n        <Typography variant=\"body2\">{props.productDescription}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductDescription;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\n\ninterface IProductParameter {\n  param: Parameter;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    line: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 0, 1, 0),\n    },\n  }),\n);\n\nconst ProductParameter: React.FC<IProductParameter> = props => {\n  const classes = useStyles();\n  return (\n    <Grid direction=\"row\" container alignItems=\"center\" justifyContent=\"center\" className={classes.line}>\n      <Grid item xs={12} sm={6}>\n        <Typography align=\"center\" variant=\"body2\">\n          {props.param.name}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography align=\"center\" variant=\"body2\">\n          {props.param.value}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductParameter;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport ProductParameter from 'src/Components/Parts/ProductParameter';\n\ninterface IProductParams {\n  productName: string;\n  params: ParameterBlock[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    line: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductParams: React.FC<IProductParams> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"space-around\" item xs={12}>\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Характеристики ${props.productName}`}\n      </Typography>\n      {props.params?.map((block, index) => (\n        <Grid direction=\"column\" alignItems=\"center\" container key={index}>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            container\n            alignItems=\"center\"\n            justifyContent=\"space-evenly\"\n            className={classes.line}\n          >\n            {block.name}\n          </Grid>\n          {block.parameters.map((param, key) => (\n            <ProductParameter param={param} key={key} />\n          ))}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ProductParams;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\nimport { Button } from '@material-ui/core';\n\nimport Review from 'src/Types/Review';\nimport { banReview } from 'src/Requests/PostRequests';\n\ninterface IProductReviews {\n  review: Review;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    userName: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    reviewHeader: {\n      padding: theme.spacing(1),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    commentSection: {\n      minHeight: '6em',\n      padding: theme.spacing(2),\n    },\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n  }),\n);\n\nconst ReviewBlock: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n\n  const role = sessionStorage.getItem('signed');\n  const showBan = role && (role === 'Admin' || role === 'Manager');\n\n  const [show, setShow] = useState(true);\n\n  const ban = async () => {\n    const res = await banReview(props.review.id);\n    if (res > 0) {\n      setShow(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {show && (\n        <Card variant=\"outlined\" className={classes.root}>\n          <Grid item xs={12} container direction=\"column\" alignItems=\"flex-start\" justifyContent=\"flex-start\">\n            <Grid\n              className={classes.reviewHeader}\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"flex-start\"\n            >\n              <Grid item xs={12} sm={showBan ? 4 : 8}>\n                <Typography align=\"center\" className={classes.userName}>\n                  {props.review.userName}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <Rating value={props.review.mark} readOnly />\n              </Grid>\n              <Grid item xs={12} sm={4} container justifyContent=\"flex-end\">\n                {showBan && (\n                  <Button variant=\"outlined\" onClick={ban}>\n                    Заблокировать\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n            <Typography className={classes.commentSection}>{props.review.description}</Typography>\n          </Grid>\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default ReviewBlock;\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Review from 'src/Types/Review';\nimport { createReview } from 'src/Requests/PostRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n    cardPart: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateReview {\n  mark: number;\n  description: string;\n}\n\ninterface IReviewForm {\n  productId: string;\n  addReview: (newReview: Review) => void;\n}\n\nconst ReviewForm: React.FC<IReviewForm> = props => {\n  const classes = useStyles();\n\n  const [review, setReview] = useState<ICreateReview>({ description: '', mark: 5 });\n  const handleMark = (event: unknown, value: unknown) => {\n    setReview({ description: review.description, mark: value as number });\n  };\n  const handleMessage = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const value = event.target.value as string;\n    setReview({ description: value, mark: review.mark });\n  };\n\n  const submit = async () => {\n    const result = await createReview(props.productId, review.mark, review.description);\n    if (result !== null) {\n      props.addReview({ id: '', description: review.description, mark: review.mark, userName: 'Я' });\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Grid className={classes.cardPart} container direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <Rating value={review.mark} onChange={handleMark} />\n        </Grid>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Отзыв\"\n          multiline\n          rows={4}\n          placeholder=\"Оставьте свой отзыв здесь\"\n          variant=\"outlined\"\n          value={review.description}\n          onChange={handleMessage}\n          fullWidth\n        />\n        <Grid className={classes.cardPart} container alignItems=\"center\" justifyContent=\"flex-end\">\n          <Button color=\"primary\" variant=\"contained\" onClick={submit}>\n            Отправить\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewForm;\n","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ReviewBlock from 'src/Components/Parts/ReviewBlock';\nimport Review from 'src/Types/Review';\nimport ReviewForm from 'src/Components/Parts/ReviewForm';\nimport { getReviews } from 'src/Requests/GetRequests';\n\ninterface IProductReviews {\n  productName: string;\n  productId: string;\n  reviewed: boolean;\n  saveReviewed: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductReviews: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n\n  const getProductReviews = async (isMounted: boolean) => {\n    const res = await getReviews(props.productId);\n    if (isMounted !== false) {\n      setReviews(res as Review[]);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProductReviews(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const role = sessionStorage.getItem('signed');\n  const [reviewed, setReviewed] = useState<boolean>(props.reviewed);\n  const [reviews, setReviews] = useState<Review[]>([]);\n\n  const addReview = (newReview: Review): void => {\n    const newVar: Review[] = [];\n    while (reviews.length > 0) {\n      newVar.push(reviews.pop() as Review);\n    }\n    newVar.push(newReview);\n    setReviews(newVar.reverse());\n\n    setReviewed(true);\n    props.saveReviewed();\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justifyContent=\"space-around\" item xs={12}>\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Отзывы на ${props.productName}`}\n      </Typography>\n      <Grid item xs={12} direction=\"column\" container justifyContent=\"center\">\n        {role && !reviewed && <ReviewForm addReview={addReview} productId={props.productId} />}\n        {reviews?.map((review, index) => (\n          <ReviewBlock review={review} key={index} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductReviews;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport ProductDescription from 'src/Components/Parts/ProductDescription';\nimport ProductParams from 'src/Components/Parts/ProductParams';\nimport ProductReviews from 'src/Components/Parts/ProductReviews';\nimport ParameterBlock from 'src/Types/ParameterBlock';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: unknown;\n  value: unknown;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nfunction a11yProps(index: unknown) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\ninterface IVerticalTabs {\n  product: Product;\n  paramBlocks: ParameterBlock[];\n}\n\nconst ProductInfoPanel = (props: IVerticalTabs) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: unknown, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const saveReviewed = () => {\n    props.product.reviewed = true;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n        <Grid className={classes.tabs} item xs={12} sm={3}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs\"\n            textColor=\"primary\"\n          >\n            <Tab label=\"Описание\" {...a11yProps(0)} />\n            <Tab label=\"Характеристики\" {...a11yProps(1)} />\n            <Tab label=\"Отзывы\" {...a11yProps(2)} />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <TabPanel value={value} index={0}>\n            <ProductDescription productName={props.product.name} productDescription={props.product.description} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <ProductParams productName={props.product.name} params={props.paramBlocks} />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <ProductReviews\n              productName={props.product.name}\n              productId={props.product.id}\n              reviewed={props.product.reviewed}\n              saveReviewed={saveReviewed}\n            />\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProductInfoPanel;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from 'react-router-dom';\nimport { Card, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getParameters, getProduct } from 'src/Requests/GetRequests';\nimport Product from 'src/Types/Product';\nimport DetailedProductCard from 'src/Components/Parts/DetailedProductCard';\nimport ProductInfoPanel from 'src/Components/Parts/ProductInfoPanel';\nimport ParameterBlock from 'src/Types/ParameterBlock';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 2 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductPage: React.FC = () => {\n  const params = useParams();\n  const classes = useStyles();\n\n  const [product, setProduct] = useState<Product>();\n  const [parameters, setParameters] = useState<ParameterBlock[]>();\n  const [picture, setPicture] = useState<string>('');\n  const picUrl = 'https://localhost:5001/products/';\n\n  useEffect(() => {\n    let isMounted = true;\n    const getProd = async () => {\n      const res = await getProduct(params?.productID as string);\n      const param = await getParameters(params?.productID as string);\n\n      if (isMounted) {\n        setProduct(res);\n        setParameters(param);\n        const img = new Image();\n        img.src = `${picUrl}${res.picURL}`;\n\n        if (isMounted) {\n          img.onload = () => setPicture(`${picUrl}${res.picURL}`);\n          img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n        }\n      }\n    };\n    getProd();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [params.productID]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"column\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Card>\n            <Grid justifyContent=\"space-evenly\" container>\n              <Typography className={classes.prodName} variant=\"overline\" component=\"h4\">\n                {product?.name}\n              </Typography>\n            </Grid>\n            {product && parameters && (\n              <DetailedProductCard product={product} paramBlocks={parameters} image={picture} />\n            )}\n            {product && parameters && <ProductInfoPanel product={product} paramBlocks={parameters} />}\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductPage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, TextField } from '@material-ui/core';\n\nimport { registrationRequest, regViaGoogleRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n    button: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n);\n\ninterface IRegistrationForm {\n  regData?: Register;\n}\n\nconst RegistrationForm: React.FC<IRegistrationForm> = props => {\n  const classes = useStyles();\n\n  const newObject = (oldData: Register): Register => ({\n    login: oldData.login,\n    password: oldData.password,\n    firstName: oldData.firstName,\n    secondName: oldData.secondName,\n    phoneNumber: oldData.phoneNumber,\n    token: oldData.token,\n    email: oldData.email,\n  });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const [rerendered, setRererendered] = React.useState(false);\n  const [regData, setRegData] = React.useState<Register>({\n    login: '',\n    password: '',\n    firstName: '',\n    secondName: '',\n    email: '',\n    phoneNumber: '',\n    token: '',\n  });\n\n  if (props.regData && !rerendered) {\n    setRegData(props.regData);\n    setRererendered(true);\n  }\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.login = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.password = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleEMailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.email = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.firstName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.secondName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.phoneNumber = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const registerButtonClicked = async () => {\n    if (!props.regData?.token) {\n      redirectTo(await registrationRequest(regData));\n    } else {\n      redirectTo(await regViaGoogleRequest(regData));\n    }\n  };\n\n  const redirectTo = (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={regData.login}\n        onChange={handleLoginChange}\n        label=\"Логин\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={regData.password}\n        onChange={handlePasswordChange}\n        label=\"Пароль\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"email-tf\"\n        className={classes.spaces}\n        value={regData.email}\n        onChange={handleEMailChange}\n        label=\"Email\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"first-name-tf\"\n        className={classes.spaces}\n        value={regData.firstName}\n        onChange={handleFirstNameChange}\n        label=\"Имя\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"second-name-tf\"\n        className={classes.spaces}\n        value={regData.secondName}\n        onChange={handleSecondNameChange}\n        label=\"Фамилия\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"phone-tf\"\n        className={classes.spaces}\n        value={regData.phoneNumber}\n        onChange={handlePhoneChange}\n        label=\"Номер телефона\"\n        variant=\"outlined\"\n      />\n      <Button\n        type=\"submit\"\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={registerButtonClicked}\n      >\n        Зарегистрироваться\n      </Button>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { Typography, Card, Grid } from '@material-ui/core';\n\nimport RegistrationForm from 'src/Components/Parts/RegistrationForm';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport Register from 'src/Types/Register';\n\ninterface IRegistration {\n  regData?: Register;\n}\n\nconst RegistrationPage: React.FC<IRegistration> = () => (\n  <React.Fragment>\n    <script src=\"https://apis.google.com/js/platform.js\" async defer />\n    <NavigationBar />\n    <Grid container justifyContent=\"center\" alignItems=\"center\">\n      <Grid xs={12} sm={9} item direction=\"column\" justifyContent=\"center\" alignItems=\"center\" container>\n        <Card style={{ padding: '35px' }} variant=\"outlined\">\n          <Typography variant=\"h4\" style={{ paddingBottom: '10px' }}>\n            Регистрация\n          </Typography>\n          <RegistrationForm regData={history.state} />\n        </Card>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n);\n\nexport default RegistrationPage;\n","import axios from 'axios';\n\nimport ParameterCreateRequest from 'src/Types/ParameterCreateRequest';\n\nasync function put<T>(url: string, data: T) {\n  return (await axios.put(url, data)).data;\n}\n\nasync function updateCartItem(count: number, productId: string) {\n  return await put(`/api/CustomerLists/cart/`, { count: count, productId: productId });\n}\n\nasync function updateCommonCategory(id: string, name: string, description: string) {\n  const data = { id, name, description };\n  return await put(`/api/CommonCategory/`, data);\n}\n\nasync function updateParameterBlock(id: string, name: string) {\n  const data = { id, name };\n  return await put(`/api/ParameterBlock/`, data);\n}\n\nasync function updateCategory(\n  id: string,\n  name: string,\n  description: string,\n  deliveryPrice: number,\n  commonCategoryId: string,\n) {\n  const data = { id, name, description, deliveryPrice, commonCategoryId };\n  return await put(`/api/Category/`, data);\n}\n\nasync function updateParameter(\n  id: string,\n  name: string,\n  important: boolean,\n  range: boolean,\n  minValue: number,\n  maxValue: number,\n  parameterBlockId: string,\n) {\n  const data = { id, name, important, range, minValue, maxValue, parameterBlockId };\n  return await put(`/api/TechParameter/`, data);\n}\n\nasync function updateWorker(\n  id: string,\n  email: string,\n  phoneNumber: string,\n  firstName: string,\n  secondName: string,\n  roleName: string,\n  outletId: number,\n  warehouseId: number,\n  outletWorker: boolean,\n) {\n  const data = {\n    id,\n    email,\n    phoneNumber,\n    firstName,\n    secondName,\n    roleName,\n    outletId: outletWorker ? outletId : null,\n    warehouseId: outletWorker ? null : warehouseId,\n  };\n  return await put(`/api/Account/`, data);\n}\n\nasync function updateParameterValue(id: string, techParameterId: string, value: string) {\n  const data = { id, value, techParameterId };\n  return await put(`/api/ParameterValue`, data);\n}\n\nasync function updateProduct(\n  id: string,\n  name: string,\n  description: string,\n  price: number,\n  priceWithoutDiscount: number,\n  categoryId: string,\n  vendorCode: string,\n  picFile: File | null,\n  parameters?: ParameterCreateRequest[],\n) {\n  const formData = new FormData();\n  formData.append('id', id);\n  formData.append('name', name);\n  formData.append('description', description);\n  formData.append('price', `${price}`);\n  formData.append('priceWithoutDiscount', `${priceWithoutDiscount}`);\n  formData.append('categoryId', categoryId);\n  formData.append('vendorCode', vendorCode);\n  if (picFile) {\n    formData.append('picFile', picFile);\n  }\n\n  const parameterString = JSON.stringify(parameters);\n  formData.append(`parameterString`, parameterString);\n\n  return await put(`/api/Product`, formData);\n}\n\nasync function updateRegion(id: string, name: string) {\n  const data = { id, name };\n  return await put(`/api/Geography/region`, data);\n}\n\nasync function updateCity(id: number, name: string, regionId: number) {\n  const data = { id, name, regionId };\n  return await put(`/api/Geography/city`, data);\n}\n\nasync function updateOutlet(\n  id: number,\n  name: string,\n  cityId: number,\n  streetName: string,\n  building: string,\n  postalCode: string,\n  noteForUser: string,\n  phoneNumber: string,\n) {\n  const data = { id, name, cityId, streetName, building, postalCode, noteForUser, phoneNumber };\n  return await put(`/api/Estate/outlet`, data);\n}\n\nasync function updateWarehouse(\n  id: number,\n  name: string,\n  cityId: number,\n  streetName: string,\n  building: string,\n  postalCode: string,\n  phoneNumber: string,\n) {\n  const data = { id, name, cityId, streetName, building, postalCode, phoneNumber };\n  return await put(`/api/Estate/warehouse`, data);\n}\n\nasync function updatePurchaseStatus(id: string, status: number) {\n  const data = { id, status };\n  return await put(`/api/Purchase`, data);\n}\n\nasync function cancelPurchaseStatus(id: string) {\n  return await put(`/api/Purchase/${id}`, null);\n}\n\nexport {\n  updateCartItem,\n  updateCommonCategory,\n  updateCategory,\n  updateParameterBlock,\n  updateParameter,\n  updateWorker,\n  updateParameterValue,\n  updateProduct,\n  updateRegion,\n  updateCity,\n  updateOutlet,\n  updateWarehouse,\n  updatePurchaseStatus,\n  cancelPurchaseStatus,\n};\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getCart, getCartUnsigned } from 'src/Requests/GetRequests';\nimport CartItem from 'src/Types/CartItem';\nimport Cart from 'src/Types/Cart';\nimport { deleteFromCart } from 'src/Requests/DeleteRequests';\nimport { updateCartItem } from 'src/Requests/PutRequests';\nimport Product from 'src/Types/Product';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    empty: {\n      color: '#777',\n      fontWeight: 550,\n    },\n  }),\n);\n\nconst CartPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    let res: Cart;\n    const role = sessionStorage.getItem('signed');\n    if (role || role === 'Guest') {\n      res = (await getCart()) as Cart;\n    } else {\n      res = await getCartUnsigned();\n    }\n\n    if (isMounted) {\n      setCartItems(res.products);\n    }\n  };\n\n  const updateCurrentSumm = (pickedProducts: Product[], cartItems: CartItem[]) => {\n    let summ = 0;\n    let prod;\n    for (const element of pickedProducts) {\n      prod = cartItems.find(item => item.product.id === element.id);\n      if (prod) {\n        summ += prod.count * prod.product.price;\n      }\n    }\n\n    setCurrentSumm(summ);\n    return summ;\n  };\n\n  const onCount = (newCount: number, id?: string) => {\n    const role = sessionStorage.getItem('signed');\n    if (!role) {\n      updateCartItem(newCount, id as string);\n    }\n\n    const itemId = cartItems.findIndex(item => item.product.id === (id as string));\n    cartItems[itemId].count = newCount;\n    updateCurrentSumm(pickedProducts, cartItems);\n  };\n\n  const deleteItem = async (productId: string) => {\n    const role = sessionStorage.getItem('signed');\n    console.log(role);\n    let result;\n    if (role && role !== 'Guest') {\n      result = await deleteFromCart(productId);\n    } else {\n      const cart = localStorage.getItem('cartItems');\n      if (cart) {\n        const arr = cart.split(',');\n        const index = arr.findIndex(a => a === productId);\n        arr.splice(index, 1);\n        localStorage.setItem('cartItems', arr.join(','));\n      }\n    }\n\n    if (!role || result === 1) {\n      const deleted = cartItems.findIndex(item => item.product.id === productId);\n      const newCartItems = [...cartItems];\n      newCartItems.splice(deleted, 1);\n\n      const deletedPicked = pickedProducts.findIndex(item => item.id === productId);\n      const picked = [...pickedProducts];\n      picked.splice(deletedPicked, 1);\n      setPickedProducts(picked);\n\n      setCartItems(newCartItems);\n      updateCurrentSumm(pickedProducts, newCartItems);\n    }\n  };\n\n  const onChecked = (product: Product, added: boolean) => {\n    let newPicked;\n    if (added) {\n      newPicked = [...pickedProducts, product];\n      setPickedProducts(newPicked);\n    } else {\n      const deleted = pickedProducts.findIndex(item => item.id === product.id);\n      newPicked = [...pickedProducts];\n      newPicked.splice(deleted, 1);\n      setPickedProducts(newPicked);\n    }\n\n    updateCurrentSumm(newPicked, cartItems);\n  };\n\n  const onPuchaseClick = () => {\n    if (pickedProducts.length > 0) {\n      let picked = '';\n      for (const item of pickedProducts) {\n        picked += `${item.id}_${cartItems.find(p => p.product.id === item.id)?.count},`;\n      }\n      picked = picked.substring(0, picked.length - 1);\n\n      history.pushState({}, 'DTS', `/purchasing?items=${picked}`);\n      window.location.replace(`/purchasing?items=${picked}`);\n    }\n  };\n\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [pickedProducts, setPickedProducts] = useState<Product[]>([]);\n  const [currentSumm, setCurrentSumm] = useState<number>(0);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid>\n              <Typography align=\"center\" className={classes.pageName} variant=\"h5\" component=\"h5\">\n                Корзина\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={10} item container direction=\"column\">\n                {(!cartItems || cartItems.length < 1) && (\n                  <Grid alignContent=\"stretch\" container justifyContent=\"center\">\n                    <Typography align=\"center\" variant=\"h4\" className={classes.empty}>\n                      Кажется, тут пусто... Выберите товары и купите их!\n                    </Typography>\n                  </Grid>\n                )}\n                <Grid>\n                  {cartItems &&\n                    cartItems.map(cartItem => (\n                      <ProductCard\n                        product={cartItem.product}\n                        key={cartItem.product.id}\n                        hideBuy={true}\n                        hideLike={true}\n                        showCounter={true}\n                        count={cartItem.count}\n                        onCount={onCount}\n                        onDelete={deleteItem}\n                        onChecked={onChecked}\n                      />\n                    ))}\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\" alignItems=\"center\">\n              <Typography className={classes.pageName} variant=\"h6\" component=\"h6\">\n                Сумма: {currentSumm} ₽\n              </Typography>\n              <Button variant=\"contained\" disabled={pickedProducts.length < 1} onClick={onPuchaseClick} color=\"primary\">\n                Оформить заказ\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CartPage;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getWishlist } from 'src/Requests/GetRequests';\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\nimport Product from 'src/Types/Product';\nimport Wishlist from 'src/Types/Wishlist';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst WishlistPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = (await getWishlist()) as Wishlist;\n    if (isMounted) {\n      setWishlistItems(res.products);\n    }\n  };\n\n  const deleteItem = async (productId: string) => {\n    const result = await deleteFromWishlist(productId);\n    if (result === 1) {\n      const deleted = wishlistItems.findIndex(item => item.id === productId);\n      const newWishlistItems = [...wishlistItems];\n      newWishlistItems.splice(deleted, 1);\n      console.log(newWishlistItems);\n      setWishlistItems(newWishlistItems);\n    }\n  };\n\n  const [wishlistItems, setWishlistItems] = useState<Product[]>([]);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid>\n              <Typography align=\"center\" className={classes.pageName} variant=\"h5\" component=\"h5\">\n                Избранное\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Grid>\n                  {wishlistItems.map(wishlistItem => (\n                    <ProductCard\n                      product={wishlistItem}\n                      key={wishlistItem.id}\n                      hideBuy={true}\n                      hideLike={true}\n                      onDelete={deleteItem}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default WishlistPage;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nimport Category from 'src/Types/Category';\n\ninterface ICategoryCard {\n  category: Category;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    name: {\n      fontSize: 1.2 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst CategoryCard: React.FC<ICategoryCard> = props => {\n  const classes = useStyles();\n  const redirectionURL = `/category/${props.category.name}`;\n  return (\n    <Card variant=\"outlined\">\n      <Grid justifyContent=\"center\" item xs={12} container>\n        <CardActionArea href={redirectionURL}>\n          <Grid justifyContent=\"center\" item xs={12} container>\n            <Typography align=\"center\" className={classes.name} variant=\"overline\">\n              {props.category.name}\n            </Typography>\n          </Grid>\n        </CardActionArea>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default CategoryCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\n\nimport CategoryCard from 'src/Components/Parts/CategoryCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getCategories } from 'src/Requests/GetRequests';\nimport Category from 'src/Types/Category';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryWord: {\n      fontWeight: 600,\n      padding: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst CommonCategoryPage: React.FC = () => {\n  const params = useParams();\n\n  const [categories, setCategories] = React.useState<Category[]>([]);\n\n  const createRow = (index: number, array: Category[]) => (\n    <Grid container item xs={12} key={index} alignItems=\"stretch\" justifyContent=\"space-evenly\" spacing={2}>\n      <Grid item xs={12} sm={4}>\n        {array[index] && <CategoryCard category={array[index]} />}\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        {array[index + 1] && <CategoryCard category={array[index + 1]} />}\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        {array[index + 2] && <CategoryCard category={array[index + 2]} />}\n      </Grid>\n    </Grid>\n  );\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const getCategs = async () => {\n      const res = await getCategories(params?.commonCategoryName as string);\n      if (isMounted) {\n        setCategories(res);\n      }\n    };\n    getCategs();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid xs={12} item container direction=\"row\" justifyContent=\"center\">\n        <Grid container justifyContent=\"center\" sm={9}>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Typography align=\"center\" className={classes.categoryWord} variant=\"h5\" component=\"h5\">\n              {params.commonCategoryName}\n            </Typography>\n            <Grid container justifyContent=\"space-evenly\" alignItems=\"stretch\" spacing={1}>\n              {categories.map((item, index, arr) => index % 3 === 0 && createRow(index, arr))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommonCategoryPage;\n","const PurchaseStatus = {\n  waitsForPaymentAprroval: 0,\n  waitsInOulet: 1,\n  transportingToOutlet: 2,\n  waitsForDelivery: 3,\n  inDelivering: 4,\n  refused: 5,\n  canceledByClient: 6,\n  finished: 7,\n};\n\nconst getStatusString = (id: number) => {\n  switch (id) {\n    case PurchaseStatus.waitsForPaymentAprroval:\n      return 'Ожидается подтверждения оплаты';\n    case PurchaseStatus.waitsInOulet:\n      return 'Ожидает в магазине';\n    case PurchaseStatus.transportingToOutlet:\n      return 'Доставляется в магазин';\n    case PurchaseStatus.waitsForDelivery:\n      return 'Ожидается доставка';\n    case PurchaseStatus.inDelivering:\n      return 'Доставляется';\n    case PurchaseStatus.refused:\n      return 'Отказ';\n    case PurchaseStatus.canceledByClient:\n      return 'Отменён';\n    case PurchaseStatus.finished:\n      return 'Завершён';\n    default:\n      return 'Временно недоступно';\n  }\n};\n\nexport { PurchaseStatus, getStatusString };\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Divider, List, ListItem } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport PurchaseItem from 'src/Types/PurchaseItem';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    text: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IPurchasingItemsList {\n  purchaseItems: PurchaseItem[];\n}\n\nconst PurchasingItemsList: React.FC<IPurchasingItemsList> = props => {\n  const classes = useStyles();\n  return (\n    <List>\n      <Divider />\n      {props.purchaseItems.map(item => (\n        <React.Fragment key={item.productId}>\n          <ListItem>\n            <Grid container direction=\"row\" justifyContent=\"space-around\">\n              <Button className={classes.text} href={`product/${item.productId}`}>{`${item.productName}`}</Button>\n              <Typography className={classes.text}>{`${item.price}₽ x${item.count}`}</Typography>\n            </Grid>\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\nexport default PurchasingItemsList;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Card,\n  Divider,\n  List,\n  ListItem,\n} from '@material-ui/core';\n\nimport Purchase from 'src/Types/Purchase';\nimport { getStatusString, PurchaseStatus } from 'src/Types/PurchaseStatus';\nimport { updatePurchaseStatus, cancelPurchaseStatus } from 'src/Requests/PutRequests';\n\nimport OutletInfo from './OutletInfo';\nimport PurchasingItemsList from './PurchasingItemsList';\n\ninterface IPurchaseDetailedInfo {\n  purchase: Purchase;\n  cardName: string;\n  hideDelivery?: boolean;\n  showRefuse?: boolean;\n  showCancel?: boolean;\n  showFinish?: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      marginTop: theme.spacing(2),\n      padding: theme.spacing(2),\n    },\n    text: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }),\n);\n\nconst PurchaseDetailedInfo: React.FC<IPurchaseDetailedInfo> = props => {\n  const classes = useStyles();\n\n  const [status, setStatus] = useState(props.purchase.status);\n\n  const completed = async () => {\n    const res = await updatePurchaseStatus(props.purchase.id, PurchaseStatus.finished);\n    if (res > 0) {\n      setStatus(PurchaseStatus.finished);\n    }\n  };\n\n  const cancel = async () => {\n    const res = await cancelPurchaseStatus(props.purchase.id);\n    if (res > 0) {\n      setStatus(PurchaseStatus.canceledByClient);\n    }\n  };\n\n  const refuse = async () => {\n    const res = await updatePurchaseStatus(props.purchase.id, PurchaseStatus.refused);\n    if (res > 0) {\n      setStatus(PurchaseStatus.refused);\n    }\n  };\n\n  return (\n    <Card className={classes.card} variant=\"outlined\">\n      <Grid xs={12} item justifyContent=\"center\" alignContent=\"flex-start\" container>\n        <Grid xs={12} sm={9} item direction=\"column\" container>\n          <Typography align=\"center\" variant=\"h5\" className={classes.text}>\n            {props.cardName}\n          </Typography>\n          <List>\n            <Divider />\n            <ListItem>\n              <Typography>Покупатель: {props.purchase.customerName}</Typography>\n            </ListItem>\n            <Divider />\n            {props.purchase.sellerName && (\n              <React.Fragment>\n                <ListItem>\n                  <Typography>Продавец: {props.purchase.sellerName}</Typography>\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            )}\n            <ListItem>\n              <Typography>Статус: {getStatusString(status)}</Typography>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <Typography>Общая стоимость: {props.purchase.totalCost}₽</Typography>\n            </ListItem>\n            <Divider />\n            {!props.hideDelivery && (\n              <Accordion variant=\"outlined\">\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography>Доставка</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {props.purchase.delivery ? (\n                    <Grid xs={12} item>\n                      <List>\n                        <ListItem>\n                          <Typography>Получатель: {props.purchase.delivery.recieverName}</Typography>\n                        </ListItem>\n                        <Divider />\n                        <ListItem>\n                          <Typography>Адрес доставки: {props.purchase.delivery.deliveryAdress}</Typography>\n                        </ListItem>\n                        <Divider />\n                        <ListItem>\n                          <Typography>Стоимость доставки: {props.purchase.delivery.deliveryCost}₽</Typography>\n                        </ListItem>\n                        <Divider />\n                      </List>\n                    </Grid>\n                  ) : (\n                    <React.Fragment>\n                      <Typography>Магазин получения:</Typography>\n                      <Grid container justifyContent=\"center\">\n                        <OutletInfo outlet={props.purchase.deliveryOutlet} />\n                      </Grid>\n                    </React.Fragment>\n                  )}\n                </AccordionDetails>\n              </Accordion>\n            )}\n            <Accordion variant=\"outlined\">\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Список покупок</Typography>\n              </AccordionSummary>\n              <AccordionDetails>\n                <Grid item xs={12}>\n                  <PurchasingItemsList purchaseItems={props.purchase.purchaseItems} />\n                </Grid>\n              </AccordionDetails>\n            </Accordion>\n            <ListItem>\n              <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n                {props.showCancel &&\n                  status !== PurchaseStatus.refused &&\n                  status !== PurchaseStatus.canceledByClient &&\n                  status !== PurchaseStatus.finished && (\n                    <Button variant=\"contained\" onClick={cancel}>\n                      Отменить\n                    </Button>\n                  )}\n                {props.showFinish &&\n                  status !== PurchaseStatus.refused &&\n                  status !== PurchaseStatus.canceledByClient &&\n                  status !== PurchaseStatus.finished && (\n                    <Button variant=\"contained\" onClick={refuse}>\n                      Отказ\n                    </Button>\n                  )}\n                {props.showRefuse &&\n                  status !== PurchaseStatus.refused &&\n                  status !== PurchaseStatus.canceledByClient &&\n                  status !== PurchaseStatus.finished && (\n                    <Button variant=\"contained\" color=\"primary\" onClick={completed}>\n                      Выполнено\n                    </Button>\n                  )}\n              </Grid>\n            </ListItem>\n          </List>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default PurchaseDetailedInfo;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Typography,\n  Card,\n  Grid,\n  TextField,\n  ListItem,\n  Divider,\n  List,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Snackbar,\n  Button,\n} from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Alert } from '@material-ui/lab';\n\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\nimport PurchasingItemsList from 'src/Components/Parts/PurchasingItemsList';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport OutletInfo from 'src/Components/Parts/OutletInfo';\nimport PrepurchaseInfo from 'src/Types/PrepurchaseInfo';\nimport ItemOfPurchase from 'src/Types/ItemOfPurchase';\nimport { createPurchase, getPrepurchaseInfo } from 'src/Requests/PostRequests';\nimport CustomerInfo from 'src/Types/CustomerInfo';\nimport PurchaseRequest from 'src/Types/PurchaseRequest';\nimport Purchase from 'src/Types/Purchase';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    topCard: {\n      paddingTop: theme.spacing(5),\n    },\n    pageName: {\n      paddingBottom: theme.spacing(2),\n    },\n    card: {\n      marginTop: theme.spacing(2),\n      padding: theme.spacing(2),\n    },\n    field: {\n      margin: theme.spacing(2),\n    },\n    text: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    textSep: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n);\n\nconst PurchasingPage: React.FC = () => {\n  const getPreInfo = async (isMounted: boolean) => {\n    const data = parseParams();\n    const res = (await getPrepurchaseInfo(data)) as PrepurchaseInfo;\n    if (isMounted) {\n      setPrepurchaseInfo(res);\n      setSum(res.sum);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getPreInfo(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const parseParams = (): ItemOfPurchase[] => {\n    const result = [] as ItemOfPurchase[];\n    const params = new URLSearchParams(location.search);\n    const toParse = params.get('items');\n    const arr = toParse?.split(',');\n    let dataArr: string[];\n    for (const item of arr as string[]) {\n      dataArr = item.split('_');\n      result.push({ productId: dataArr[0], count: parseInt(dataArr[1] as string) });\n    }\n\n    return result;\n  };\n\n  const createNewCustomerInfo = (curr: CustomerInfo): CustomerInfo =>\n    ({ customerFullName: curr.customerFullName, customerTelephone: curr.customerTelephone } as CustomerInfo);\n\n  const role = sessionStorage.getItem('signed');\n  const [prepurchaseInfo, setPrepurchaseInfo] = useState<PrepurchaseInfo>();\n  const [customerInfo, setCustomerInfo] = useState<CustomerInfo>({ customerFullName: '', customerTelephone: '' });\n  const [deliveryType, setDeliveryType] = useState<string>('outlet');\n  const [recieverName, setRecieverName] = useState<string>('');\n  const [recieverAdress, setRecieverAdress] = useState<string>('');\n  const [outlet, setOutlet] = useState<string>('');\n  const [sum, setSum] = useState<number>(0);\n  const [operationResult, setResult] = useState<Purchase>();\n\n  const classes = useStyles();\n\n  const nameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newVal = event.target.value as string;\n    const newData = createNewCustomerInfo(customerInfo);\n    newData.customerFullName = newVal;\n    setCustomerInfo(newData);\n  };\n\n  const phoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const regex = /^\\+?[\\d ]*$/;\n    const newVal = event.target.value as string;\n    if (regex.test(newVal)) {\n      const newData = createNewCustomerInfo(customerInfo);\n      newData.customerTelephone = newVal;\n      setCustomerInfo(newData);\n    }\n  };\n\n  const deliveryTypeChange = (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\n    setDeliveryType(value);\n    if (prepurchaseInfo) {\n      if (value === 'outlet') {\n        setSum(prepurchaseInfo.sum);\n      } else {\n        setSum(prepurchaseInfo.sum + prepurchaseInfo.deliveryPrice);\n      }\n    }\n  };\n\n  const outletChange = (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\n    setOutlet(value);\n  };\n\n  const recieverNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newVal = event.target.value as string;\n    setRecieverName(newVal);\n  };\n\n  const recieverAdressChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newVal = event.target.value as string;\n    setRecieverAdress(newVal);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [errors, setErrors] = React.useState<string[]>([]);\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const submit = async () => {\n    const err = [] as string[];\n    if (role && role !== 'Customer') {\n      if (customerInfo.customerFullName.length < 3) {\n        err.push('Введено некорректное имя покупателя!');\n      }\n      if (customerInfo.customerTelephone.length < 8) {\n        err.push('Введён некорректный телефонный номер покупателя!');\n      }\n    }\n\n    if (deliveryType === 'outlet') {\n      if (outlet.length < 1) {\n        err.push('Не выбран магазин для самовывоза!');\n      }\n    } else {\n      if (recieverName.length < 3) {\n        err.push('Указано некорректное имя получателя!');\n      }\n      if (recieverAdress.length < 5) {\n        err.push('Не выбран адрес доставки!');\n      }\n    }\n\n    if (prepurchaseInfo && prepurchaseInfo.purchaseItems.length < 1) {\n      err.push('Произошла ошибка: не найдены товары.');\n    }\n\n    if (err.length > 0) {\n      setErrors(err);\n      setOpen(true);\n    } else {\n      const data = {\n        customerFullName: customerInfo.customerFullName,\n        customerTelephone: customerInfo.customerTelephone,\n        cityId: 0,\n        purchaseItems: (prepurchaseInfo as PrepurchaseInfo).purchaseItems,\n      } as PurchaseRequest;\n\n      if (deliveryType === 'outlet') {\n        data.deliveryOutletId = parseInt(outlet);\n      } else {\n        data.delivery = { deliveryAdress: recieverAdress, recieverName: recieverName, cityId: 0 };\n      }\n\n      const result = await createPurchase(data);\n      if (result) {\n        setResult(result as Purchase);\n        if (!role) {\n          const items = localStorage.getItem('cartItems');\n          const itemArr = items?.split(',');\n          let index;\n          if (prepurchaseInfo && itemArr) {\n            for (const prod of prepurchaseInfo.purchaseItems) {\n              index = itemArr.findIndex(i => i === prod.productId);\n              if (index && index !== -1) {\n                itemArr?.splice(index, 1);\n              }\n            }\n            localStorage.setItem('cartItems', itemArr.join(','));\n          }\n        }\n      } else {\n        err.push('Произошла непредвиденная ошибка!');\n        setErrors(err);\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          <ul>\n            {errors.map((e, i) => (\n              <li key={i}>{e}</li>\n            ))}\n          </ul>\n        </Alert>\n      </Snackbar>\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"column\" container>\n          {!operationResult && (\n            <React.Fragment>\n              <Card className={classes.topCard} variant=\"outlined\">\n                <Typography align=\"center\" variant=\"h4\" className={classes.pageName}>\n                  Оформление заказа\n                </Typography>\n              </Card>\n              <Card className={classes.card} variant=\"outlined\">\n                <Grid xs={12} item justifyContent=\"center\" alignContent=\"flex-start\" container>\n                  <Grid xs={12} sm={9} item direction=\"column\" container>\n                    <Typography align=\"center\" variant=\"h5\" className={classes.text}>\n                      Состав заказа:\n                    </Typography>\n                    <Card>\n                      <List>\n                        <Divider />\n                        {prepurchaseInfo && <PurchasingItemsList purchaseItems={prepurchaseInfo.purchaseItems} />}\n                      </List>\n                    </Card>\n                    <Typography align=\"right\" variant=\"h6\" className={classes.textSep}>\n                      Всего: {prepurchaseInfo?.sum}₽\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Card>\n              {role !== 'Customer' && (\n                <Card className={classes.card} variant=\"outlined\">\n                  <Typography align=\"center\" variant=\"h5\" className={classes.text}>\n                    Данные покупателя:\n                  </Typography>\n                  <Grid xs={12} item justifyContent=\"center\" container>\n                    <Grid xs={12} sm={6} item direction=\"column\" container>\n                      <TextField\n                        className={classes.field}\n                        value={customerInfo.customerFullName}\n                        onChange={nameChange}\n                        variant=\"outlined\"\n                        label=\"ФИО покупателя\"\n                      />\n                      <TextField\n                        className={classes.field}\n                        value={customerInfo.customerTelephone}\n                        onChange={phoneChange}\n                        variant=\"outlined\"\n                        label=\"Номер телефона\"\n                      />\n                    </Grid>\n                  </Grid>\n                </Card>\n              )}\n              <Card className={classes.card} variant=\"outlined\">\n                <Typography align=\"center\" variant=\"h5\" className={classes.text}>\n                  Выбор доставки:\n                </Typography>\n                <Grid xs={12} item justifyContent=\"space-evenly\" direction=\"column\" alignItems=\"center\" container>\n                  <RadioGroup className={classes.field} row value={deliveryType} onChange={deliveryTypeChange}>\n                    <FormControlLabel\n                      value=\"outlet\"\n                      control={<Radio color=\"primary\" />}\n                      label=\"Самовывоз из магазина\"\n                    />\n                    <FormControlLabel value=\"delivery\" control={<Radio color=\"primary\" />} label=\"Доставка на дом\" />\n                  </RadioGroup>\n                  {deliveryType === 'outlet' ? (\n                    <Card>\n                      <List>\n                        <RadioGroup row value={outlet} onChange={outletChange}>\n                          <Divider />\n                          {prepurchaseInfo?.outlets.map(o => (\n                            <React.Fragment key={o.id}>\n                              <ListItem>\n                                <Grid alignItems=\"center\" direction=\"row\" container>\n                                  <Grid item container justifyContent=\"center\" xs={12} sm={2}>\n                                    <Radio value={o.id.toString()} color=\"primary\" />\n                                  </Grid>\n                                  <Grid item xs={12} sm={10}>\n                                    <OutletInfo outlet={o} />\n                                  </Grid>\n                                </Grid>\n                              </ListItem>\n                              <Divider />\n                            </React.Fragment>\n                          ))}\n                        </RadioGroup>\n                      </List>\n                    </Card>\n                  ) : (\n                    <Grid xs={12} item justifyContent=\"center\" container>\n                      <Grid xs={12} sm={6} item direction=\"column\" container>\n                        <Typography align=\"center\" variant=\"h5\" className={classes.text}>\n                          Стоимость доставки: {prepurchaseInfo?.deliveryPrice}₽\n                        </Typography>\n                        <TextField\n                          className={classes.field}\n                          value={recieverName}\n                          onChange={recieverNameChange}\n                          variant=\"outlined\"\n                          label=\"ФИО получателя\"\n                        />\n                        <TextField\n                          className={classes.field}\n                          value={recieverAdress}\n                          onChange={recieverAdressChange}\n                          variant=\"outlined\"\n                          label=\"Адрес доставки\"\n                        />\n                      </Grid>\n                    </Grid>\n                  )}\n                </Grid>\n              </Card>\n              <Card className={classes.card} variant=\"outlined\">\n                <Typography align=\"center\" variant=\"h5\" className={classes.pageName}>\n                  Итог: {sum}₽\n                </Typography>\n              </Card>\n              <Card className={classes.card} variant=\"outlined\">\n                <Grid container justifyContent=\"center\">\n                  <Button color=\"primary\" variant=\"contained\" onClick={submit}>\n                    Купить\n                  </Button>\n                </Grid>\n              </Card>\n            </React.Fragment>\n          )}\n          {operationResult && (\n            <React.Fragment>\n              <PurchaseDetailedInfo purchase={operationResult} cardName={`Заказ ${operationResult.code} оформлен:`} />\n              <Button variant=\"contained\" color=\"primary\" href=\"/\">\n                К покупкам\n              </Button>\n            </React.Fragment>\n          )}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PurchasingPage;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\nimport { getPurchases } from 'src/Requests/GetRequests';\nimport Purchase from 'src/Types/Purchase';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst UserPurchases: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getPurchases();\n    if (isMounted) {\n      setPurchases(res);\n    }\n  };\n\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\n\n  const dateParse = (date: string) => {\n    const val = new Date(date);\n    return val.toLocaleString();\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid>\n              <Typography align=\"center\" className={classes.pageName} variant=\"h5\" component=\"h5\">\n                История заказов\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Grid>\n                  {purchases.map(purchase => (\n                    <PurchaseDetailedInfo\n                      key={purchase.id}\n                      purchase={purchase}\n                      cardName={`Заказ ${purchase.code} от ${dateParse(purchase.createdDate)}`}\n                      showCancel\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default UserPurchases;\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { IconButton, MenuItem, Typography } from '@material-ui/core';\n\nimport Roles from 'src/Types/Roles';\nimport { getRole } from 'src/Requests/AccountRequests';\n\nconst HiddenNavigation = () => {\n  const [state, setState] = React.useState(false);\n  const [role, setRole] = React.useState('');\n\n  const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    setState(open);\n  };\n\n  const onMenuItemClick = (loc: string) => {\n    window.location.href = loc;\n  };\n\n  const categories = onMenuItemClick.bind(this, '/admin/categories');\n  const commonCategories = onMenuItemClick.bind(this, '/admin/commonCategories');\n  const parameterBlocks = onMenuItemClick.bind(this, '/admin/parameterBlocks');\n  const parameters = onMenuItemClick.bind(this, '/admin/parameters');\n  const workers = onMenuItemClick.bind(this, '/admin/workers');\n  const clients = onMenuItemClick.bind(this, '/admin/clients');\n  const products = onMenuItemClick.bind(this, '/admin/product');\n  const regions = onMenuItemClick.bind(this, '/admin/regions');\n  const outlets = onMenuItemClick.bind(this, '/admin/outlets');\n  const warehouses = onMenuItemClick.bind(this, '/admin/warehouses');\n\n  const menuItem = (name: string, click: () => void) => (\n    <MenuItem onClick={click}>\n      <ListItem>\n        <ListItemText>\n          <Typography variant=\"h6\">{name}</Typography>\n        </ListItemText>\n      </ListItem>\n    </MenuItem>\n  );\n\n  React.useEffect(() => {\n    let isMounted = true;\n    checkAuth(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const checkAuth = async (isMounted: boolean) => {\n    const authres = await getRole();\n    setRole(authres);\n    if (isMounted) {\n      if (authres !== Roles.guest) {\n        sessionStorage.setItem('signed', authres);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <IconButton color=\"secondary\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n        <MenuIcon />\n      </IconButton>\n      <Drawer anchor={'left'} open={state} onClose={toggleDrawer(false)}>\n        {role === 'Admin' && (\n          <List>\n            {menuItem('Обобщающие категории', commonCategories)}\n            <Divider />\n            {menuItem('Категории', categories)}\n            <Divider />\n            {menuItem('Блоки параметров', parameterBlocks)}\n            <Divider />\n            {menuItem('Параметры', parameters)}\n            <Divider />\n            {menuItem('Продукты', products)}\n            <Divider />\n            {menuItem('Работники', workers)}\n            <Divider />\n            {menuItem('Клиенты', clients)}\n            <Divider />\n            {menuItem('Регионы', regions)}\n            <Divider />\n            {menuItem('Магазины', outlets)}\n            <Divider />\n            {menuItem('Склады', warehouses)}\n          </List>\n        )}\n        {role === 'Manager' && (\n          <List>\n            {menuItem('Работники', workers)}\n            <Divider />\n            {menuItem('Клиенты', clients)}\n            <Divider />\n            {menuItem('Продукты', products)}\n          </List>\n        )}\n      </Drawer>\n    </div>\n  );\n};\n\nexport default HiddenNavigation;\n","import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport DevicesIcon from '@material-ui/icons/Devices';\n\nimport HiddenNavigation from './HiddenNavigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    logoButton: {\n      fontSize: '30px',\n      fontFamily: 'cursive',\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n    logoIcon: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar>\n        <Toolbar>\n          <Grid item xs={12} sm={2}>\n            <HiddenNavigation />\n          </Grid>\n          <Grid container justifyContent=\"flex-end\" item xs={12} sm={10}>\n            <Button\n              variant=\"text\"\n              size=\"large\"\n              color=\"secondary\"\n              href=\"/\"\n              className={classes.logoButton}\n              startIcon={<DevicesIcon />}\n            >\n              DTS\n            </Button>\n            <Button variant=\"text\" size=\"large\" color=\"secondary\" href=\"/\" className={classes.logoIcon}>\n              <DevicesIcon />\n            </Button>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\nexport default NavigationBar;\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridSelectionModel } from '@material-ui/data-grid';\nimport { createStyles, Fab, Grid, makeStyles, Snackbar, Theme, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    floating: {\n      padding: theme.spacing(3),\n    },\n    fabBlue: {\n      color: theme.palette.common.white,\n      backgroundColor: '#2979ff',\n      '&:hover': {\n        backgroundColor: '#5393ff',\n      },\n    },\n    fabRed: {\n      color: theme.palette.common.white,\n      backgroundColor: '#ff1744',\n      '&:hover': {\n        backgroundColor: '#b2102f',\n      },\n    },\n    fabViolet: {\n      color: theme.palette.common.white,\n      backgroundColor: '#673ab7',\n      '&:hover': {\n        backgroundColor: '#8561c5',\n      },\n    },\n  }),\n);\n\ninterface ITableStructure<Type> {\n  name: string;\n  getData: () => Promise<Type[]>;\n  columns: GridColDef[];\n  pageSize: number;\n  setSelected?: (id: string) => void;\n  deleteSelected?: (id: string) => Promise<boolean>;\n  editSelected?: (selectedId: string, refrFun: () => void) => void;\n  createNew?: (update: () => void) => void;\n  open?: boolean;\n  setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\n  error?: string;\n  compact?: boolean;\n}\n\nexport const TableStructure = <Type,>(props: ITableStructure<Type>) => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await props.getData();\n    if (isMounted) {\n      setData(res);\n      const page = [...res];\n      setPage(page);\n    }\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const { pageSize } = props;\n  const [data, setData] = useState<Type[]>([]);\n  const [dataPage, setPage] = useState<Type[]>([]);\n  const [pageNum, setPageNum] = useState<number>(0);\n  const [selectedItem, setSelectedItem] = useState<string>();\n\n  const onPageChange = (page: number, details?: unknown) => {\n    const paged = [...data];\n    setPage(paged);\n    setPageNum(page);\n  };\n\n  const onSelection = (selectionModel: GridSelectionModel, details?: unknown) => {\n    if (selectionModel.length > 0) {\n      setSelectedItem(selectionModel[0] as string);\n      if (props.setSelected) {\n        props.setSelected(selectionModel[0] as string);\n      }\n    }\n  };\n\n  const onDelete = async () => {\n    if (selectedItem && props.deleteSelected) {\n      const res = await props.deleteSelected(selectedItem);\n      if (res) {\n        refreshData();\n      }\n    }\n  };\n\n  const onCreate = async () => {\n    if (props.createNew) {\n      props.createNew(refreshData.bind(this));\n    }\n  };\n\n  const onEdit = async () => {\n    if (selectedItem && props.editSelected) {\n      props.editSelected(selectedItem, refreshData.bind(this));\n    }\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {props.setOpen && props.error && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={props.open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity=\"error\">\n            {props.error}\n          </Alert>\n        </Snackbar>\n      )}\n      <Grid direction=\"column\" className={classes.floating} container alignContent=\"stretch\">\n        <Typography align=\"center\" variant={props.compact ? 'h6' : 'h4'}>\n          {props.name}\n        </Typography>\n        <DataGrid\n          style={props.compact ? { minHeight: 350 } : { minHeight: 650 }}\n          rows={dataPage}\n          page={pageNum}\n          rowCount={data.length}\n          columns={props.columns}\n          pageSize={pageSize}\n          rowsPerPageOptions={[pageSize]}\n          onPageChange={onPageChange}\n          onSelectionModelChange={onSelection}\n        />\n        <Grid className={classes.floating} direction=\"row\" container justifyContent=\"flex-end\" alignContent=\"stretch\">\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!props.createNew}\n              variant=\"extended\"\n              className={classes.fabBlue}\n              color=\"inherit\"\n              aria-label=\"add\"\n              onClick={onCreate}\n            >\n              <AddIcon />\n              Добавить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!selectedItem || selectedItem === '' || !props.editSelected}\n              variant=\"extended\"\n              className={classes.fabViolet}\n              color=\"inherit\"\n              aria-label=\"edit\"\n              onClick={onEdit}\n            >\n              <EditIcon />\n              Изменить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!selectedItem || selectedItem === '' || !props.deleteSelected}\n              variant=\"extended\"\n              className={classes.fabRed}\n              color=\"inherit\"\n              aria-label=\"delete\"\n              onClick={onDelete}\n            >\n              <DeleteIcon />\n              Удалить\n            </Fab>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport NavigationBar from 'src/Components/Admin/Parts/NavigationBar';\n\nimport { TableStructure } from './TableStructure';\n\ninterface ITableBasement<Type> {\n  name: string;\n  getData: () => Promise<Type[]>;\n  columns: GridColDef[];\n  pageSize: number;\n  setSelected?: (id: string) => void;\n  deleteSelected?: (id: string) => Promise<boolean>;\n  editSelected?: (selectedId: string, refrFun: () => void) => void;\n  createNew?: (update: () => void) => void;\n  open?: boolean;\n  setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\n  error?: string;\n}\n\nexport const TableBasement = <Type,>(props: ITableBasement<Type>) => (\n  <React.Fragment>\n    <NavigationBar />\n    <TableStructure\n      name={props.name}\n      getData={props.getData}\n      columns={props.columns}\n      pageSize={props.pageSize}\n      setSelected={props.setSelected}\n      deleteSelected={props.deleteSelected}\n      editSelected={props.editSelected}\n      createNew={props.createNew}\n      open={props.open}\n      setOpen={props.setOpen}\n      error={props.error}\n    />\n  </React.Fragment>\n);\n","import React, { JSXElementConstructor, ReactElement } from 'react';\nimport { Dialog, DialogContent, DialogTitle, Grid, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\ninterface IModalFormDialog {\n  name: string;\n  open: boolean;\n  form: ReactElement<unknown, string | JSXElementConstructor<unknown>>;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst ModalFormDialog: React.FC<IModalFormDialog> = props => {\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={props.open}\n      onClose={handleClose}\n      aria-labelledby=\"create-dialog-title\"\n      aria-describedby=\"create-dialog-description\"\n    >\n      <Grid container direction=\"column\">\n        <DialogTitle id=\"create-dialog-title\">\n          <Grid item xs={12} sm={12} container direction=\"row\" justifyContent=\"flex-start\">\n            <IconButton onClick={handleClose}>\n              <ArrowBack />\n            </IconButton>\n            {props.name}\n          </Grid>\n        </DialogTitle>\n        <DialogContent>{props.form}</DialogContent>\n      </Grid>\n    </Dialog>\n  );\n};\n\nexport default ModalFormDialog;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createCommonCategory } from 'src/Requests/PostRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateCommonCategory {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateCommonCategory: React.FC<ICreateCommonCategory> = props => {\n  const classes = useStyles();\n\n  const [commonCategoryData, setCommonCategoryData] = React.useState({ name: '', description: '' });\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCommonCategoryData({\n      name: event.target.value as string,\n      description: commonCategoryData.description,\n    });\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCommonCategoryData({\n      name: commonCategoryData.name,\n      description: event.target.value as string,\n    });\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (commonCategoryData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (commonCategoryData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      const res = await createCommonCategory(commonCategoryData.name, commonCategoryData.description);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"commonCategoryName\"\n        className={classes.spaces}\n        value={commonCategoryData.name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"commonCategoryDescription\"\n        className={classes.spaces}\n        value={commonCategoryData.description}\n        onChange={handleDescriptionChange}\n        label=\"Описание\"\n        variant=\"outlined\"\n      />\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Создать\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateCommonCategory;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 'auto',\n    },\n    paper: {\n      width: 200,\n      height: 230,\n      overflow: 'auto',\n    },\n    button: {\n      margin: theme.spacing(0.5, 0),\n    },\n  }),\n);\n\nfunction not<Type>(a: IIdentifieable<Type>[], b: IIdentifieable<Type>[]) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection<Type>(a: IIdentifieable<Type>[], b: IIdentifieable<Type>[]) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport interface IIdentifieable<Type> {\n  id: Type;\n  name: string;\n}\n\ninterface ITransferList<Type> {\n  left: IIdentifieable<Type>[];\n  right: IIdentifieable<Type>[];\n  setLeft: React.Dispatch<React.SetStateAction<IIdentifieable<Type>[]>>;\n  setRight: React.Dispatch<React.SetStateAction<IIdentifieable<Type>[]>>;\n}\n\nexport const TransferList = <Type,>(props: ITransferList<Type>) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState<IIdentifieable<Type>[]>([]);\n\n  const leftChecked = intersection(checked, props.left);\n  const rightChecked = intersection(checked, props.right);\n\n  const handleToggle = (value: IIdentifieable<Type>) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    props.setRight(props.right.concat(props.left));\n    props.setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    props.setRight(props.right.concat(leftChecked));\n    props.setLeft(not(props.left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    props.setLeft(props.left.concat(rightChecked));\n    props.setRight(not(props.right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    props.setLeft(props.left.concat(props.right));\n    props.setRight([]);\n  };\n\n  const customList = (items: IIdentifieable<Type>[]) => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value: IIdentifieable<Type>) => {\n          const labelId = `transfer-list-item-${value}-label`;\n\n          return (\n            <ListItem key={value.id as unknown as string} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  color=\"primary\"\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={value.name} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList(props.left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllRight}\n            disabled={props.left.length === 0}\n            aria-label=\"move all right\"\n          >\n            ≫\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleAllLeft}\n            disabled={props.right.length === 0}\n            aria-label=\"move all left\"\n          >\n            ≪\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList(props.right)}</Grid>\n    </Grid>\n  );\n};\n","import React, { Dispatch, SetStateAction, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createCategory, setCategoryParameterBlocks } from 'src/Requests/PostRequests';\nimport { getCommonCategories, getParamBlocks } from 'src/Requests/GetRequests';\nimport CommonCategory from 'src/Types/CommonCategory';\nimport ParameterBlockCreateRequest from 'src/Types/ParameterBlockCreateRequest';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport { IIdentifieable, TransferList } from 'src/Components/Admin/Parts/TransferList';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateCategory {\n  commonCategoryId?: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateCategory: React.FC<ICreateCategory> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const comCats = await getCommonCategories();\n    const paramBlocks = await getParamBlocks();\n    if (isMounted) {\n      setCommonCategories(comCats);\n      setRight(paramBlocks);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: categoryData.name,\n    description: categoryData.description,\n    deliveryPrice: categoryData.deliveryPrice,\n    commonCategoryId: props.commonCategoryId ?? categoryData.commonCategoryId,\n  });\n\n  const getFinalData = (): ParameterBlockCreateRequest[] => {\n    const parBlocks: ParameterBlockCreateRequest[] = [];\n    for (const item of important) {\n      parBlocks.push({ parameterBlockId: item.id, important: true });\n    }\n\n    for (const item of unimportant) {\n      parBlocks.push({ parameterBlockId: item.id, important: true });\n    }\n\n    return parBlocks;\n  };\n\n  const [categoryData, setCategoryData] = React.useState({\n    name: '',\n    description: '',\n    deliveryPrice: 0,\n    commonCategoryId: props.commonCategoryId ?? '',\n  });\n  const [commonCategories, setCommonCategories] = React.useState<CommonCategory[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n  const [right, setRight] = React.useState<ParameterBlock[]>([]);\n  const [important, setImportant] = React.useState<ParameterBlock[]>([]);\n  const [unimportant, setUnimportant] = React.useState<ParameterBlock[]>([]);\n  const [left, setLeft] = React.useState<ParameterBlock[]>([]);\n  const [loading, setLoading] = React.useState(true);\n  const [step, setStep] = React.useState(1);\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.description = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleDevPriceChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.deliveryPrice = newPrice;\n    }\n\n    setCategoryData(data);\n  };\n\n  const handleComCatChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.commonCategoryId = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onNext = async () => {\n    setImportant([...left]);\n    setUnimportant([]);\n    setStep(2);\n  };\n\n  const onBack = async () => {\n    setStep(1);\n  };\n\n  const onClick = async () => {\n    if (categoryData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (categoryData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      const res = await createCategory(\n        categoryData.name,\n        categoryData.description,\n        categoryData.deliveryPrice,\n        categoryData.commonCategoryId,\n      );\n\n      if (res && props.refresher) {\n        const data = getFinalData();\n        const resBlocks = await setCategoryParameterBlocks(res.id as string, data);\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"categoryName\"\n            className={classes.spaces}\n            value={categoryData.name}\n            onChange={handleNameChange}\n            label=\"Название\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"categoryDescription\"\n            className={classes.spaces}\n            value={categoryData.description}\n            onChange={handleDescriptionChange}\n            label=\"Описание\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"categoryDeliveryPrice\"\n            variant=\"outlined\"\n            className={classes.spaces}\n            type=\"number\"\n            label=\"Цена доставки\"\n            value={categoryData.deliveryPrice}\n            onChange={handleDevPriceChange}\n          />\n          <TextField\n            id=\"commonCategory\"\n            select\n            label=\"Обобщённая категория\"\n            className={classes.spaces}\n            value={categoryData.commonCategoryId}\n            onChange={handleComCatChange}\n            variant=\"outlined\"\n            disabled={props.commonCategoryId !== undefined}\n          >\n            {commonCategories.map(comCat => (\n              <MenuItem key={comCat.id} value={comCat.id}>\n                {comCat.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          {step === 1 ? (\n            <React.Fragment>\n              <Grid container item xs={12} justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Включены\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Все\n                  </Typography>\n                </Grid>\n              </Grid>\n              <TransferList\n                left={left}\n                right={right}\n                setLeft={setLeft as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n                setRight={setRight as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n              />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Grid container item xs={12} justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Важные\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Не важные\n                  </Typography>\n                </Grid>\n              </Grid>\n              <TransferList\n                left={important}\n                right={unimportant}\n                setLeft={setImportant as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n                setRight={setUnimportant as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n              />\n            </React.Fragment>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            {step === 1 ? (\n              <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onNext}>\n                Далее\n              </Button>\n            ) : (\n              <React.Fragment>\n                <Grid xs={12} sm={6} item>\n                  <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"outlined\" onClick={onBack}>\n                    Назад\n                  </Button>\n                </Grid>\n                <Grid>\n                  <Button\n                    type=\"submit\"\n                    className={classes.spaces}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={onClick}\n                  >\n                    Обновить\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateCategory;\n","import React, { Dispatch, SetStateAction, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField, Typography } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getCategoryById, getCategoryParamBlocks, getCommonCategories } from 'src/Requests/GetRequests';\nimport { updateCategory } from 'src/Requests/PutRequests';\nimport CommonCategory from 'src/Types/CommonCategory';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport { IIdentifieable, TransferList } from 'src/Components/Admin/Parts/TransferList';\nimport { setCategoryParameterBlocks } from 'src/Requests/PostRequests';\nimport ParameterBlockCreateRequest from 'src/Types/ParameterBlockCreateRequest';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditCategory {\n  id: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  refresher?: IRefresher;\n}\n\nconst EditCategory: React.FC<IEditCategory> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getCategoryById(props.id);\n    const comCats = await getCommonCategories();\n    const paramBlocks = await getCategoryParamBlocks(props.id);\n    if (isMounted) {\n      setCategoryData({\n        name: res.name,\n        description: res.description as string,\n        deliveryPrice: res.deliveryPrice as number,\n        commonCategoryId: res.commonCategoryId as string,\n      });\n      setCommonCategories(comCats);\n      setLeft(paramBlocks.includedBlocks);\n      setRight(paramBlocks.excludedBlocks);\n      setStartImportant(res.parameterBlocks);\n      setLoading(false);\n    }\n  };\n\n  const cloneData = () => ({\n    name: categoryData.name,\n    description: categoryData.description,\n    deliveryPrice: categoryData.deliveryPrice,\n    commonCategoryId: categoryData.commonCategoryId,\n  });\n\n  const getFinalData = (): ParameterBlockCreateRequest[] => {\n    const parBlocks: ParameterBlockCreateRequest[] = [];\n    for (const item of important) {\n      parBlocks.push({ parameterBlockId: item.id, important: true });\n    }\n\n    for (const item of unimportant) {\n      parBlocks.push({ parameterBlockId: item.id, important: true });\n    }\n\n    return parBlocks;\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const [categoryData, setCategoryData] = React.useState({\n    name: '',\n    description: '',\n    deliveryPrice: 0,\n    commonCategoryId: '',\n  });\n  const [commonCategories, setCommonCategories] = React.useState<CommonCategory[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n  const [right, setRight] = React.useState<ParameterBlock[]>([]);\n  const [startImportant, setStartImportant] = React.useState<ParameterBlock[]>([]);\n  const [important, setImportant] = React.useState<ParameterBlock[]>([]);\n  const [unimportant, setUnimportant] = React.useState<ParameterBlock[]>([]);\n  const [left, setLeft] = React.useState<ParameterBlock[]>([]);\n  const [loading, setLoading] = React.useState(true);\n  const [step, setStep] = React.useState(1);\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.description = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleDevPriceChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.deliveryPrice = newPrice;\n    }\n\n    setCategoryData(data);\n  };\n\n  const handleComCatChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.commonCategoryId = event.target.value as string;\n    setCategoryData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (categoryData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (categoryData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      const data = getFinalData();\n      const res = await updateCategory(\n        props.id,\n        categoryData.name,\n        categoryData.description,\n        categoryData.deliveryPrice,\n        categoryData.commonCategoryId,\n      );\n      const resBlocks = await setCategoryParameterBlocks(props.id, data);\n      if (res && props.refresher && resBlocks) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  const onNext = async () => {\n    const imp: ParameterBlock[] = [];\n    const unimp: ParameterBlock[] = [];\n    for (const item of left) {\n      if (startImportant.find(p => p.id === item.id)) {\n        imp.push(item);\n      } else {\n        unimp.push(item);\n      }\n    }\n\n    setImportant(imp);\n    setUnimportant(unimp);\n    setStep(2);\n  };\n\n  const onBack = async () => {\n    setStep(1);\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"categoryName\"\n            className={classes.spaces}\n            value={categoryData.name}\n            onChange={handleNameChange}\n            label=\"Название\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"categoryDescription\"\n            className={classes.spaces}\n            value={categoryData.description}\n            onChange={handleDescriptionChange}\n            label=\"Описание\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"categoryDeliveryPrice\"\n            variant=\"outlined\"\n            className={classes.spaces}\n            type=\"number\"\n            label=\"Цена доставки\"\n            value={categoryData.deliveryPrice}\n            onChange={handleDevPriceChange}\n          />\n          <TextField\n            id=\"commonCategory\"\n            select\n            label=\"Обобщённая категория\"\n            className={classes.spaces}\n            value={categoryData.commonCategoryId}\n            onChange={handleComCatChange}\n            variant=\"outlined\"\n          >\n            {commonCategories.map(comCat => (\n              <MenuItem key={comCat.id} value={comCat.id}>\n                {comCat.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          {step === 1 ? (\n            <React.Fragment>\n              <Grid container item xs={12} justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Включены\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Все\n                  </Typography>\n                </Grid>\n              </Grid>\n              <TransferList\n                left={left}\n                right={right}\n                setLeft={setLeft as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n                setRight={setRight as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n              />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Grid container item xs={12} justifyContent=\"space-evenly\" direction=\"row\">\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Важные\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    Не важные\n                  </Typography>\n                </Grid>\n              </Grid>\n              <TransferList\n                left={important}\n                right={unimportant}\n                setLeft={setImportant as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n                setRight={setUnimportant as Dispatch<SetStateAction<IIdentifieable<string>[]>>}\n              />\n            </React.Fragment>\n          )}\n          <Grid container direction=\"row\" justifyContent=\"flex-end\">\n            {step === 1 ? (\n              <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onNext}>\n                Далее\n              </Button>\n            ) : (\n              <React.Fragment>\n                <Grid xs={12} sm={6} item>\n                  <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"outlined\" onClick={onBack}>\n                    Назад\n                  </Button>\n                </Grid>\n                <Grid>\n                  <Button\n                    type=\"submit\"\n                    className={classes.spaces}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={onClick}\n                  >\n                    Обновить\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditCategory;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { getCategories } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteCategory } from 'src/Requests/DeleteRequests';\nimport CreateCategory from 'src/Components/Admin/Parts/CreateCategory';\nimport EditCategory from 'src/Components/Admin/Parts/EditCategory';\n\nimport { TableStructure } from './TableStructure';\n\ninterface ICompactCategoryList {\n  id: string;\n  name: string;\n}\n\nexport const CompactCategoryList: React.FC<ICompactCategoryList> = props => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 350,\n    },\n    {\n      field: 'deliveryPrice',\n      headerName: 'Цена доставки',\n      type: 'number',\n      width: 150,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteCategory(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые категории.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const getData = getCategories.bind(this, props.name);\n\n  return (\n    <React.Fragment>\n      <TableStructure\n        name=\"Категории\"\n        getData={getData}\n        columns={columns}\n        pageSize={10}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n        compact\n      />\n      <ModalFormDialog\n        name={'Создание категории'}\n        open={createOpen}\n        form={<CreateCategory commonCategoryId={props.id} setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение категории'}\n        open={editOpen}\n        form={<EditCategory id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getCommonCategory } from 'src/Requests/GetRequests';\nimport { updateCommonCategory } from 'src/Requests/PutRequests';\n\nimport { CompactCategoryList } from './CompactCategoryList';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditCommonCategory {\n  id: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  refresher?: IRefresher;\n}\n\nconst EditCommonCategory: React.FC<IEditCommonCategory> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await getCommonCategory(props.id);\n    if (isMounted) {\n      setCommonCategoryData({ name: res.name, description: res.description });\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const [commonCategoryData, setCommonCategoryData] = React.useState({ name: '', description: '' });\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCommonCategoryData({\n      name: event.target.value as string,\n      description: commonCategoryData.description,\n    });\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setCommonCategoryData({\n      name: commonCategoryData.name,\n      description: event.target.value as string,\n    });\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (commonCategoryData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (commonCategoryData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      const res = await updateCommonCategory(props.id, commonCategoryData.name, commonCategoryData.description);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"commonCategoryName\"\n        className={classes.spaces}\n        value={commonCategoryData.name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"commonCategoryDescription\"\n        className={classes.spaces}\n        value={commonCategoryData.description}\n        onChange={handleDescriptionChange}\n        label=\"Описание\"\n        variant=\"outlined\"\n      />\n      <Grid xs={12} sm={12} item>\n        <CompactCategoryList name={commonCategoryData.name} id={props.id} />\n      </Grid>\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Обновить\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EditCommonCategory;\n","import React, { useState } from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getCommonCategories } from 'src/Requests/GetRequests';\nimport { deleteCommonCategory } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateCommonCategory from 'src/Components/Admin/Parts/CreateCommonCategory';\nimport EditCommonCategory from 'src/Components/Admin/Parts/EditCommonCategory';\n\nexport const CommonCategoryList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 400,\n    },\n    {\n      field: 'description',\n      headerName: 'Описание',\n      width: 600,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteCommonCategory(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые товары.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Обобщающие категории\"\n        getData={getCommonCategories}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        editSelected={editSelected}\n        deleteSelected={onDelete}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание общей категории'}\n        open={createOpen}\n        form={<CreateCommonCategory setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение общей категории'}\n        open={editOpen}\n        form={<EditCommonCategory id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getAllCategories } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteCategory } from 'src/Requests/DeleteRequests';\nimport CreateCategory from 'src/Components/Admin/Parts/CreateCategory';\nimport EditCategory from 'src/Components/Admin/Parts/EditCategory';\n\nexport const CategoryList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 350,\n    },\n    {\n      field: 'deliveryPrice',\n      headerName: 'Цена доставки',\n      type: 'number',\n      width: 150,\n    },\n    {\n      field: 'commonCategoryName',\n      headerName: 'Обобщающая категория',\n      width: 400,\n    },\n    {\n      field: 'description',\n      headerName: 'Описание',\n      width: 500,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteCategory(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые категории.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Категории\"\n        getData={getAllCategories}\n        columns={columns}\n        pageSize={10}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание категории'}\n        open={createOpen}\n        form={<CreateCategory setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение категории'}\n        open={editOpen}\n        form={<EditCategory id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from 'recharts';\n\nimport SalesTimeStatistics from 'src/Types/SalesTimeStatistics';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      margin: theme.spacing(2, 4),\n      textShadow: '#CCC 1px 1px 2px',\n    },\n    chart: {\n      margin: theme.spacing(1, 2, 1, 1),\n    },\n  }),\n);\n\ninterface IDataGraph {\n  name: string;\n  data: SalesTimeStatistics[];\n  xName: string;\n  yName: string;\n  color: string;\n}\n\nexport const DataGraph: React.FC<IDataGraph> = props => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography align=\"center\" variant=\"h5\" style={{ color: props.color }} className={classes.title} gutterBottom>\n        {props.name}\n      </Typography>\n      <Paper variant=\"outlined\">\n        <LineChart width={500} height={200} data={props.data} className={classes.chart}>\n          <Line type=\"monotone\" dataKey=\"data\" stroke={props.color} name={props.yName} />\n          <XAxis dataKey=\"date\" name={props.xName} />\n          <Tooltip />\n        </LineChart>\n      </Paper>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport SalesStatistics from 'src/Types/SalesStatistics';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      margin: theme.spacing(2, 4),\n      textShadow: '#CCC 1px 1px 2px',\n    },\n    chart: {\n      margin: theme.spacing(1, 2, 1, 1),\n      minWidth: 500,\n      minHeight: 500,\n    },\n    doughnut: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IDonutSalesStatisticsDiagram {\n  name: string;\n  data: SalesStatistics;\n  colors: string[];\n}\n\nexport const DonutSalesStatisticsDiagram: React.FC<IDonutSalesStatisticsDiagram> = props => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const pieChartData = {\n    labels: ['Завершены', 'Выполняются', 'Отказ', 'Отменены'],\n    datasets: [\n      {\n        label: 'Число покупок',\n        data: [props.data.finished, props.data.notCompleted, props.data.refused, props.data.canceled],\n        backgroundColor: props.colors,\n        hoverOffset: 10,\n      },\n    ],\n  };\n\n  return (\n    <Grid\n      item\n      xs={12}\n      direction=\"column\"\n      container\n      justifyContent=\"flex-start\"\n      alignContent=\"center\"\n      className={classes.chart}\n    >\n      <Typography align=\"center\" variant=\"h5\" className={classes.title} gutterBottom>\n        {props.name}\n      </Typography>\n      <Paper variant=\"outlined\">\n        <Doughnut className={classes.doughnut} data={pieChartData} />\n      </Paper>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { Button, createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport { getStatFile } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: theme.spacing(10),\n      color: '#CCC',\n      backgroundColor: '#444',\n    },\n  }),\n);\n\nconst CreateFileReport = () => {\n  const classes = useStyles();\n\n  const now = new Date();\n  const monthBegginig = new Date(now.getFullYear(), now.getMonth(), 1);\n  const monthEnd = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n  const [selectedFromDate, setFromSelectedDate] = React.useState<Date>(monthBegginig);\n  const [selectedToDate, setToSelectedDate] = React.useState<Date>(monthEnd);\n\n  const handleFromDateChange = (date: Date | null) => {\n    setFromSelectedDate(date as Date);\n  };\n\n  const handleToDateChange = (date: Date | null) => {\n    setToSelectedDate(date as Date);\n  };\n\n  const onClick = async () => {\n    const res = await getStatFile(selectedFromDate, selectedToDate);\n    if (res) {\n      const link = document.createElement('a');\n      link.download = '';\n      link.href = `https://localhost:5001${res}`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container direction=\"row\">\n        <Grid item xs={12} sm={4} container justifyContent=\"flex-end\">\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog-from\"\n            label=\"От\"\n            format=\"dd.MM.yyyy\"\n            value={selectedFromDate}\n            onChange={handleFromDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'Изменить дату',\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} container justifyContent=\"center\">\n          <KeyboardDatePicker\n            margin=\"normal\"\n            id=\"date-picker-dialog-to\"\n            label=\"До\"\n            format=\"dd.MM.yyyy\"\n            value={selectedToDate}\n            onChange={handleToDateChange}\n            KeyboardButtonProps={{\n              'aria-label': 'Изменить дату',\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} container justifyContent=\"flex-start\" alignContent=\"center\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n            Получить отчёт\n          </Button>\n        </Grid>\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default CreateFileReport;\n","import React from 'react';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useTheme } from '@material-ui/core/styles';\nimport { createStyles, Grid, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\nimport { Doughnut } from 'react-chartjs-2';\n\nimport WorkersSales from 'src/Types/WorkersSales';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      margin: theme.spacing(2, 4),\n      textShadow: '#CCC 1px 1px 2px',\n    },\n    chart: {\n      margin: theme.spacing(1, 2, 1, 1),\n      minWidth: 500,\n      minHeight: 500,\n    },\n    doughnut: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IDonutSellers {\n  name: string;\n  data: WorkersSales;\n  colors: string[];\n}\n\nexport const DonutSellers: React.FC<IDonutSellers> = props => {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const pieChartData = {\n    labels: props.data.names,\n    datasets: [\n      {\n        label: 'Число покупок',\n        data: props.data.data,\n        backgroundColor: props.colors,\n        hoverOffset: 10,\n      },\n    ],\n  };\n\n  return (\n    <Grid\n      item\n      xs={12}\n      direction=\"column\"\n      container\n      justifyContent=\"flex-start\"\n      alignContent=\"center\"\n      className={classes.chart}\n    >\n      <Typography align=\"center\" variant=\"h5\" className={classes.title} gutterBottom>\n        {props.name}\n      </Typography>\n      <Paper variant=\"outlined\">\n        <Doughnut className={classes.doughnut} data={pieChartData} />\n      </Paper>\n    </Grid>\n  );\n};\n","import React from 'react';\nimport { createStyles, Divider, Grid, List, makeStyles, Paper, Theme, Typography } from '@material-ui/core';\n\nimport NavigationBar from 'src/Components/Admin/Parts/NavigationBar';\nimport { getMonthSales, getOrdersForMonth, getTotalSales, getWorkersSales } from 'src/Requests/GetRequests';\nimport { DataGraph } from 'src/Components/Admin/Parts/DataGraph';\nimport SalesTimeStatistics from 'src/Types/SalesTimeStatistics';\nimport { DonutSalesStatisticsDiagram } from 'src/Components/Admin/Parts/DonutSalesStatisticsDiagram';\nimport SalesStatistics from 'src/Types/SalesStatistics';\nimport CreateFileReport from 'src/Components/Admin/Parts/CreateFileReport';\nimport { DonutSellers } from 'src/Components/Admin/Parts/DonutSellers';\nimport WorkersSales from 'src/Types/WorkersSales';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mainTitle: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    title: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    mainGrid: {\n      paddingBottom: theme.spacing(2),\n    },\n  }),\n);\n\nexport const AdminPage = () => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const resPFM = await getOrdersForMonth(0, true);\n    const resPrCFM = await getOrdersForMonth(1, true);\n    const resMAFM = await getOrdersForMonth(2, true);\n\n    const resPFMA = await getMonthSales(0);\n    const resPrCFMA = await getMonthSales(1);\n    const resMAFMA = await getMonthSales(2);\n\n    const resPTA = await getTotalSales(0);\n    const resPrCTA = await getTotalSales(1);\n    const resMATA = await getTotalSales(2);\n\n    const resPFMW = await getWorkersSales(0);\n    const resPrCFMW = await getWorkersSales(1);\n    const resMAFMW = await getWorkersSales(2);\n\n    if (isMounted) {\n      setPurchasesForMonth(arrDateParser(resPFM));\n      setProductsForMonth(arrDateParser(resPrCFM));\n      setMoneyForMonth(arrDateParser(resMAFM));\n\n      setPurchasesForMonthAll(resPFMA);\n      setProductsForMonthAll(resPrCFMA);\n      setMoneyForMonthAll(resMAFMA);\n\n      setPurchasesTotalAll(resPTA);\n      setProductsTotalAll(resPrCTA);\n      setMoneyTotalAll(resMATA);\n\n      setPurchasesWorkers(resPFMW);\n      setProductsWorkers(resPrCFMW);\n      setMoneyWorkers(resMAFMW);\n    }\n  };\n\n  const arrDateParser = (orig: SalesTimeStatistics[]) => {\n    const arr = [] as SalesTimeStatistics[];\n    orig.forEach(function (item) {\n      const newItem = { data: item.data, date: dateParse(item.date) };\n      arr.push(newItem);\n    });\n\n    return arr;\n  };\n\n  const dateParse = (date: string) => {\n    const val = new Date(date);\n    return val.toLocaleDateString().substring(0, 5);\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n\n  const getDefaultSalesStat = () => ({ finished: 1, notCompleted: 1, refused: 1, canceled: 1 });\n\n  const [purchasesForMonth, setPurchasesForMonth] = React.useState<SalesTimeStatistics[]>([]);\n  const [productsForMonth, setProductsForMonth] = React.useState<SalesTimeStatistics[]>([]);\n  const [moneyForMonth, setMoneyForMonth] = React.useState<SalesTimeStatistics[]>([]);\n\n  const [purchasesForMonthAll, setPurchasesForMonthAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n  const [productsForMonthAll, setProductsForMonthAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n  const [moneyForMonthAll, setMoneyForMonthAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n\n  const [purchasesTotalAll, setPurchasesTotalAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n  const [productsTotalAll, setProductsTotalAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n  const [moneyTotalAll, setMoneyTotalAll] = React.useState<SalesStatistics>(getDefaultSalesStat());\n\n  const [purchasesWorkers, setPurchasesWorkers] = React.useState<WorkersSales>({ names: [], data: [] });\n  const [productsWorkers, setProductsWorkers] = React.useState<WorkersSales>({ names: [], data: [] });\n  const [moneyWorkers, setMoneyWorkers] = React.useState<WorkersSales>({ names: [], data: [] });\n\n  const role = sessionStorage.getItem('signed');\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <List>\n        <Typography variant=\"h3\" align=\"center\" className={classes.mainTitle}>\n          Общая Статистика\n        </Typography>\n        <Divider />\n        <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n          Завершённые заказы\n        </Typography>\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" className={classes.mainGrid}>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DataGraph\n                color=\"#7C07A9\"\n                data={purchasesForMonth}\n                xName=\"Дата\"\n                yName=\"Число покупок\"\n                name=\"Покупки за месяц\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DataGraph\n                color=\"#FFA100\"\n                data={productsForMonth}\n                xName=\"Дата\"\n                yName=\"Количество купленных продуктов\"\n                name=\"Товары за месяц\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DataGraph color=\"#0ACF00\" data={moneyForMonth} xName=\"Дата\" yName=\"Выручка\" name=\"Выручка за месяц\" />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n          Заказы за месяц\n        </Typography>\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" className={classes.mainGrid}>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#906CD7', '#7746D7', '#2A0671', '#482A83']}\n                data={purchasesForMonthAll}\n                name=\"Статистика заказов за месяц\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#FFBE73', '#FFA640', '#A65900', '#FF8900']}\n                data={productsForMonthAll}\n                name=\"Статистика продуктов за месяц\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#B0F26D', '#98F23D', '#4B9500', '#6CAC2B']}\n                data={moneyForMonthAll}\n                name=\"Статистика выручки за месяц\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Divider />\n        <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n          Заказы за всё время\n        </Typography>\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\" className={classes.mainGrid}>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#906CD7', '#7746D7', '#2A0671', '#482A83']}\n                data={purchasesTotalAll}\n                name=\"Статистика заказов\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#FFBE73', '#FFA640', '#A65900', '#FF8900']}\n                data={productsTotalAll}\n                name=\"Статистика продуктов\"\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={4} container justifyContent=\"center\">\n            <Paper elevation={3}>\n              <DonutSalesStatisticsDiagram\n                colors={['#B0F26D', '#98F23D', '#4B9500', '#6CAC2B']}\n                data={moneyTotalAll}\n                name=\"Статистика выручки\"\n              />\n            </Paper>\n          </Grid>\n        </Grid>\n        <Divider />\n        {role !== 'Admin' && purchasesWorkers?.data?.length > 0 && (\n          <React.Fragment>\n            <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n              Продажи работников\n            </Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\" className={classes.mainGrid}>\n              <Grid item xs={12} sm={4} container justifyContent=\"center\">\n                <Paper elevation={3}>\n                  <DonutSellers\n                    colors={['#906CD7', '#7746D7', '#2A0671', '#482A83']}\n                    data={purchasesWorkers}\n                    name=\"Статистика заказов\"\n                  />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4} container justifyContent=\"center\">\n                <Paper elevation={3}>\n                  <DonutSellers\n                    colors={['#FFBE73', '#FFA640', '#A65900', '#FF8900']}\n                    data={productsWorkers}\n                    name=\"Статистика продуктов\"\n                  />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} sm={4} container justifyContent=\"center\">\n                <Paper elevation={3}>\n                  <DonutSellers\n                    colors={['#B0F26D', '#98F23D', '#4B9500', '#6CAC2B']}\n                    data={moneyWorkers}\n                    name=\"Статистика выручки\"\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Divider />\n          </React.Fragment>\n        )}\n        <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n          Сформировать отчёт за период\n        </Typography>\n        <CreateFileReport />\n      </List>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createParameterBlock } from 'src/Requests/PostRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateParameterBlock {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateParameterBlock: React.FC<ICreateParameterBlock> = props => {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState('');\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else {\n      const res = await createParameterBlock(name);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"commonCategoryName\"\n        className={classes.spaces}\n        value={name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Создать\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateParameterBlock;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getParameterBlock } from 'src/Requests/GetRequests';\nimport { updateParameterBlock } from 'src/Requests/PutRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditParameterBlock {\n  id: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  refresher?: IRefresher;\n}\n\nconst EditParameterBlock: React.FC<IEditParameterBlock> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await getParameterBlock(props.id);\n    if (isMounted) {\n      setName(res.name as string);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const [name, setName] = React.useState('');\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else {\n      const res = await updateParameterBlock(props.id, name);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"commonCategoryName\"\n        className={classes.spaces}\n        value={name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Обновить\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EditParameterBlock;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getParamBlocks } from 'src/Requests/GetRequests';\nimport { deleteParameterBlock } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateParameterBlock from 'src/Components/Admin/Parts/CreateParameterBlock';\nimport EditParameterBlock from 'src/Components/Admin/Parts/EditParameterBlock';\n\nexport const ParameterBlockList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 400,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteParameterBlock(id);\n    if (res === 0) {\n      setError(\n        'Не удалось удалить объект. Возможно, существуют зависимые характеристики или объект используется в категории.',\n      );\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Блоки параметров\"\n        getData={getParamBlocks}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        editSelected={editSelected}\n        deleteSelected={onDelete}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание блока параметров'}\n        open={createOpen}\n        form={<CreateParameterBlock setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение блока параметров'}\n        open={editOpen}\n        form={<EditParameterBlock id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, CircularProgress, FormControlLabel, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createParameter } from 'src/Requests/PostRequests';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport { getParamBlocks } from 'src/Requests/GetRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateParameter {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateParameter: React.FC<ICreateParameter> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getParamBlocks();\n    if (isMounted) {\n      setParameterBlocks(res);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: parameterData.name,\n    important: parameterData.important,\n    parameterBlockId: parameterData.parameterBlockId,\n    range: parameterData.range,\n    minValue: parameterData.minValue,\n    maxValue: parameterData.maxValue,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState({\n    name: '',\n    important: true,\n    parameterBlockId: '',\n    range: true,\n    minValue: 0,\n    maxValue: 0,\n  });\n  const [parameterBlocks, setParameterBlocks] = React.useState<ParameterBlock[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleMinValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.minValue = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleMaxValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.maxValue = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleRangeChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n    const data = cloneData();\n    data.range = checked;\n    setParameterData(data);\n  };\n\n  const handleImportantChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n    const data = cloneData();\n    data.important = checked;\n    setParameterData(data);\n  };\n\n  const handleBlockChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterBlockId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (parameterData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (parameterData.range && parameterData.minValue / 1 >= parameterData.maxValue / 1) {\n      setMessage('Введите корректные значения минимума и максимума');\n      setOpen(true);\n    } else {\n      const res = await createParameter(\n        parameterData.name,\n        parameterData.important,\n        parameterData.range,\n        parameterData.minValue,\n        parameterData.maxValue,\n        parameterData.parameterBlockId,\n      );\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={parameterData.name}\n            onChange={handleNameChange}\n            label=\"Название\"\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={parameterData.important}\n                onChange={handleImportantChange}\n                name=\"important\"\n                color=\"primary\"\n              />\n            }\n            label=\"Важный\"\n            className={classes.spaces}\n          />\n          <TextField\n            id=\"parameterBlock\"\n            select\n            label=\"Блок параметров\"\n            className={classes.spaces}\n            value={parameterData.parameterBlockId}\n            onChange={handleBlockChange}\n            variant=\"outlined\"\n          >\n            {parameterBlocks.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <FormControlLabel\n            control={\n              <Checkbox checked={parameterData.range} onChange={handleRangeChange} name=\"range\" color=\"primary\" />\n            }\n            label=\"Диапазон\"\n            className={classes.spaces}\n          />\n          {parameterData.range && (\n            <Grid container direction=\"row\">\n              <TextField\n                id=\"parameterMin\"\n                className={classes.spaces}\n                value={parameterData.minValue}\n                onChange={handleMinValueChange}\n                label=\"Минимум\"\n                variant=\"outlined\"\n                type=\"number\"\n              />\n              <TextField\n                id=\"parameterMax\"\n                className={classes.spaces}\n                value={parameterData.maxValue}\n                onChange={handleMaxValueChange}\n                label=\"Максимум\"\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateParameter;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createParameterValue } from 'src/Requests/PostRequests';\nimport { getTechListParameters } from 'src/Requests/GetRequests';\nimport Parameter from 'src/Types/Parameter';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateParameterValue {\n  parameterId?: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateParameterValue: React.FC<ICreateParameterValue> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getTechListParameters();\n    if (isMounted) {\n      setParameters(res);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    value: parameterData.value,\n    parameterId: props.parameterId ?? parameterData.parameterId,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState({\n    value: '',\n    parameterId: props.parameterId ?? '',\n  });\n\n  const [parameters, setParameters] = React.useState<Parameter[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.value = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleParameterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (parameterData.value.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (parameterData.parameterId && parameterData.parameterId.length < 1) {\n      setMessage('Укажите параметр');\n      setOpen(true);\n    } else {\n      const res = await createParameterValue(parameterData.parameterId, parameterData.value);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={parameterData.value}\n            onChange={handleValueChange}\n            label=\"Значение\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"parameter\"\n            select\n            label=\"Параметр\"\n            className={classes.spaces}\n            value={parameterData.parameterId}\n            onChange={handleParameterChange}\n            variant=\"outlined\"\n            disabled={props.parameterId !== undefined}\n          >\n            {parameters.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateParameterValue;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getParameterValue, getTechListParameters } from 'src/Requests/GetRequests';\nimport Parameter from 'src/Types/Parameter';\nimport { updateParameterValue } from 'src/Requests/PutRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditParameterValue {\n  id: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditParameterValue: React.FC<IEditParameterValue> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getTechListParameters();\n    const data = await getParameterValue(props.id);\n    if (isMounted) {\n      setParameters(res);\n      setParameterData({\n        value: data.value,\n        parameterId: data.parameterId,\n      });\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    value: parameterData.value,\n    parameterId: parameterData.parameterId,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState({\n    value: '',\n    parameterId: '',\n  });\n  const [parameters, setParameters] = React.useState<Parameter[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.value = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleParameterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (parameterData.value.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (parameterData.parameterId && parameterData.parameterId.length < 1) {\n      setMessage('Укажите параметр');\n      setOpen(true);\n    } else {\n      const res = await updateParameterValue(props.id, parameterData.parameterId, parameterData.value);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={parameterData.value}\n            onChange={handleValueChange}\n            label=\"Значение\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"parameter\"\n            select\n            label=\"Параметр\"\n            className={classes.spaces}\n            value={parameterData.parameterId}\n            onChange={handleParameterChange}\n            variant=\"outlined\"\n          >\n            {parameters.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Обновить\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditParameterValue;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { getValuesOfParameter } from 'src/Requests/GetRequests';\nimport { deleteParameterValue } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateParameterValue from 'src/Components/Admin/Parts/CreateParameterValue';\nimport EditParameterValue from 'src/Components/Admin/Parts/EditParameterValue';\n\nimport { TableStructure } from './TableStructure';\n\ninterface IParameterValueList {\n  id: string;\n}\n\nexport const ParameterValueList: React.FC<IParameterValueList> = props => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'value',\n      headerName: 'Значение',\n      width: 500,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteParameterValue(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые блоки или объект используется в продукте.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const getData = getValuesOfParameter.bind(this, props.id);\n\n  return (\n    <React.Fragment>\n      <TableStructure\n        name=\"Значения параметров\"\n        getData={getData}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        editSelected={editSelected}\n        deleteSelected={onDelete}\n        open={open}\n        compact\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание значения параметра'}\n        open={createOpen}\n        form={<CreateParameterValue parameterId={props.id} setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение значения параметра'}\n        open={editOpen}\n        form={<EditParameterValue id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, CircularProgress, FormControlLabel, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { updateParameter } from 'src/Requests/PutRequests';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport { getParamBlocks, getParameter } from 'src/Requests/GetRequests';\n\nimport { ParameterValueList } from './ParameterValueList';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditParameter {\n  id: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditParameter: React.FC<IEditParameter> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getParamBlocks();\n    const data = await getParameter(props.id);\n    if (isMounted) {\n      setParameterData({\n        name: data.name,\n        important: data.important,\n        range: data.range,\n        minValue: data.minValue,\n        maxValue: data.maxValue,\n        parameterBlockId: data.parameterBlockId,\n      });\n      setParameterBlocks(res);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: parameterData.name,\n    important: parameterData.important,\n    parameterBlockId: parameterData.parameterBlockId,\n    range: parameterData.range,\n    minValue: parameterData.minValue,\n    maxValue: parameterData.maxValue,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState({\n    name: '',\n    important: true,\n    parameterBlockId: '',\n    range: true,\n    minValue: 0,\n    maxValue: 0,\n  });\n  const [parameterBlocks, setParameterBlocks] = React.useState<ParameterBlock[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleMinValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.minValue = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleMaxValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.maxValue = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleRangeChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n    const data = cloneData();\n    data.range = checked;\n    setParameterData(data);\n  };\n\n  const handleImportantChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n    const data = cloneData();\n    data.important = checked;\n    setParameterData(data);\n  };\n\n  const handleBlockChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterBlockId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (parameterData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (parameterData.range && parameterData.minValue / 1 >= parameterData.maxValue / 1) {\n      setMessage('Введите корректные значения минимума и максимума');\n      setOpen(true);\n    } else {\n      const res = await updateParameter(\n        props.id,\n        parameterData.name,\n        parameterData.important,\n        parameterData.range,\n        parameterData.minValue,\n        parameterData.maxValue,\n        parameterData.parameterBlockId,\n      );\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={parameterData.name}\n            onChange={handleNameChange}\n            label=\"Название\"\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={parameterData.important}\n                onChange={handleImportantChange}\n                name=\"important\"\n                color=\"primary\"\n              />\n            }\n            label=\"Важный\"\n            className={classes.spaces}\n          />\n          <TextField\n            id=\"parameterBlock\"\n            select\n            label=\"Блок параметров\"\n            className={classes.spaces}\n            value={parameterData.parameterBlockId}\n            onChange={handleBlockChange}\n            variant=\"outlined\"\n          >\n            {parameterBlocks.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <FormControlLabel\n            control={\n              <Checkbox checked={parameterData.range} onChange={handleRangeChange} name=\"range\" color=\"primary\" />\n            }\n            label=\"Диапазон\"\n            className={classes.spaces}\n          />\n          {parameterData.range ? (\n            <Grid container direction=\"row\">\n              <TextField\n                id=\"parameterMin\"\n                className={classes.spaces}\n                value={parameterData.minValue}\n                onChange={handleMinValueChange}\n                label=\"Минимум\"\n                variant=\"outlined\"\n                type=\"number\"\n              />\n              <TextField\n                id=\"parameterMax\"\n                className={classes.spaces}\n                value={parameterData.maxValue}\n                onChange={handleMaxValueChange}\n                label=\"Максимум\"\n                variant=\"outlined\"\n                type=\"number\"\n              />\n            </Grid>\n          ) : (\n            <ParameterValueList id={props.id} />\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditParameter;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getTechParameters } from 'src/Requests/GetRequests';\nimport { deleteParameter } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateParameter from 'src/Components/Admin/Parts/CreateParameter';\nimport EditParameter from 'src/Components/Admin/Parts/EditParameter';\n\nexport const TechParameterList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 400,\n    },\n    {\n      field: 'important',\n      headerName: 'Важный',\n      width: 130,\n      type: 'boolean',\n    },\n    {\n      field: 'range',\n      headerName: 'Диапазон',\n      width: 140,\n      type: 'boolean',\n    },\n    {\n      field: 'minValue',\n      headerName: 'Мин.знач.',\n      width: 150,\n      type: 'number',\n    },\n    {\n      field: 'maxValue',\n      headerName: 'Макс.знач.',\n      width: 150,\n      type: 'number',\n    },\n    {\n      field: 'parameterBlockName',\n      headerName: 'Блок',\n      width: 400,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteParameter(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые блоки или объект используется в продукте.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Параметры\"\n        getData={getTechParameters}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        editSelected={editSelected}\n        deleteSelected={onDelete}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание параметра'}\n        open={createOpen}\n        form={<CreateParameter setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение параметра'}\n        open={editOpen}\n        form={<EditParameter id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { registerWorker } from 'src/Requests/PostRequests';\nimport { getAllRegions, getOutlets, getWarehouses } from 'src/Requests/GetRequests';\nimport Outlet from 'src/Types/Outlet';\nimport Warehouse from 'src/Types/Warehouse';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IRegisterWorker {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RegisterWorker: React.FC<IRegisterWorker> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const regions = await getAllRegions();\n    if (isMounted) {\n      setRegions(regions);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    login: parameterData.login,\n    password: parameterData.password,\n    email: parameterData.email,\n    phoneNumber: parameterData.phoneNumber,\n    firstName: parameterData.firstName,\n    secondName: parameterData.secondName,\n    roleName: parameterData.roleName,\n    regionId: parameterData.regionId,\n    cityId: parameterData.cityId,\n    outletId: parameterData.outletId,\n    warehouseId: parameterData.warehouseId,\n    outletWorker: parameterData.outletWorker,\n  });\n\n  const [parameterData, setParameterData] = React.useState({\n    login: '',\n    password: '',\n    email: '',\n    phoneNumber: '',\n    firstName: '',\n    secondName: '',\n    roleName: '',\n    regionId: 0,\n    cityId: 0,\n    outletId: 0,\n    warehouseId: 0,\n    outletWorker: true,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [outlets, setOutlets] = React.useState<Outlet[]>([]);\n  const [warehouses, setWarehouses] = React.useState<Warehouse[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.login = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.password = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.email = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handlePhoneNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.firstName = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.secondName = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleRoleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.roleName = event.target.value as string;\n    if (data.roleName === 'WarehouseWorker') {\n      data.outletWorker = false;\n    } else {\n      data.outletWorker = true;\n    }\n    setParameterData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.regionId = event.target.value as number;\n    const region = regions.find(r => r.id === data.regionId);\n    if (region) {\n      setCities(region.cities);\n    }\n\n    setParameterData(data);\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    if (data.outletWorker) {\n      const ores = await getOutlets(data.cityId);\n      setOutlets(ores);\n    } else {\n      const wres = await getWarehouses(data.cityId);\n      setWarehouses(wres);\n    }\n    setParameterData(data);\n  };\n\n  const handleOutletChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.outletId = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleWarehouseChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.warehouseId = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await registerWorker(\n        parameterData.login,\n        parameterData.password,\n        parameterData.email,\n        parameterData.phoneNumber,\n        parameterData.firstName,\n        parameterData.secondName,\n        parameterData.roleName,\n        parameterData.outletId,\n        parameterData.warehouseId,\n        parameterData.outletWorker,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n              <TextField\n                id=\"login\"\n                className={classes.spaces}\n                value={parameterData.login}\n                onChange={handleLoginChange}\n                label=\"Логин\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"password\"\n                className={classes.spaces}\n                value={parameterData.password}\n                onChange={handlePasswordChange}\n                label=\"Пароль\"\n                variant=\"outlined\"\n                type=\"password\"\n              />\n            </Grid>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n              <TextField\n                id=\"firstName\"\n                className={classes.spaces}\n                value={parameterData.firstName}\n                onChange={handleFirstNameChange}\n                label=\"Имя\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"secondName\"\n                className={classes.spaces}\n                value={parameterData.secondName}\n                onChange={handleSecondNameChange}\n                label=\"Фамилия\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n              <TextField\n                id=\"email\"\n                className={classes.spaces}\n                value={parameterData.email}\n                onChange={handleEmailChange}\n                label=\"Email\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"phone\"\n                className={classes.spaces}\n                value={parameterData.phoneNumber}\n                onChange={handlePhoneNumberChange}\n                label=\"Телефон\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <TextField\n              id=\"role\"\n              select\n              label=\"Роль\"\n              className={classes.spaces}\n              value={parameterData.roleName}\n              onChange={handleRoleChange}\n            >\n              <MenuItem key={0} value={'Courier'}>\n                Курьер\n              </MenuItem>\n              <MenuItem key={1} value={'Manager'}>\n                Менеджер\n              </MenuItem>\n              <MenuItem key={2} value={'ShopAssistant'}>\n                Продавец\n              </MenuItem>\n              <MenuItem key={3} value={'WarehouseWorker'}>\n                Работник склада\n              </MenuItem>\n            </TextField>\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={parameterData.regionId}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {parameterData.regionId !== 0 && (\n              <TextField\n                id=\"city\"\n                select\n                label=\"Город\"\n                className={classes.spaces}\n                value={parameterData.cityId}\n                onChange={handleCityChange}\n                variant=\"outlined\"\n              >\n                {cities.map(p => (\n                  <MenuItem key={p.id} value={p.id}>\n                    {p.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            )}\n            {parameterData.cityId !== 0 && (\n              <React.Fragment>\n                {parameterData.outletWorker ? (\n                  <TextField\n                    id=\"outlet\"\n                    select\n                    label=\"Магазин\"\n                    className={classes.spaces}\n                    value={parameterData.outletId}\n                    onChange={handleOutletChange}\n                    variant=\"outlined\"\n                  >\n                    {outlets.map(p => (\n                      <MenuItem key={p.id} value={p.id}>\n                        {p.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                ) : (\n                  <TextField\n                    id=\"warehouse\"\n                    select\n                    label=\"Склад\"\n                    className={classes.spaces}\n                    value={parameterData.warehouseId}\n                    onChange={handleWarehouseChange}\n                    variant=\"outlined\"\n                  >\n                    {warehouses.map(p => (\n                      <MenuItem key={p.id} value={p.id}>\n                        {p.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default RegisterWorker;\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridSelectionModel } from '@material-ui/data-grid';\nimport { createStyles, Fab, Grid, makeStyles, Snackbar, Theme, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Alert } from '@material-ui/lab';\n\nimport NavigationBar from 'src/Components/Admin/Parts/NavigationBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    floating: {\n      padding: theme.spacing(3),\n    },\n    fabBlue: {\n      color: theme.palette.common.white,\n      backgroundColor: '#2979ff',\n      '&:hover': {\n        backgroundColor: '#5393ff',\n      },\n    },\n    fabRed: {\n      color: theme.palette.common.white,\n      backgroundColor: '#ff1744',\n      '&:hover': {\n        backgroundColor: '#b2102f',\n      },\n    },\n    fabGreen: {\n      color: theme.palette.common.white,\n      backgroundColor: '#14D100',\n      '&:hover': {\n        backgroundColor: '#329D27',\n      },\n    },\n    fabViolet: {\n      color: theme.palette.common.white,\n      backgroundColor: '#673ab7',\n      '&:hover': {\n        backgroundColor: '#8561c5',\n      },\n    },\n  }),\n);\n\ninterface IUserType {\n  id: string;\n  banned: boolean;\n}\n\ninterface IUserTable {\n  name: string;\n  getData: () => Promise<IUserType[]>;\n  columns: GridColDef[];\n  pageSize: number;\n  setSelected?: (id: string) => void;\n  banSelected?: (id: string) => Promise<boolean>;\n  unbanSelected?: (id: string) => Promise<boolean>;\n  editSelected?: (selectedId: string, refrFun: () => void) => void;\n  createNew?: (update: () => void) => void;\n  open?: boolean;\n  setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\n  error?: string;\n}\n\nexport const UserTable = <Type,>(props: IUserTable) => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await props.getData();\n    if (isMounted) {\n      setData(res);\n      const page = [...res];\n      setPage(page);\n    }\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const { pageSize } = props;\n  const [data, setData] = useState<IUserType[]>([]);\n  const [dataPage, setPage] = useState<IUserType[]>([]);\n  const [pageNum, setPageNum] = useState<number>(0);\n  const [selectedItem, setSelectedItem] = useState<string>();\n\n  const onPageChange = (page: number, details?: unknown) => {\n    const paged = [...data];\n    setPage(paged);\n    setPageNum(page);\n  };\n\n  const onSelection = (selectionModel: GridSelectionModel, details?: unknown) => {\n    if (selectionModel.length > 0) {\n      setSelectedItem(selectionModel[0] as string);\n      if (props.setSelected) {\n        props.setSelected(selectionModel[0] as string);\n      }\n    }\n  };\n\n  const onBan = async () => {\n    if (selectedItem && props.banSelected) {\n      const res = await props.banSelected(selectedItem);\n      if (res) {\n        refreshData();\n      }\n    }\n  };\n\n  const onUnban = async () => {\n    if (selectedItem && props.unbanSelected) {\n      const res = await props.unbanSelected(selectedItem);\n      if (res) {\n        refreshData();\n      }\n    }\n  };\n\n  const onCreate = async () => {\n    if (props.createNew) {\n      props.createNew(refreshData.bind(this));\n    }\n  };\n\n  const onEdit = async () => {\n    if (selectedItem && props.editSelected) {\n      props.editSelected(selectedItem, refreshData.bind(this));\n    }\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      {props.setOpen && props.error && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={props.open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity=\"error\">\n            {props.error}\n          </Alert>\n        </Snackbar>\n      )}\n      <Grid direction=\"column\" className={classes.floating} container alignContent=\"stretch\">\n        <Typography align=\"center\" variant=\"h4\">\n          {props.name}\n        </Typography>\n        <DataGrid\n          style={{ minHeight: 650 }}\n          rows={dataPage}\n          page={pageNum}\n          rowCount={data.length}\n          columns={props.columns}\n          pageSize={pageSize}\n          rowsPerPageOptions={[pageSize]}\n          onPageChange={onPageChange}\n          onSelectionModelChange={onSelection}\n        />\n        <Grid className={classes.floating} direction=\"row\" container justifyContent=\"flex-end\" alignContent=\"stretch\">\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!props.createNew}\n              variant=\"extended\"\n              className={classes.fabBlue}\n              color=\"inherit\"\n              aria-label=\"add\"\n              onClick={onCreate}\n            >\n              <AddIcon />\n              Добавить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!selectedItem || selectedItem === '' || !props.editSelected}\n              variant=\"extended\"\n              className={classes.fabViolet}\n              color=\"inherit\"\n              aria-label=\"edit\"\n              onClick={onEdit}\n            >\n              <EditIcon />\n              Изменить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            {selectedItem && dataPage?.find(s => s.id === selectedItem)?.banned ? (\n              <Fab\n                disabled={!selectedItem || selectedItem === '' || !props.unbanSelected}\n                variant=\"extended\"\n                className={classes.fabGreen}\n                color=\"inherit\"\n                aria-label=\"delete\"\n                onClick={onUnban}\n              >\n                <DeleteIcon />\n                Разблокировать\n              </Fab>\n            ) : (\n              <Fab\n                disabled={!selectedItem || selectedItem === '' || !props.banSelected}\n                variant=\"extended\"\n                className={classes.fabRed}\n                color=\"inherit\"\n                aria-label=\"delete\"\n                onClick={onBan}\n              >\n                <DeleteIcon />\n                Заблокировать\n              </Fab>\n            )}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getAllRegions, getOutlets, getWarehouses, getWorker } from 'src/Requests/GetRequests';\nimport Outlet from 'src/Types/Outlet';\nimport Warehouse from 'src/Types/Warehouse';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\nimport { updateWorker } from 'src/Requests/PutRequests';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditWorkerInfo {\n  id: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditWorkerInfo: React.FC<IEditWorkerInfo> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getWorker(props.id);\n    const regions = await getAllRegions();\n    if (res.outletWorker && isMounted) {\n      const ores = await getOutlets(res.cityId);\n      setOutlets(ores);\n    } else {\n      const wres = await getWarehouses(res.cityId);\n      setWarehouses(wres);\n    }\n    if (isMounted) {\n      setParameterData({\n        login: res.userName,\n        email: res.email,\n        phoneNumber: res.phoneNumber,\n        firstName: res.firstName,\n        secondName: res.secondName,\n        roleName: res.role,\n        regionId: res.regionId,\n        cityId: res.cityId,\n        outletId: res.outletId,\n        warehouseId: res.warehouseId,\n        outletWorker: res.outletWorker,\n      });\n      setRegions(regions);\n      const reg = regions.find(r => r.id === res.regionId);\n      if (reg) {\n        setCities(reg.cities);\n      }\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    login: parameterData.login,\n    email: parameterData.email,\n    phoneNumber: parameterData.phoneNumber,\n    firstName: parameterData.firstName,\n    secondName: parameterData.secondName,\n    roleName: parameterData.roleName,\n    regionId: parameterData.regionId,\n    cityId: parameterData.cityId,\n    outletId: parameterData.outletId,\n    warehouseId: parameterData.warehouseId,\n    outletWorker: parameterData.outletWorker,\n  });\n\n  const [parameterData, setParameterData] = React.useState({\n    login: '',\n    email: '',\n    phoneNumber: '',\n    firstName: '',\n    secondName: '',\n    roleName: '',\n    regionId: 0,\n    cityId: 0,\n    outletId: 0,\n    warehouseId: 0,\n    outletWorker: true,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [outlets, setOutlets] = React.useState<Outlet[]>([]);\n  const [warehouses, setWarehouses] = React.useState<Warehouse[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleEmailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.email = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handlePhoneNumberChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.firstName = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.secondName = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleRoleChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.roleName = event.target.value as string;\n    if (data.roleName === 'WarehouseWorker') {\n      data.outletWorker = false;\n      if (data.cityId !== 0) {\n        const wres = await getWarehouses(data.cityId);\n        setWarehouses(wres);\n      }\n    } else {\n      data.outletWorker = true;\n      if (data.cityId !== 0) {\n        const wres = await getOutlets(data.cityId);\n        setWarehouses(wres);\n      }\n    }\n\n    setParameterData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.regionId = event.target.value as number;\n    const region = regions.find(r => r.id === data.regionId);\n    if (region) {\n      setCities(region.cities);\n    }\n\n    setParameterData(data);\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    if (data.outletWorker) {\n      const ores = await getOutlets(data.cityId);\n      setOutlets(ores);\n    } else {\n      const wres = await getWarehouses(data.cityId);\n      setWarehouses(wres);\n    }\n    setParameterData(data);\n  };\n\n  const handleOutletChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.outletId = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleWarehouseChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.warehouseId = event.target.value as number;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await updateWorker(\n        props.id,\n        parameterData.email,\n        parameterData.phoneNumber,\n        parameterData.firstName,\n        parameterData.secondName,\n        parameterData.roleName,\n        parameterData.outletId,\n        parameterData.warehouseId,\n        parameterData.outletWorker,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <TextField\n              id=\"login\"\n              className={classes.spaces}\n              value={parameterData.login}\n              label=\"Логин\"\n              variant=\"outlined\"\n              disabled\n            />\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n              <TextField\n                id=\"firstName\"\n                className={classes.spaces}\n                value={parameterData.firstName}\n                onChange={handleFirstNameChange}\n                label=\"Имя\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"secondName\"\n                className={classes.spaces}\n                value={parameterData.secondName}\n                onChange={handleSecondNameChange}\n                label=\"Фамилия\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid container direction=\"row\" justifyContent=\"space-evenly\">\n              <TextField\n                id=\"email\"\n                className={classes.spaces}\n                value={parameterData.email}\n                onChange={handleEmailChange}\n                label=\"Email\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"phone\"\n                className={classes.spaces}\n                value={parameterData.phoneNumber}\n                onChange={handlePhoneNumberChange}\n                label=\"Телефон\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <TextField\n              id=\"role\"\n              select\n              label=\"Роль\"\n              className={classes.spaces}\n              value={parameterData.roleName}\n              onChange={handleRoleChange}\n            >\n              <MenuItem key={0} value={'Courier'}>\n                Курьер\n              </MenuItem>\n              <MenuItem key={1} value={'Manager'}>\n                Менеджер\n              </MenuItem>\n              <MenuItem key={2} value={'ShopAssistant'}>\n                Продавец\n              </MenuItem>\n              <MenuItem key={3} value={'WarehouseWorker'}>\n                Работник склада\n              </MenuItem>\n            </TextField>\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={parameterData.regionId}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {parameterData.regionId !== 0 && (\n              <TextField\n                id=\"city\"\n                select\n                label=\"Город\"\n                className={classes.spaces}\n                value={parameterData.cityId}\n                onChange={handleCityChange}\n                variant=\"outlined\"\n              >\n                {cities.map(p => (\n                  <MenuItem key={p.id} value={p.id}>\n                    {p.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n            )}\n            {parameterData.cityId !== 0 && (\n              <React.Fragment>\n                {parameterData.outletWorker ? (\n                  <TextField\n                    id=\"outlet\"\n                    select\n                    label=\"Магазин\"\n                    className={classes.spaces}\n                    value={parameterData.outletId}\n                    onChange={handleOutletChange}\n                    variant=\"outlined\"\n                  >\n                    {outlets.map(p => (\n                      <MenuItem key={p.id} value={p.id}>\n                        {p.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                ) : (\n                  <TextField\n                    id=\"warehouse\"\n                    select\n                    label=\"Склад\"\n                    className={classes.spaces}\n                    value={parameterData.warehouseId}\n                    onChange={handleWarehouseChange}\n                    variant=\"outlined\"\n                  >\n                    {warehouses.map(p => (\n                      <MenuItem key={p.id} value={p.id}>\n                        {p.name}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                )}\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Обновить\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditWorkerInfo;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport RegisterWorker from 'src/Components/Admin/Parts/RegisterWorker';\nimport { getWorkers } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { UserTable } from 'src/Components/Admin/Parts/UserTable';\nimport { banUser, unbanUser } from 'src/Requests/PostRequests';\nimport EditWorkerInfo from 'src/Components/Admin/Parts/EditWorkerInfo';\n\nexport const WorkersPage = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'userName',\n      headerName: 'Логин',\n      width: 200,\n    },\n    {\n      field: 'firstName',\n      headerName: 'Имя',\n      width: 200,\n    },\n    {\n      field: 'secondName',\n      headerName: 'Фамилия',\n      width: 200,\n    },\n    {\n      field: 'role',\n      headerName: 'Роль',\n      width: 130,\n    },\n    {\n      field: 'email',\n      headerName: 'Роль',\n      width: 230,\n    },\n    {\n      field: 'phoneNumber',\n      headerName: 'Телефон',\n      width: 150,\n    },\n    {\n      field: 'unitName',\n      headerName: 'Отделение',\n      width: 300,\n    },\n    {\n      field: 'outletId',\n      headerName: 'Код магазина',\n      width: 120,\n    },\n    {\n      field: 'warehouseId',\n      headerName: 'Код склада',\n      width: 120,\n    },\n    {\n      field: 'banned',\n      headerName: 'Бан',\n      width: 120,\n      type: 'boolean',\n    },\n  ];\n\n  const onBan = async (id: string): Promise<boolean> => {\n    const res = await banUser(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые блоки или объект используется в продукте.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const onUnban = async (id: string): Promise<boolean> => {\n    const res = await unbanUser(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимые блоки или объект используется в продукте.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <UserTable\n        name=\"Работники\"\n        getData={getWorkers}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        editSelected={editSelected}\n        banSelected={onBan}\n        unbanSelected={onUnban}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Регистрация работника'}\n        open={createOpen}\n        form={<RegisterWorker setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение работника'}\n        open={editOpen}\n        form={<EditWorkerInfo id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createProductParameter } from 'src/Requests/PostRequests';\nimport { getTechParameters, getProducts } from 'src/Requests/GetRequests';\nimport Parameter from 'src/Types/Parameter';\nimport Product from 'src/Types/Product';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateProductParameter {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface IProductValue {\n  productId: string;\n  value: number | null;\n  parameterId: string;\n  parameterValueId: string | null;\n}\n\nconst CreateProductParameter: React.FC<ICreateProductParameter> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const prods = await getProducts(1, 25, '1', [0, 0]);\n    const res = await getTechParameters();\n    if (isMounted) {\n      setParameters(res);\n      setProducts(prods.container);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    productId: parameterData.productId,\n    value: parameterData.value,\n    parameterId: parameterData.parameterId,\n    parameterValueId: parameterData.parameterValueId,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState<IProductValue>({\n    productId: '',\n    value: 0,\n    parameterId: '',\n    parameterValueId: '',\n  });\n  const [parameters, setParameters] = React.useState<Parameter[]>([]);\n  const [parameter, setParameter] = React.useState<Parameter>();\n  const [products, setProducts] = React.useState<Product[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleProductIdChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.productId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.value = (event.target.value as number) / 1;\n    setParameterData(data);\n  };\n\n  const handleParameterIdChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterId = event.target.value as string;\n    const found = parameters.find(p => p.id === data.parameterId);\n    if (found) {\n      setParameter(found);\n      if (found.range) {\n        data.parameterValueId = null;\n      }\n    }\n    setParameterData(data);\n  };\n\n  const handleParameterValueIdChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.parameterValueId = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    const res = await createProductParameter(\n      parameterData.productId,\n      parameterData.value,\n      parameterData.parameterId,\n      parameterData.parameterValueId,\n    );\n    if (res && props.refresher) {\n      props.refresher.refresh();\n    } else {\n      setMessage('Не удалось выполнить запрос');\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"product\"\n            select\n            label=\"Продукт\"\n            className={classes.spaces}\n            value={parameterData.productId}\n            onChange={handleProductIdChange}\n            variant=\"outlined\"\n          >\n            {products.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"parameter\"\n            select\n            label=\"Параметр\"\n            className={classes.spaces}\n            value={parameterData.parameterId}\n            onChange={handleParameterIdChange}\n            variant=\"outlined\"\n          >\n            {parameters.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          {parameter && parameter.range ? (\n            <TextField\n              id=\"value\"\n              className={classes.spaces}\n              value={parameterData.value}\n              onChange={handleValueChange}\n              label=\"Значение\"\n              variant=\"outlined\"\n              type=\"number\"\n            />\n          ) : (\n            <TextField\n              id=\"parameterValue\"\n              select\n              label=\"Значение\"\n              className={classes.spaces}\n              value={parameterData.parameterValueId}\n              onChange={handleParameterValueIdChange}\n              variant=\"outlined\"\n            >\n              {parameter?.parameterValues.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.value}\n                </MenuItem>\n              ))}\n            </TextField>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateProductParameter;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getProductParameter } from 'src/Requests/GetRequests';\nimport { deleteProductParameter } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateProductParameter from 'src/Components/Admin/Parts/CreateProductParameter';\n\nexport const ProductParameterList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'value',\n      headerName: 'Значение',\n      width: 200,\n      type: 'number',\n    },\n    {\n      field: 'parameterValue',\n      headerName: 'Значение',\n      width: 300,\n    },\n    {\n      field: 'productName',\n      headerName: 'Товар',\n      width: 400,\n    },\n    {\n      field: 'productId',\n      headerName: 'Код',\n      width: 300,\n    },\n    {\n      field: 'parameterName',\n      headerName: 'Параметр',\n      width: 400,\n    },\n    {\n      field: 'parameterId',\n      headerName: 'Код',\n      width: 300,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteProductParameter(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Параметр продукта\"\n        getData={getProductParameter}\n        columns={columns}\n        pageSize={10}\n        createNew={createNew}\n        deleteSelected={onDelete}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание параметра продукта'}\n        open={createOpen}\n        form={<CreateProductParameter setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid, GridColDef, GridSelectionModel } from '@material-ui/data-grid';\nimport { createStyles, Fab, Grid, makeStyles, Snackbar, TextField, Theme, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PublishedWithChangesIcon from '@mui/icons-material/PublishedWithChanges';\nimport UnpublishedIcon from '@mui/icons-material/Unpublished';\nimport { Alert } from '@material-ui/lab';\n\nimport NavigationBar from 'src/Components/Admin/Parts/NavigationBar';\nimport { getSearchedProducts } from 'src/Requests/GetRequests';\nimport Product from 'src/Types/Product';\nimport { cloneProduct, publishProduct, unpublishProduct } from 'src/Requests/PostRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    floating: {\n      padding: theme.spacing(3),\n    },\n    fabBlue: {\n      color: theme.palette.common.white,\n      backgroundColor: '#2979ff',\n      '&:hover': {\n        backgroundColor: '#5393ff',\n      },\n    },\n    fabSkyBlue: {\n      color: theme.palette.common.white,\n      backgroundColor: '#0a00b6',\n      '&:hover': {\n        backgroundColor: '#6200ea',\n      },\n    },\n    fabGreen: {\n      color: theme.palette.common.white,\n      backgroundColor: '#14D100',\n      '&:hover': {\n        backgroundColor: '#329D27',\n      },\n    },\n    fabRed: {\n      color: theme.palette.common.white,\n      backgroundColor: '#ff1744',\n      '&:hover': {\n        backgroundColor: '#b2102f',\n      },\n    },\n    fabOrange: {\n      color: theme.palette.common.white,\n      backgroundColor: '#b91400',\n      '&:hover': {\n        backgroundColor: '#f4511e',\n      },\n    },\n    fabViolet: {\n      color: theme.palette.common.white,\n      backgroundColor: '#673ab7',\n      '&:hover': {\n        backgroundColor: '#8561c5',\n      },\n    },\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IProductTable {\n  setSelected?: (id: string) => void;\n  deleteSelected?: (id: string) => Promise<boolean>;\n  editSelected?: (selectedId: string, refrFun: () => void) => void;\n  createNew?: (update: () => void) => void;\n  open?: boolean;\n  setOpen?: React.Dispatch<React.SetStateAction<boolean>>;\n  error?: string;\n}\n\nexport const ProductTable = (props: IProductTable) => {\n  const classes = useStyles();\n  const pageOnCount = 8;\n\n  const columns: GridColDef[] = [\n    { field: 'id', sortable: false, headerName: 'ID', width: 300 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      sortable: false,\n      width: 500,\n    },\n    {\n      field: 'price',\n      headerName: 'Цена',\n      sortable: false,\n      width: 150,\n    },\n    {\n      field: 'priceWithoutDiscount',\n      headerName: 'Цена без скидки',\n      sortable: false,\n      width: 150,\n    },\n    {\n      field: 'mark',\n      headerName: 'Оценка',\n      sortable: false,\n      width: 130,\n      type: 'number',\n    },\n    {\n      field: 'vendorCode',\n      headerName: 'Артикул',\n      sortable: false,\n      width: 150,\n    },\n    {\n      field: 'category',\n      headerName: 'Категория',\n      sortable: false,\n      width: 160,\n      valueGetter: params => `${params.row.category?.name}`,\n    },\n    {\n      field: 'published',\n      headerName: 'Опубликован',\n      sortable: false,\n      width: 150,\n      type: 'boolean',\n    },\n  ];\n\n  const getDataPage = async (isMounted: boolean, page: number, search: string) => {\n    const res = await getSearchedProducts(page, pageOnCount, 'name', search);\n    if (isMounted) {\n      const d = [...data];\n      for (let i = 0; i < pageOnCount && i < res.container.length; i++) {\n        d[(page - 1) * pageOnCount + i] = res.container[i];\n      }\n\n      setData(d);\n      setPageCount(res.maxPage);\n    }\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const refreshData = () => {\n    let isMounted = true;\n    getDataPage(isMounted, pageCount, search);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const refreshByPage = (page: number) => {\n    let isMounted = true;\n    getDataPage(isMounted, page, search);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const refreshByFilter = (searchQuery: string) => {\n    let isMounted = true;\n    getDataPage(isMounted, 1, searchQuery);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const [data, setData] = useState<Product[]>([]);\n  const [pageNum, setPageNum] = useState<number>(0);\n  const [selectedItem, setSelectedItem] = useState<string>();\n  const [pageCount, setPageCount] = useState<number>(1);\n  const [search, setSearch] = useState<string>('');\n\n  const onPageChange = async (page: number, details?: unknown) => {\n    const pg = page + 1;\n    setPageNum(page);\n    refreshByPage(pg);\n  };\n\n  const onSelection = (selectionModel: GridSelectionModel, details?: unknown) => {\n    if (selectionModel.length > 0) {\n      setSelectedItem(selectionModel[0] as string);\n      if (props.setSelected) {\n        props.setSelected(selectionModel[0] as string);\n      }\n    }\n  };\n\n  const onDelete = async () => {\n    if (selectedItem && props.deleteSelected) {\n      const res = await props.deleteSelected(selectedItem);\n      if (res) {\n        refreshData();\n      }\n    }\n  };\n\n  const onCreate = async () => {\n    if (props.createNew) {\n      props.createNew(refreshData.bind(this));\n    }\n  };\n\n  const onClone = async () => {\n    const res = await cloneProduct(selectedItem as string);\n    if (res) {\n      refreshData();\n    }\n  };\n\n  const onPublish = async () => {\n    const res = await publishProduct(selectedItem as string);\n    if (res > 0) {\n      refreshData();\n    }\n  };\n\n  const onUnpublish = async () => {\n    const res = await unpublishProduct(selectedItem as string);\n    if (res > 0) {\n      refreshData();\n    }\n  };\n\n  const onEdit = async () => {\n    if (selectedItem && props.editSelected) {\n      props.editSelected(selectedItem, refreshData.bind(this));\n    }\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    if (props.setOpen) {\n      props.setOpen(false);\n    }\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const query = event.target.value as string;\n    setData([]);\n    setSearch(query);\n    refreshByFilter(query);\n  };\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      {props.setOpen && props.error && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          open={props.open}\n          autoHideDuration={6000}\n          onClose={handleClose}\n        >\n          <Alert onClose={handleClose} severity=\"error\">\n            {props.error}\n          </Alert>\n        </Snackbar>\n      )}\n      <Grid direction=\"column\" className={classes.floating} container alignContent=\"stretch\">\n        <Typography align=\"center\" variant=\"h4\">\n          Продукты\n        </Typography>\n        <TextField\n          id=\"categoryDeliveryPrice\"\n          variant=\"outlined\"\n          className={classes.spaces}\n          label=\"Фильтр названий\"\n          value={search}\n          onChange={handleSearchChange}\n        />\n        <DataGrid\n          style={{ minHeight: 545 }}\n          rows={data}\n          page={pageNum}\n          rowCount={pageCount * pageOnCount}\n          columns={columns}\n          pageSize={pageOnCount}\n          rowsPerPageOptions={[pageOnCount]}\n          onPageChange={onPageChange}\n          onSelectionModelChange={onSelection}\n        />\n        <Grid className={classes.floating} direction=\"row\" container justifyContent=\"flex-end\" alignContent=\"stretch\">\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!props.createNew}\n              variant=\"extended\"\n              className={classes.fabBlue}\n              color=\"inherit\"\n              aria-label=\"add\"\n              onClick={onCreate}\n            >\n              <AddIcon />\n              Добавить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            <Fab\n              disabled={!selectedItem || selectedItem === '' || !props.editSelected}\n              variant=\"extended\"\n              className={classes.fabViolet}\n              color=\"inherit\"\n              aria-label=\"edit\"\n              onClick={onEdit}\n            >\n              <EditIcon />\n              Изменить\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={4}>\n            {selectedItem && data.find(s => s.id === selectedItem)?.published ? (\n              <Fab\n                disabled={!selectedItem || selectedItem === ''}\n                variant=\"extended\"\n                className={classes.fabOrange}\n                color=\"inherit\"\n                aria-label=\"delete\"\n                onClick={onUnpublish}\n              >\n                <UnpublishedIcon />\n                Отменить публикацию\n              </Fab>\n            ) : (\n              <Fab\n                disabled={!selectedItem || selectedItem === ''}\n                variant=\"extended\"\n                className={classes.fabGreen}\n                color=\"inherit\"\n                aria-label=\"delete\"\n                onClick={onPublish}\n              >\n                <PublishedWithChangesIcon />\n                Опубликовать\n              </Fab>\n            )}\n          </Grid>\n        </Grid>\n        <Grid direction=\"row\" container justifyContent=\"flex-end\" alignContent=\"stretch\">\n          <Grid container justifyContent=\"center\" item xs={12} sm={6}>\n            <Fab\n              disabled={!selectedItem || selectedItem === ''}\n              variant=\"extended\"\n              className={classes.fabSkyBlue}\n              color=\"inherit\"\n              aria-label=\"clone\"\n              onClick={onClone}\n            >\n              <ContentCopyIcon />\n              Клонировать\n            </Fab>\n          </Grid>\n          <Grid container justifyContent=\"center\" item xs={12} sm={6}>\n            <Fab\n              disabled={!selectedItem || selectedItem === '' || !props.deleteSelected}\n              variant=\"extended\"\n              className={classes.fabRed}\n              color=\"inherit\"\n              aria-label=\"delete\"\n              onClick={onDelete}\n            >\n              <DeleteIcon />\n              Удалить\n            </Fab>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Grid,\n  MenuItem,\n  Snackbar,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport Category from 'src/Types/Category';\nimport { getAllCategories, getCategoryParamBlocks } from 'src/Requests/GetRequests';\nimport { createProduct } from 'src/Requests/PostRequests';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport ParameterCreateRequest from 'src/Types/ParameterCreateRequest';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n    input: {\n      display: 'none',\n    },\n    pic: {\n      height: 243,\n      width: 432,\n    },\n    grid: {\n      minWidth: 430,\n    },\n  }),\n);\n\ninterface ICreateProduct {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateProduct: React.FC<ICreateProduct> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const cats = await getAllCategories();\n    if (isMounted) {\n      setCategories(cats);\n      setLoading(false);\n    }\n  };\n\n  const loadCategoryData = async (isMounted: boolean) => {\n    setLoading(true);\n    const params = await getCategoryParamBlocks(productData.categoryId);\n    if (isMounted) {\n      setParameters(params.includedBlocks);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const getCategoryData = () => {\n    let isMounted = true;\n    loadCategoryData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: productData.name,\n    description: productData.description,\n    price: productData.price,\n    priceWithoutDiscount: productData.priceWithoutDiscount,\n    categoryId: productData.categoryId,\n    vendorCode: productData.vendorCode,\n  });\n\n  const [productData, setProductData] = React.useState({\n    name: '',\n    description: '',\n    price: 0,\n    priceWithoutDiscount: 0,\n    categoryId: '',\n    vendorCode: '',\n  });\n\n  const [paramVals, setParamVals] = React.useState<{ [key: string]: ParameterCreateRequest }>({});\n  const [parameters, setParameters] = React.useState<ParameterBlock[]>([]);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n  const [loading, setLoading] = React.useState(true);\n  const [step, setStep] = React.useState(1);\n  const [pic, setPic] = React.useState<File>();\n  const [picUrl, setPicUrl] = React.useState('');\n  const picPlaceholder = '/products/NotSet.png';\n\n  const handleId = (id: string) => handleListParameterChange.bind(this, id);\n\n  const handleRangeParameterChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | undefined) => {\n    if (event && paramVals) {\n      const foundObject = paramVals[event.target.id] as ParameterCreateRequest;\n      if (foundObject) {\n        foundObject.value = parseInt(event.target.value);\n        foundObject.parameterId = event.target.id;\n      } else {\n        paramVals[event.target.id] = { parameterId: event.target.id, value: parseInt(event.target.value) };\n      }\n\n      setParamVals({ ...paramVals });\n    }\n  };\n\n  const handleListParameterChange = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event && paramVals) {\n      const foundObject = paramVals[id] as ParameterCreateRequest;\n      if (foundObject) {\n        foundObject.parameterValueId = event.target.value as string;\n        foundObject.parameterId = id;\n      } else {\n        paramVals[id] = { parameterId: id, parameterValueId: event.target.value };\n      }\n\n      setParamVals({ ...paramVals });\n    }\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handleVendorCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.vendorCode = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.description = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handlePriceChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.price = newPrice;\n    }\n\n    setProductData(data);\n  };\n\n  const handlePriceWithoutDiscountChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.priceWithoutDiscount = newPrice;\n    }\n\n    setProductData(data);\n  };\n\n  const handleCategoryChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.categoryId = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handlePicChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      console.log(file);\n      setPic(file);\n      setPicUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onNext = async () => {\n    if (productData.categoryId.length < 1) {\n      setMessage('Выберите категорию!');\n      setOpen(true);\n    } else {\n      getCategoryData();\n      setStep(2);\n    }\n  };\n\n  const onBack = async () => {\n    setStep(1);\n  };\n\n  const onClick = async () => {\n    if (productData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (productData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      console.log(paramVals);\n      const params = [];\n      for (const name in paramVals) {\n        params.push(paramVals[name]);\n      }\n\n      const res = await createProduct(\n        productData.name,\n        productData.description,\n        productData.price,\n        productData.priceWithoutDiscount,\n        productData.categoryId,\n        productData.vendorCode,\n        pic ?? null,\n        params,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          {step === 1 ? (\n            <React.Fragment>\n              <TextField\n                id=\"productName\"\n                className={classes.spaces}\n                value={productData.name}\n                onChange={handleNameChange}\n                label=\"Название\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"productDescription\"\n                className={classes.spaces}\n                value={productData.description}\n                onChange={handleDescriptionChange}\n                label=\"Описание\"\n                multiline\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"productPrice\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Цена\"\n                value={productData.price}\n                onChange={handlePriceChange}\n              />\n              <TextField\n                id=\"productDiscontlessPrice\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Цена без скидки\"\n                value={productData.priceWithoutDiscount}\n                onChange={handlePriceWithoutDiscountChange}\n              />\n              <TextField\n                id=\"productCode\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Артикул\"\n                value={productData.vendorCode}\n                onChange={handleVendorCodeChange}\n              />\n              <TextField\n                id=\"productCategory\"\n                select\n                label=\"Категория\"\n                className={classes.spaces}\n                value={productData.categoryId}\n                onChange={handleCategoryChange}\n                variant=\"outlined\"\n              >\n                {categories.map(cat => (\n                  <MenuItem key={cat.id} value={cat.id}>\n                    {cat.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                type=\"file\"\n                onChange={handlePicChange}\n              />\n              <Card className={classes.spaces} variant=\"outlined\">\n                <Grid container justifyContent=\"center\">\n                  <CardMedia\n                    className={classes.pic}\n                    image={pic ? picUrl : picPlaceholder}\n                    title=\"Выбранное изображение\"\n                  />\n                </Grid>\n                <CardContent>\n                  <Grid container justifyContent=\"center\">\n                    <label htmlFor=\"contained-button-file\" className={classes.spaces}>\n                      <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                        Выбрать изображение\n                      </Button>\n                    </label>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </React.Fragment>\n          ) : (\n            <Grid item xs={12} sm={9} container justifyContent=\"center\" direction=\"column\" className={classes.grid}>\n              {parameters.map(pb => (\n                <React.Fragment key={pb.id}>\n                  <Typography>{pb.name}</Typography>\n                  {pb.parameters.map(p => (\n                    <React.Fragment key={p.id}>\n                      {p.range ? (\n                        <TextField\n                          id={p.id}\n                          className={classes.spaces}\n                          value={paramVals && paramVals[p.id]?.value}\n                          onChange={handleRangeParameterChange}\n                          label={p.name}\n                          type=\"number\"\n                          variant=\"outlined\"\n                        />\n                      ) : (\n                        <TextField\n                          id={p.id}\n                          className={classes.spaces}\n                          value={paramVals && paramVals[p.id]?.parameterValueId}\n                          onChange={handleId(p.id)}\n                          label={p.name}\n                          variant=\"outlined\"\n                          select\n                        >\n                          {p.parameterValues.map(pv => (\n                            <MenuItem key={pv.id} value={pv.id}>\n                              {pv.value}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      )}\n                    </React.Fragment>\n                  ))}\n                </React.Fragment>\n              ))}\n            </Grid>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            {step === 1 ? (\n              <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onNext}>\n                Далее\n              </Button>\n            ) : (\n              <React.Fragment>\n                <Grid xs={12} sm={6} item container justifyContent=\"flex-start\">\n                  <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"outlined\" onClick={onBack}>\n                    Назад\n                  </Button>\n                </Grid>\n                <Grid xs={12} sm={6} item container justifyContent=\"flex-end\">\n                  <Button\n                    type=\"submit\"\n                    className={classes.spaces}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={onClick}\n                  >\n                    Создать\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateProduct;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Grid,\n  MenuItem,\n  Snackbar,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport Category from 'src/Types/Category';\nimport { getAllCategories, getCategoryParamBlocks, getParameters, getProduct } from 'src/Requests/GetRequests';\nimport { updateProduct } from 'src/Requests/PutRequests';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport ParameterCreateRequest from 'src/Types/ParameterCreateRequest';\nimport Parameter from 'src/Types/Parameter';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n    input: {\n      display: 'none',\n    },\n    pic: {\n      height: 243,\n      width: 432,\n    },\n    grid: {\n      minWidth: 430,\n    },\n  }),\n);\n\ninterface IEditProduct {\n  id: string;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditProduct: React.FC<IEditProduct> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const product = await getProduct(props.id);\n    const initValues = await getParameters(props.id);\n    const cats = await getAllCategories();\n\n    if (isMounted) {\n      setProductData({\n        name: product.name,\n        description: product.description,\n        price: product.price,\n        priceWithoutDiscount: product.priceWithoutDiscount as number,\n        categoryId: product.category?.id as string,\n        vendorCode: product.vendorCode,\n      });\n\n      setInitialPValues(initValues);\n      setCategories(cats);\n      setLoading(false);\n      setPicUrl(`/products/${product.picURL}`);\n    }\n  };\n\n  const parseInitValues = (paramBlocks: ParameterBlock[]) => {\n    const hashInit = {} as { [key: string]: { [key: string]: Parameter } };\n    const result = {} as { [key: string]: ParameterCreateRequest };\n\n    for (const block of initialPValues) {\n      const newVal = {} as { [key: string]: Parameter };\n      for (const param of block.parameters) {\n        newVal[param.parameterId as string] = param;\n      }\n\n      hashInit[block.id] = newVal;\n    }\n\n    for (const newBlock of paramBlocks) {\n      const val = hashInit[newBlock.id];\n      if (val) {\n        for (const param of newBlock.parameters) {\n          const p = val[param.id];\n          if (p) {\n            if (param.range) {\n              result[param.id] = { parameterId: param.id, value: parseInt(p.value), productId: props.id };\n            } else {\n              result[param.id] = { parameterId: param.id, parameterValueId: p.parameterValueId, productId: props.id };\n            }\n          }\n        }\n      }\n    }\n\n    setParamVals(result);\n  };\n\n  const loadCategoryData = async (isMounted: boolean) => {\n    setLoading(true);\n    const params = await getCategoryParamBlocks(productData.categoryId);\n    if (isMounted) {\n      setParameters(params.includedBlocks);\n      parseInitValues(params.includedBlocks);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const getCategoryData = () => {\n    let isMounted = true;\n    loadCategoryData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: productData.name,\n    description: productData.description,\n    price: productData.price,\n    priceWithoutDiscount: productData.priceWithoutDiscount,\n    categoryId: productData.categoryId,\n    vendorCode: productData.vendorCode,\n  });\n\n  const [productData, setProductData] = React.useState({\n    name: '',\n    description: '',\n    price: 0,\n    priceWithoutDiscount: 0,\n    categoryId: '',\n    vendorCode: '',\n  });\n\n  const [paramVals, setParamVals] = React.useState<{ [key: string]: ParameterCreateRequest }>({});\n  const [parameters, setParameters] = React.useState<ParameterBlock[]>([]);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n  const [loading, setLoading] = React.useState(true);\n  const [step, setStep] = React.useState(1);\n  const [pic, setPic] = React.useState<File>();\n  const [picUrl, setPicUrl] = React.useState('');\n  const [initialPValues, setInitialPValues] = React.useState<ParameterBlock[]>([]);\n\n  const handleId = (id: string) => handleListParameterChange.bind(this, id);\n\n  const handleRangeParameterChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | undefined) => {\n    if (event && paramVals) {\n      const foundObject = paramVals[event.target.id] as ParameterCreateRequest;\n      if (foundObject) {\n        foundObject.value = parseInt(event.target.value);\n        foundObject.parameterId = event.target.id;\n      } else {\n        paramVals[event.target.id] = {\n          parameterId: event.target.id,\n          value: parseInt(event.target.value),\n          productId: props.id,\n        };\n      }\n\n      setParamVals({ ...paramVals });\n    }\n  };\n\n  const handleListParameterChange = (id: string, event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event && paramVals) {\n      const foundObject = paramVals[id] as ParameterCreateRequest;\n      if (foundObject) {\n        foundObject.parameterValueId = event.target.value as string;\n        foundObject.parameterId = id;\n      } else {\n        paramVals[id] = { parameterId: id, parameterValueId: event.target.value, productId: props.id };\n      }\n\n      setParamVals({ ...paramVals });\n    }\n  };\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handleVendorCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.vendorCode = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handleDescriptionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.description = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handlePriceChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.price = newPrice;\n    }\n\n    setProductData(data);\n  };\n\n  const handlePriceWithoutDiscountChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    const newPrice = event.target.value as number;\n    if (newPrice > 0) {\n      data.priceWithoutDiscount = newPrice;\n    }\n\n    setProductData(data);\n  };\n\n  const handleCategoryChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.categoryId = event.target.value as string;\n    setProductData(data);\n  };\n\n  const handlePicChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files && event.target.files[0];\n    if (file) {\n      setPic(file);\n      setPicUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onNext = async () => {\n    if (productData.categoryId.length < 1) {\n      setMessage('Выберите категорию!');\n      setOpen(true);\n    } else {\n      getCategoryData();\n      setStep(2);\n    }\n  };\n\n  const onBack = async () => {\n    setStep(1);\n  };\n\n  const onClick = async () => {\n    if (productData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (productData.description.length < 5) {\n      setMessage('Введите корректное описание');\n      setOpen(true);\n    } else {\n      const params = [];\n      for (const name in paramVals) {\n        params.push(paramVals[name]);\n      }\n\n      const res = await updateProduct(\n        props.id,\n        productData.name,\n        productData.description,\n        productData.price,\n        productData.priceWithoutDiscount,\n        productData.categoryId,\n        productData.vendorCode,\n        pic ?? null,\n        params,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          {step === 1 ? (\n            <React.Fragment>\n              <TextField\n                id=\"productName\"\n                className={classes.spaces}\n                value={productData.name}\n                onChange={handleNameChange}\n                label=\"Название\"\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"productDescription\"\n                className={classes.spaces}\n                value={productData.description}\n                onChange={handleDescriptionChange}\n                label=\"Описание\"\n                multiline\n                variant=\"outlined\"\n              />\n              <TextField\n                id=\"productPrice\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Цена\"\n                value={productData.price}\n                onChange={handlePriceChange}\n              />\n              <TextField\n                id=\"productDiscontlessPrice\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Цена без скидки\"\n                value={productData.priceWithoutDiscount}\n                onChange={handlePriceWithoutDiscountChange}\n              />\n              <TextField\n                id=\"productCode\"\n                variant=\"outlined\"\n                className={classes.spaces}\n                type=\"number\"\n                label=\"Артикул\"\n                value={productData.vendorCode}\n                onChange={handleVendorCodeChange}\n              />\n              <TextField\n                id=\"productCategory\"\n                select\n                label=\"Категория\"\n                className={classes.spaces}\n                value={productData.categoryId}\n                onChange={handleCategoryChange}\n                variant=\"outlined\"\n              >\n                {categories.map(cat => (\n                  <MenuItem key={cat.id} value={cat.id}>\n                    {cat.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                type=\"file\"\n                onChange={handlePicChange}\n              />\n              <Card className={classes.spaces} variant=\"outlined\">\n                <Grid container justifyContent=\"center\">\n                  <CardMedia className={classes.pic} image={picUrl} title=\"Выбранное изображение\" />\n                </Grid>\n                <CardContent>\n                  <Grid container justifyContent=\"center\">\n                    <label htmlFor=\"contained-button-file\" className={classes.spaces}>\n                      <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                        Выбрать изображение\n                      </Button>\n                    </label>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </React.Fragment>\n          ) : (\n            <Grid item xs={12} sm={9} container justifyContent=\"center\" direction=\"column\" className={classes.grid}>\n              {parameters.map(pb => (\n                <React.Fragment key={pb.id}>\n                  <Typography>{pb.name}</Typography>\n                  {pb.parameters.map(p => (\n                    <React.Fragment key={p.id}>\n                      {p.range ? (\n                        <TextField\n                          id={p.id}\n                          className={classes.spaces}\n                          value={paramVals && paramVals[p.id]?.value}\n                          onChange={handleRangeParameterChange}\n                          label={p.name}\n                          type=\"number\"\n                          variant=\"outlined\"\n                        />\n                      ) : (\n                        <TextField\n                          id={p.id}\n                          className={classes.spaces}\n                          value={paramVals && paramVals[p.id]?.parameterValueId}\n                          onChange={handleId(p.id)}\n                          label={p.name}\n                          variant=\"outlined\"\n                          select\n                        >\n                          {p.parameterValues.map(pv => (\n                            <MenuItem key={pv.id} value={pv.id}>\n                              {pv.value}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      )}\n                    </React.Fragment>\n                  ))}\n                </React.Fragment>\n              ))}\n            </Grid>\n          )}\n          <Grid container justifyContent=\"flex-end\">\n            {step === 1 ? (\n              <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onNext}>\n                Далее\n              </Button>\n            ) : (\n              <React.Fragment>\n                <Grid xs={12} sm={6} item container justifyContent=\"flex-start\">\n                  <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"outlined\" onClick={onBack}>\n                    Назад\n                  </Button>\n                </Grid>\n                <Grid xs={12} sm={6} item container justifyContent=\"flex-end\">\n                  <Button\n                    type=\"submit\"\n                    className={classes.spaces}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={onClick}\n                  >\n                    Обновить\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            )}\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditProduct;\n","import React from 'react';\n\nimport { ProductTable } from 'src/Components/Admin/Parts/ProductTable';\nimport { deleteProduct } from 'src/Requests/DeleteRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport CreateProduct from 'src/Components/Admin/Parts/CreateProduct';\nimport EditProduct from 'src/Components/Admin/Parts/EditProduct';\n\nexport const ProductValueList = () => {\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteProduct(id);\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <ProductTable\n        createNew={createNew}\n        editSelected={editSelected}\n        setSelected={setSelected}\n        deleteSelected={onDelete}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание продукта'}\n        open={createOpen}\n        form={<CreateProduct setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение продукта'}\n        open={editOpen}\n        form={<EditProduct id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createRegion } from 'src/Requests/PostRequests';\n\nimport { CityList } from './CityList';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateRegion {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateRegion: React.FC<ICreateRegion> = props => {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState('');\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else {\n      const res = await createRegion(name);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"regionName\"\n        className={classes.spaces}\n        value={name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Создать\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CreateRegion;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createCity } from 'src/Requests/PostRequests';\nimport { getAllRegions } from 'src/Requests/GetRequests';\nimport Region from 'src/Types/Region';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateCity {\n  regionId?: number;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateCity: React.FC<ICreateCity> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getAllRegions();\n    if (isMounted) {\n      setRegions(res);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: parameterData.name,\n    regionId: props.regionId ?? parameterData.regionId,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [parameterData, setParameterData] = React.useState({\n    name: '',\n    regionId: props.regionId ?? 0,\n  });\n\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setParameterData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.regionId = parseInt(event.target.value as string);\n    setParameterData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (parameterData.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (parameterData.regionId < 0) {\n      setMessage('Укажите регион');\n      setOpen(true);\n    } else {\n      const res = await createCity(parameterData.name, parameterData.regionId);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={parameterData.name}\n            onChange={handleNameChange}\n            label=\"Значение\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"parameter\"\n            select\n            label=\"Параметр\"\n            className={classes.spaces}\n            value={parameterData.regionId}\n            onChange={handleRegionChange}\n            variant=\"outlined\"\n            disabled={props.regionId !== undefined}\n          >\n            {regions.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateCity;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getAllRegions, getCity } from 'src/Requests/GetRequests';\nimport { updateCity } from 'src/Requests/PutRequests';\nimport Region from 'src/Types/Region';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditCity {\n  id: number;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditCity: React.FC<IEditCity> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getAllRegions();\n    const data = await getCity(props.id);\n    if (isMounted) {\n      setRegions(res);\n      setCity({\n        name: data.name,\n        regionId: data.regionId,\n      });\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: city.name,\n    regionId: city.regionId,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [city, setCity] = React.useState({\n    name: '',\n    regionId: 0,\n  });\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setCity(data);\n  };\n\n  const handleParameterChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.regionId = parseInt(event.target.value as string);\n    setCity(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (city.name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else if (city.regionId < 1) {\n      setMessage('Укажите параметр');\n      setOpen(true);\n    } else {\n      const res = await updateCity(props.id, city.name, city.regionId);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <TextField\n            id=\"parameterName\"\n            className={classes.spaces}\n            value={city.name}\n            onChange={handleValueChange}\n            label=\"Название\"\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"parameter\"\n            select\n            label=\"Регион\"\n            className={classes.spaces}\n            value={city.regionId}\n            onChange={handleParameterChange}\n            variant=\"outlined\"\n          >\n            {regions.map(p => (\n              <MenuItem key={p.id} value={p.id}>\n                {p.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Обновить\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditCity;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { getRegionCities } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteCity } from 'src/Requests/DeleteRequests';\nimport CreateCity from 'src/Components/Admin/Parts/CreateCity';\n\nimport { TableStructure } from './TableStructure';\nimport EditCity from './EditCity';\n\ninterface ICityList {\n  id: number;\n}\n\nexport const CityList: React.FC<ICityList> = props => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 100 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 250,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteCity(parseInt(id));\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const getCities = getRegionCities.bind(this, props.id);\n\n  return (\n    <React.Fragment>\n      <TableStructure\n        name=\"Города\"\n        getData={getCities}\n        columns={columns}\n        pageSize={5}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n        compact\n      />\n      <ModalFormDialog\n        name={'Создание города региона'}\n        open={createOpen}\n        form={<CreateCity regionId={props.id} setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение города региона'}\n        open={editOpen}\n        form={<EditCity id={parseInt(selected)} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { getRegion } from 'src/Requests/GetRequests';\nimport { updateRegion } from 'src/Requests/PutRequests';\n\nimport { CityList } from './CityList';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditRegion {\n  id: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  refresher?: IRefresher;\n}\n\nconst EditRegion: React.FC<IEditRegion> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await getRegion(parseInt(props.id));\n    if (isMounted) {\n      setName(res.name);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const [name, setName] = React.useState('');\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setName(event.target.value as string);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    if (name.length < 2) {\n      setMessage('Введите корректное название');\n      setOpen(true);\n    } else {\n      const res = await updateRegion(props.id, name);\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      <TextField\n        id=\"regionName\"\n        className={classes.spaces}\n        value={name}\n        onChange={handleNameChange}\n        label=\"Название\"\n        variant=\"outlined\"\n      />\n      <CityList id={parseInt(props.id)} />\n      <Grid container justifyContent=\"flex-end\">\n        <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n          Обновить\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default EditRegion;\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getAllRegions } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteRegion } from 'src/Requests/DeleteRequests';\nimport CreateRegion from 'src/Components/Admin/Parts/CreateRegion';\nimport EditRegion from 'src/Components/Admin/Parts/EditRegion';\n\nexport const RegionList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 100 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 350,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteRegion(parseInt(id));\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Регионы\"\n        getData={getAllRegions}\n        columns={columns}\n        pageSize={10}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание региона'}\n        open={createOpen}\n        form={<CreateRegion setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение региона'}\n        open={editOpen}\n        form={<EditRegion id={selected} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createOutlet } from 'src/Requests/PostRequests';\nimport { getAllRegions } from 'src/Requests/GetRequests';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateOutlet {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateOutlet: React.FC<ICreateOutlet> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const regions = await getAllRegions();\n    if (isMounted) {\n      setRegions(regions);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: outletData.name,\n    cityId: outletData.cityId,\n    streetName: outletData.streetName,\n    building: outletData.building,\n    postalCode: outletData.postalCode,\n    noteForUser: outletData.noteForUser,\n    phoneNumber: outletData.phoneNumber,\n  });\n\n  const [outletData, setOutletData] = React.useState({\n    name: '',\n    cityId: 0,\n    streetName: '',\n    building: '',\n    postalCode: '',\n    noteForUser: '',\n    phoneNumber: '',\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [region, setRegion] = React.useState(0);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleStreetNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.streetName = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleBuildingChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.building = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePostalCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.postalCode = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleNoteForUserChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.noteForUser = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const regionId = event.target.value as number;\n    setRegion(regionId);\n    const reg = regions.find(r => r.id === regionId);\n    if (reg) {\n      setCities(reg.cities);\n    }\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    setOutletData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await createOutlet(\n        outletData.name,\n        outletData.cityId,\n        outletData.streetName,\n        outletData.building,\n        outletData.postalCode,\n        outletData.noteForUser,\n        outletData.phoneNumber,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <TextField\n              id=\"outletName\"\n              className={classes.spaces}\n              value={outletData.name}\n              onChange={handleNameChange}\n              label=\"Название\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPhone\"\n              className={classes.spaces}\n              value={outletData.phoneNumber}\n              onChange={handlePhoneChange}\n              label=\"Номер телефона\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPostalCode\"\n              className={classes.spaces}\n              value={outletData.postalCode}\n              onChange={handlePostalCodeChange}\n              label=\"Почтовый код\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={region}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {region !== 0 && (\n              <React.Fragment>\n                <TextField\n                  id=\"city\"\n                  select\n                  label=\"Город\"\n                  className={classes.spaces}\n                  value={outletData.cityId}\n                  onChange={handleCityChange}\n                  variant=\"outlined\"\n                >\n                  {cities.map(p => (\n                    <MenuItem key={p.id} value={p.id}>\n                      {p.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"street\"\n                  className={classes.spaces}\n                  value={outletData.streetName}\n                  onChange={handleStreetNameChange}\n                  label=\"Улица\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"building\"\n                  className={classes.spaces}\n                  value={outletData.building}\n                  onChange={handleBuildingChange}\n                  label=\"Здание\"\n                  variant=\"outlined\"\n                />\n              </React.Fragment>\n            )}\n            <TextField\n              id=\"noteForUsers\"\n              className={classes.spaces}\n              value={outletData.noteForUser}\n              onChange={handleNoteForUserChange}\n              label=\"Примечание\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateOutlet;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { updateOutlet } from 'src/Requests/PutRequests';\nimport { getAllRegions, getOutlet } from 'src/Requests/GetRequests';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditOutlet {\n  id: number;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditOutlet: React.FC<IEditOutlet> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getOutlet(props.id);\n    const regions = await getAllRegions();\n    if (isMounted) {\n      setRegions(regions);\n      setRegion(res.city.regionId);\n      setOutletData({\n        name: res.name,\n        cityId: res.city.id,\n        streetName: res.streetName,\n        building: res.building,\n        postalCode: res.postalCode,\n        noteForUser: res.userNote,\n        phoneNumber: res.phoneNumber,\n      });\n\n      const reg = regions.find(r => r.id === res.city.regionId);\n      if (reg) {\n        setCities(reg.cities);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: outletData.name,\n    cityId: outletData.cityId,\n    streetName: outletData.streetName,\n    building: outletData.building,\n    postalCode: outletData.postalCode,\n    noteForUser: outletData.noteForUser,\n    phoneNumber: outletData.phoneNumber,\n  });\n\n  const [outletData, setOutletData] = React.useState({\n    name: '',\n    cityId: 0,\n    streetName: '',\n    building: '',\n    postalCode: '',\n    noteForUser: '',\n    phoneNumber: '',\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [region, setRegion] = React.useState(0);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleStreetNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.streetName = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleBuildingChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.building = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePostalCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.postalCode = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleNoteForUserChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.noteForUser = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const regionId = event.target.value as number;\n    setRegion(regionId);\n    const reg = regions.find(r => r.id === regionId);\n    if (reg) {\n      setCities(reg.cities);\n    }\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    setOutletData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await updateOutlet(\n        props.id,\n        outletData.name,\n        outletData.cityId,\n        outletData.streetName,\n        outletData.building,\n        outletData.postalCode,\n        outletData.noteForUser,\n        outletData.phoneNumber,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <TextField\n              id=\"outletName\"\n              className={classes.spaces}\n              value={outletData.name}\n              onChange={handleNameChange}\n              label=\"Название\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPhone\"\n              className={classes.spaces}\n              value={outletData.phoneNumber}\n              onChange={handlePhoneChange}\n              label=\"Номер телефона\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPostalCode\"\n              className={classes.spaces}\n              value={outletData.postalCode}\n              onChange={handlePostalCodeChange}\n              label=\"Почтовый код\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={region}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {region !== 0 && (\n              <React.Fragment>\n                <TextField\n                  id=\"city\"\n                  select\n                  label=\"Город\"\n                  className={classes.spaces}\n                  value={outletData.cityId}\n                  onChange={handleCityChange}\n                  variant=\"outlined\"\n                >\n                  {cities.map(p => (\n                    <MenuItem key={p.id} value={p.id}>\n                      {p.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"street\"\n                  className={classes.spaces}\n                  value={outletData.streetName}\n                  onChange={handleStreetNameChange}\n                  label=\"Улица\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"building\"\n                  className={classes.spaces}\n                  value={outletData.building}\n                  onChange={handleBuildingChange}\n                  label=\"Здание\"\n                  variant=\"outlined\"\n                />\n              </React.Fragment>\n            )}\n            <TextField\n              id=\"noteForUsers\"\n              className={classes.spaces}\n              value={outletData.noteForUser}\n              onChange={handleNoteForUserChange}\n              label=\"Примечание\"\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditOutlet;\n","import React from 'react';\nimport { GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getAllOutlets } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteOutlet } from 'src/Requests/DeleteRequests';\nimport CreateOutlet from 'src/Components/Admin/Parts/CreateOutlet';\nimport EditOutlet from 'src/Components/Admin/Parts/EditOutlet';\n\nexport const OutletList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 100 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 350,\n    },\n    {\n      field: 'adress',\n      headerName: 'Адрес',\n      width: 500,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.postalCode}, ${params.row.region.name}, ${params.row.city.name}, ${params.row.streetName}, ${params.row.building}`,\n    },\n    {\n      field: 'userNote',\n      headerName: 'Заметка',\n      width: 350,\n    },\n    {\n      field: 'phoneNumber',\n      headerName: 'Телефон',\n      width: 350,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteOutlet(parseInt(id));\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Магазины\"\n        getData={getAllOutlets}\n        columns={columns}\n        pageSize={10}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание точки распространения'}\n        open={createOpen}\n        form={<CreateOutlet setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение точки распространения'}\n        open={editOpen}\n        form={<EditOutlet id={parseInt(selected)} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { createWarehouse } from 'src/Requests/PostRequests';\nimport { getAllRegions } from 'src/Requests/GetRequests';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface ICreateWarehouse {\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst CreateWarehouse: React.FC<ICreateWarehouse> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const regions = await getAllRegions();\n    if (isMounted) {\n      setRegions(regions);\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: outletData.name,\n    cityId: outletData.cityId,\n    streetName: outletData.streetName,\n    building: outletData.building,\n    postalCode: outletData.postalCode,\n    phoneNumber: outletData.phoneNumber,\n  });\n\n  const [outletData, setOutletData] = React.useState({\n    name: '',\n    cityId: 0,\n    streetName: '',\n    building: '',\n    postalCode: '',\n    phoneNumber: '',\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [region, setRegion] = React.useState(0);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleStreetNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.streetName = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleBuildingChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.building = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePostalCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.postalCode = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const regionId = event.target.value as number;\n    setRegion(regionId);\n    const reg = regions.find(r => r.id === regionId);\n    if (reg) {\n      setCities(reg.cities);\n    }\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    setOutletData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await createWarehouse(\n        outletData.name,\n        outletData.cityId,\n        outletData.streetName,\n        outletData.building,\n        outletData.postalCode,\n        outletData.phoneNumber,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <TextField\n              id=\"outletName\"\n              className={classes.spaces}\n              value={outletData.name}\n              onChange={handleNameChange}\n              label=\"Название\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPhone\"\n              className={classes.spaces}\n              value={outletData.phoneNumber}\n              onChange={handlePhoneChange}\n              label=\"Номер телефона\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPostalCode\"\n              className={classes.spaces}\n              value={outletData.postalCode}\n              onChange={handlePostalCodeChange}\n              label=\"Почтовый код\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={region}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {region !== 0 && (\n              <React.Fragment>\n                <TextField\n                  id=\"city\"\n                  select\n                  label=\"Город\"\n                  className={classes.spaces}\n                  value={outletData.cityId}\n                  onChange={handleCityChange}\n                  variant=\"outlined\"\n                >\n                  {cities.map(p => (\n                    <MenuItem key={p.id} value={p.id}>\n                      {p.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"street\"\n                  className={classes.spaces}\n                  value={outletData.streetName}\n                  onChange={handleStreetNameChange}\n                  label=\"Улица\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"building\"\n                  className={classes.spaces}\n                  value={outletData.building}\n                  onChange={handleBuildingChange}\n                  label=\"Здание\"\n                  variant=\"outlined\"\n                />\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default CreateWarehouse;\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CircularProgress, Grid, MenuItem, Snackbar, TextField } from '@material-ui/core';\nimport { Alert } from '@mui/material';\n\nimport { updateWarehouse } from 'src/Requests/PutRequests';\nimport { getAllRegions, getWarehouse } from 'src/Requests/GetRequests';\nimport Region from 'src/Types/Region';\nimport City from 'src/Types/City';\n\ninterface IRefresher {\n  refresh: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\ninterface IEditWarehouse {\n  id: number;\n  refresher?: IRefresher;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst EditWarehouse: React.FC<IEditWarehouse> = props => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    setLoading(true);\n    const res = await getWarehouse(props.id);\n    const regions = await getAllRegions();\n    if (isMounted) {\n      setRegions(regions);\n      setRegion(res.city.regionId);\n      setOutletData({\n        name: res.name,\n        cityId: res.city.id,\n        streetName: res.streetName,\n        building: res.building,\n        postalCode: res.postalCode,\n        phoneNumber: res.phoneNumber,\n      });\n\n      const reg = regions.find(r => r.id === res.city.regionId);\n      if (reg) {\n        setCities(reg.cities);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const cloneData = () => ({\n    name: outletData.name,\n    cityId: outletData.cityId,\n    streetName: outletData.streetName,\n    building: outletData.building,\n    postalCode: outletData.postalCode,\n    phoneNumber: outletData.phoneNumber,\n  });\n\n  const [outletData, setOutletData] = React.useState({\n    name: '',\n    cityId: 0,\n    streetName: '',\n    building: '',\n    postalCode: '',\n    phoneNumber: '',\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const [regions, setRegions] = React.useState<Region[]>([]);\n  const [region, setRegion] = React.useState(0);\n  const [cities, setCities] = React.useState<City[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.name = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleStreetNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.streetName = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleBuildingChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.building = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePostalCodeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.postalCode = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.phoneNumber = event.target.value as string;\n    setOutletData(data);\n  };\n\n  const handleRegionChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const regionId = event.target.value as number;\n    setRegion(regionId);\n    const reg = regions.find(r => r.id === regionId);\n    if (reg) {\n      setCities(reg.cities);\n    }\n  };\n\n  const handleCityChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const data = cloneData();\n    data.cityId = event.target.value as number;\n    setOutletData(data);\n  };\n\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const onClick = async () => {\n    try {\n      const res = await updateWarehouse(\n        props.id,\n        outletData.name,\n        outletData.cityId,\n        outletData.streetName,\n        outletData.building,\n        outletData.postalCode,\n        outletData.phoneNumber,\n      );\n\n      if (res && props.refresher) {\n        props.refresher.refresh();\n        props.setOpen(false);\n      } else {\n        setMessage('Не удалось выполнить запрос');\n        setOpen(true);\n      }\n    } catch (e) {\n      setMessage(`Не удалось выполнить запрос: ${e}`);\n      setOpen(true);\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justifyContent=\"center\">\n      <Snackbar\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity=\"warning\">\n          {message}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Grid container alignContent=\"stretch\" justifyContent=\"center\">\n          <CircularProgress />\n        </Grid>\n      ) : (\n        <React.Fragment>\n          <Grid container direction=\"column\" justifyContent=\"space-evenly\">\n            <TextField\n              id=\"outletName\"\n              className={classes.spaces}\n              value={outletData.name}\n              onChange={handleNameChange}\n              label=\"Название\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPhone\"\n              className={classes.spaces}\n              value={outletData.phoneNumber}\n              onChange={handlePhoneChange}\n              label=\"Номер телефона\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"outletPostalCode\"\n              className={classes.spaces}\n              value={outletData.postalCode}\n              onChange={handlePostalCodeChange}\n              label=\"Почтовый код\"\n              variant=\"outlined\"\n            />\n            <TextField\n              id=\"region\"\n              select\n              label=\"Регион\"\n              className={classes.spaces}\n              value={region}\n              onChange={handleRegionChange}\n              variant=\"outlined\"\n            >\n              {regions.map(p => (\n                <MenuItem key={p.id} value={p.id}>\n                  {p.name}\n                </MenuItem>\n              ))}\n            </TextField>\n            {region !== 0 && (\n              <React.Fragment>\n                <TextField\n                  id=\"city\"\n                  select\n                  label=\"Город\"\n                  className={classes.spaces}\n                  value={outletData.cityId}\n                  onChange={handleCityChange}\n                  variant=\"outlined\"\n                >\n                  {cities.map(p => (\n                    <MenuItem key={p.id} value={p.id}>\n                      {p.name}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  id=\"street\"\n                  className={classes.spaces}\n                  value={outletData.streetName}\n                  onChange={handleStreetNameChange}\n                  label=\"Улица\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"building\"\n                  className={classes.spaces}\n                  value={outletData.building}\n                  onChange={handleBuildingChange}\n                  label=\"Здание\"\n                  variant=\"outlined\"\n                />\n              </React.Fragment>\n            )}\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Button type=\"submit\" className={classes.spaces} color=\"primary\" variant=\"contained\" onClick={onClick}>\n              Создать\n            </Button>\n          </Grid>\n        </React.Fragment>\n      )}\n    </Grid>\n  );\n};\n\nexport default EditWarehouse;\n","import React from 'react';\nimport { GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\n\nimport { TableBasement } from 'src/Components/Admin/Parts/TableBasement';\nimport { getAllWarehouses } from 'src/Requests/GetRequests';\nimport ModalFormDialog from 'src/Components/Admin/Parts/ModalFormDialog';\nimport { deleteWarehouse } from 'src/Requests/DeleteRequests';\nimport CreateWarehouse from 'src/Components/Admin/Parts/CreateWarehouse';\nimport EditWarehouse from 'src/Components/Admin/Parts/EditWarehouse';\n\nexport const WarehouseList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 100 },\n    {\n      field: 'name',\n      headerName: 'Название',\n      width: 350,\n    },\n    {\n      field: 'adress',\n      headerName: 'Адрес',\n      width: 500,\n      valueGetter: (params: GridValueGetterParams) =>\n        `${params.row.postalCode}, ${params.row.region.name}, ${params.row.city.name}, ${params.row.streetName}, ${params.row.building}`,\n    },\n    {\n      field: 'phoneNumber',\n      headerName: 'Телефон',\n      width: 350,\n    },\n  ];\n\n  const onDelete = async (id: string): Promise<boolean> => {\n    const res = await deleteWarehouse(parseInt(id));\n    if (res === 0) {\n      setError('Не удалось удалить объект. Возможно, существуют зависимости.');\n      setOpen(true);\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const [createOpen, setCreateOpen] = React.useState(false);\n  const [editOpen, setEditOpen] = React.useState(false);\n  const [refreshFunction, setRefrFun] = React.useState({ refresh: () => console.log('') });\n  const [selected, setSelected] = React.useState('');\n\n  const createNew = (refrFun: () => void) => {\n    setCreateOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  const editSelected = (selectedId: string, refrFun: () => void) => {\n    setSelected(selectedId);\n    setEditOpen(true);\n    setRefrFun({ refresh: refrFun });\n  };\n\n  return (\n    <React.Fragment>\n      <TableBasement\n        name=\"Склады\"\n        getData={getAllWarehouses}\n        columns={columns}\n        pageSize={10}\n        deleteSelected={onDelete}\n        createNew={createNew}\n        editSelected={editSelected}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n      <ModalFormDialog\n        name={'Создание склада продуктов'}\n        open={createOpen}\n        form={<CreateWarehouse setOpen={setCreateOpen} refresher={refreshFunction} />}\n        setOpen={setCreateOpen}\n      />\n      <ModalFormDialog\n        name={'Изменение склада продуктов'}\n        open={editOpen}\n        form={<EditWarehouse id={parseInt(selected)} setOpen={setEditOpen} refresher={refreshFunction} />}\n        setOpen={setEditOpen}\n      />\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { GridColDef } from '@material-ui/data-grid';\n\nimport { getClients } from 'src/Requests/GetRequests';\nimport { UserTable } from 'src/Components/Admin/Parts/UserTable';\nimport { banUser, unbanUser } from 'src/Requests/PostRequests';\n\nexport const ClientsList = () => {\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 300 },\n    {\n      field: 'userName',\n      headerName: 'Логин',\n      width: 200,\n    },\n    {\n      field: 'firstName',\n      headerName: 'Имя',\n      width: 200,\n    },\n    {\n      field: 'secondName',\n      headerName: 'Фамилия',\n      width: 200,\n    },\n    {\n      field: 'email',\n      headerName: 'Email',\n      width: 230,\n    },\n    {\n      field: 'googleMail',\n      headerName: 'GMail',\n      width: 230,\n    },\n    {\n      field: 'phoneNumber',\n      headerName: 'Телефон',\n      width: 150,\n    },\n    {\n      field: 'banned',\n      headerName: 'Бан',\n      width: 120,\n      type: 'boolean',\n    },\n  ];\n\n  const onBan = async (id: string): Promise<boolean> => {\n    const res = await banUser(id);\n    if (res === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const onUnban = async (id: string): Promise<boolean> => {\n    const res = await unbanUser(id);\n    if (res === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [error, setError] = React.useState('');\n\n  return (\n    <React.Fragment>\n      <UserTable\n        name=\"Клиенты\"\n        getData={getClients}\n        columns={columns}\n        pageSize={10}\n        banSelected={onBan}\n        unbanSelected={onUnban}\n        open={open}\n        setOpen={setOpen}\n        error={error}\n      />\n    </React.Fragment>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\nimport { getOutletPurchases } from 'src/Requests/GetRequests';\nimport Purchase from 'src/Types/Purchase';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    spaces: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst OutletOrdersPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getOutletPurchases(search);\n    if (isMounted) {\n      setPurchases(res);\n    }\n  };\n\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\n  const [search, setSearch] = useState('');\n\n  const dateParse = (date: string) => {\n    const val = new Date(date);\n    return val.toLocaleDateString();\n  };\n\n  const handleSearchChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const val = event.target.value as string;\n    setSearch(val);\n    const res = await getOutletPurchases(val);\n    setPurchases(res);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid>\n              <Typography align=\"center\" className={classes.pageName} variant=\"h5\" component=\"h5\">\n                Активные заказы:\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <TextField\n                  id=\"purchaseSearch\"\n                  value={search}\n                  onChange={handleSearchChange}\n                  label=\"Поиск по номеру заказа\"\n                  variant=\"outlined\"\n                />\n                <Grid>\n                  {purchases.map(purchase => (\n                    <PurchaseDetailedInfo\n                      key={purchase.id}\n                      purchase={purchase}\n                      hideDelivery\n                      cardName={`Заказ ${purchase.code} от ${dateParse(purchase.createdDate)}`}\n                      showRefuse\n                      showFinish\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default OutletOrdersPage;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\nimport { getOutletHistoricalPurchases } from 'src/Requests/GetRequests';\nimport Purchase from 'src/Types/Purchase';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    spaces: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst OutletOrdersPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getOutletHistoricalPurchases(search);\n    if (isMounted) {\n      setPurchases(res);\n    }\n  };\n\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\n  const [search, setSearch] = useState('');\n\n  const dateParse = (date: string) => {\n    const val = new Date(date);\n    return val.toLocaleDateString();\n  };\n\n  const handleSearchChange = async (event: React.ChangeEvent<{ value: unknown }>) => {\n    const val = event.target.value as string;\n    setSearch(val);\n    const res = await getOutletHistoricalPurchases(val);\n    setPurchases(res);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justifyContent=\"center\" container>\n            <Grid>\n              <Typography align=\"center\" className={classes.pageName} variant=\"h5\" component=\"h5\">\n                История заказов:\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justifyContent=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <TextField\n                  id=\"purchaseSearch\"\n                  value={search}\n                  onChange={handleSearchChange}\n                  label=\"Поиск по номеру заказа\"\n                  variant=\"outlined\"\n                />\n                <Grid>\n                  {purchases.map(purchase => (\n                    <PurchaseDetailedInfo\n                      key={purchase.id}\n                      purchase={purchase}\n                      hideDelivery\n                      cardName={`Заказ ${purchase.code} от ${dateParse(purchase.createdDate)}`}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default OutletOrdersPage;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport { createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginTop: theme.spacing(10),\n      color: '#CCC',\n      backgroundColor: '#444',\n    },\n  }),\n);\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.root}>\n      <Box>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={5}>\n            <Grid item xs={12} sm={4}>\n              <Box borderBottom={1}>Полезные ссылки</Box>\n              <Box>\n                <Link href=\"/Shops\">Магазины</Link>\n              </Box>\n              <Box>\n                <Link href=\"/Registration\">Регистрация</Link>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Box borderBottom={1}>Поддержка</Box>\n              <Box>\n                <Typography>\n                  E-mail: <Link href=\"mailto:techno-dts@mail.ru\">techno-dts@mail.ru</Link>\n                </Typography>\n              </Box>\n              <Box>\n                <Typography>\n                  Горячая линия: <Link href=\"tel:8(800)735-21-48\">8(800)735-21-48</Link>\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Box borderBottom={1}>О приложении</Box>\n              <Box>Все права на приложение интернет-магазина</Box>\n              <Box>принадлежат DTS© 2022</Box>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Typography, Grid, Card, makeStyles, Theme, createStyles, Link } from '@material-ui/core';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getCityOulets } from 'src/Requests/GetRequests';\nimport Outlet from 'src/Types/Outlet';\nimport OutletInfo from 'src/Components/Parts/OutletInfo';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(1),\n    },\n    outletGrid: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\nconst Shops = () => {\n  const classes = useStyles();\n\n  const getData = async (isMounted: boolean) => {\n    const res = await getCityOulets();\n    if (isMounted) {\n      setOutlets(res);\n    }\n  };\n\n  const refreshData = () => {\n    let isMounted = true;\n    getData(isMounted);\n\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  React.useEffect(() => {\n    refreshData();\n  }, []);\n\n  const [outlets, setOutlets] = React.useState<Outlet[]>([]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container justifyContent=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"column\" justifyContent=\"center\" alignItems=\"center\" container>\n          <Typography variant=\"h4\" style={{ paddingBottom: '10px' }}>\n            Магазины в вашем городе\n          </Typography>\n          <Grid container direction=\"column\">\n            {outlets.map(o => (\n              <Card elevation={3} className={classes.card} key={o.id}>\n                <Grid className={classes.outletGrid} container direction=\"row\" justifyContent=\"center\">\n                  <Grid container justifyContent=\"flex-start\" alignContent=\"center\" item xs={12} sm={6}>\n                    <OutletInfo outlet={o} />\n                  </Grid>\n                  <Grid container justifyContent=\"center\" alignContent=\"center\" item xs={12} sm={5}>\n                    <Link href={`tel:${o.phoneNumber}}`}>{o.phoneNumber}</Link>\n                  </Grid>\n                </Grid>\n              </Card>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Shops;\n","import React from 'react';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Route, Routes } from 'react-router-dom';\n\nimport './App.css';\nimport CategoryPage from './Components/Pages/CategoryPage';\nimport ProductsPage from './Components/Pages/ProductsPage';\nimport ProductPage from './Components/Pages/ProductPage';\nimport RegistrationPage from './Components/Pages/RegistrationPage';\nimport CartPage from './Components/Pages/CartPage';\nimport WishlistPage from './Components/Pages/WishlistPage';\nimport CommonCategoryPage from './Components/Pages/CommonCategoryPage';\nimport PurchasingPage from './Components/Pages/PurchasingPage';\nimport UserPurchases from './Components/Pages/UserPurchases';\nimport { CommonCategoryList } from './Components/Admin/Pages/CommonCategoryList';\nimport { CategoryList } from './Components/Admin/Pages/CategoryList';\nimport { AdminPage } from './Components/Admin/Pages/AdminPage';\nimport { ParameterBlockList } from './Components/Admin/Pages/ParameterBlockList';\nimport { TechParameterList } from './Components/Admin/Pages/TechParameterList';\nimport { WorkersPage } from './Components/Admin/Pages/WorkersPage';\nimport { ProductParameterList } from './Components/Admin/Pages/ProductParameterList';\nimport { ProductValueList } from './Components/Admin/Parts/ProductValueList';\nimport { RegionList } from './Components/Admin/Pages/RegionList';\nimport { OutletList } from './Components/Admin/Pages/OutletList';\nimport { WarehouseList } from './Components/Admin/Pages/WarehouseList';\nimport { ClientsList } from './Components/Admin/Pages/ClientsList';\nimport OutletOrdersPage from './Components/Pages/OutletOrdersPage';\nimport HistoricalOrdersPage from './Components/Pages/HistoricalOrdersPage';\nimport Footer from './Components/Parts/Footer';\nimport Shops from './Components/Pages/Shops';\n\nconst innerTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#ef6c00',\n    },\n    secondary: {\n      main: '#FFF',\n    },\n  },\n});\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={innerTheme}>\n    <Routes>\n      <Route path=\"/\" element={<ProductsPage />} />\n      <Route path=\"/common/:commonCategoryName\" element={<CommonCategoryPage />} />\n      <Route path=\"/category/:categoryName\" element={<CategoryPage />} />\n      <Route path=\"/cart\" element={<CartPage />} />\n      <Route path=\"/wishlist\" element={<WishlistPage />} />\n      <Route path=\"/product/:productID\" element={<ProductPage />} />\n      <Route path=\"/registration\" element={<RegistrationPage />} />\n      <Route path=\"/purchasing\" element={<PurchasingPage />} />\n      <Route path=\"/purchases\" element={<UserPurchases />} />\n      <Route path=\"/admin\" element={<AdminPage />} />\n      <Route path=\"/admin/commonCategories\" element={<CommonCategoryList />} />\n      <Route path=\"/admin/categories\" element={<CategoryList />} />\n      <Route path=\"/admin/parameterBlocks\" element={<ParameterBlockList />} />\n      <Route path=\"/admin/parameters\" element={<TechParameterList />} />\n      <Route path=\"/admin/workers\" element={<WorkersPage />} />\n      <Route path=\"/admin/productParameters\" element={<ProductParameterList />} />\n      <Route path=\"/admin/product\" element={<ProductValueList />} />\n      <Route path=\"/admin/regions\" element={<RegionList />} />\n      <Route path=\"/admin/outlets\" element={<OutletList />} />\n      <Route path=\"/admin/warehouses\" element={<WarehouseList />} />\n      <Route path=\"/admin/Clients\" element={<ClientsList />} />\n      <Route path=\"/OutletOrders\" element={<OutletOrdersPage />} />\n      <Route path=\"/OrdersHistory\" element={<HistoricalOrdersPage />} />\n      <Route path=\"/Shops\" element={<Shops />} />\n    </Routes>\n    <Footer />\n  </ThemeProvider>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from 'src/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport Footer from './Components/Parts/Footer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}