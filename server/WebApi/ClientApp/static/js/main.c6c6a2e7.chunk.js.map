{"version":3,"sources":["Requests/PostRequests.ts","Requests/DeleteRequests.ts","Components/Parts/PoductCounter.tsx","Components/Parts/ProductCard.tsx","Requests/AccountRequests.ts","Types/Roles.ts","Requests/GetRequests.ts","Components/Parts/CategorySelector.tsx","Components/Parts/ErrorSnackBar.tsx","Components/Parts/LoginForm.tsx","Components/Parts/LoginModal.tsx","Components/Parts/UserAvatar.tsx","Components/Parts/UserMiniPanel.tsx","Components/Parts/CityNavigation.tsx","Components/Parts/NavigationBar.tsx","Components/Parts/SortBar.tsx","Components/Parts/RangeFilter.tsx","Components/Parts/ListFilter.tsx","Components/Parts/FilterBlock.tsx","Components/Parts/FilterBar.tsx","Components/Parts/ProductListParams.tsx","Components/Pages/CategoryPage.tsx","Components/Pages/ProductsPage.tsx","Components/Parts/OutletInfo.tsx","Components/Parts/OutletCount.tsx","Components/Parts/UnitProducts.tsx","Components/Parts/PriceLikeBuyCard.tsx","Components/Parts/DetailedProductCard.tsx","Components/Parts/ProductDescription.tsx","Components/Parts/ProductParameter.tsx","Components/Parts/ProductParams.tsx","Components/Parts/ReviewBlock.tsx","Components/Parts/ReviewForm.tsx","Components/Parts/ProductReviews.tsx","Components/Parts/ProductInfoPanel.tsx","Components/Pages/ProductPage.tsx","Components/Parts/RegistrationForm.tsx","Components/Pages/RegistrationPage.tsx","Requests/PutRequests.ts","Components/Pages/CartPage.tsx","Components/Pages/WishlistPage.tsx","Components/Parts/CategoryCard.tsx","Components/Pages/CommonCategoryPage.tsx","Types/PurchaseStatus.ts","Components/Parts/PurchasingItemsList.tsx","Components/Parts/PurchaseDetailedInfo.tsx","Components/Pages/PurchasingPage.tsx","Components/Pages/UserPurchases.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["post","url","data","a","axios","addToCart","productId","count","addToWishlist","createReview","mark","description","getPrepurchaseInfo","items","cityId","localStorage","getItem","purchaseItems","createPurchase","parseInt","delivery","deleteRequest","delete","deleteFromCart","deleteFromWishlist","useStyles","makeStyles","theme","createStyles","root","padding","spacing","PoductCounter","props","useState","currentCount","setCount","classes","onCount","newCount","countValue","id","onlyNubmers","Grid","className","container","direction","justify","alignItems","Button","variant","onClick","TextField","value","onChange","event","curStringCount","target","test","display","minHeight","marginBottom","details","flexDirection","content","flex","button","buttonright","paddingLeft","paddingTop","paddingBottom","cover","maxWidth","maxHeight","margin","bold","fontWeight","rating","ratingNum","marginLeft","ProductCard","role","sessionStorage","isShown","setIsShown","isChecked","setChecked","picUrl","product","picURL","picture","setPicture","useEffect","isMounted","img","Image","src","cart","inCart","includes","setInCart","onerror","inWishlist","setInWishlist","addProductToCart","onBuy","setItem","addProductToWishlist","onWished","setOpen","deleteProductFromWishlist","onDelete","bind","React","open","handleClose","reason","Card","onMouseEnter","onMouseLeave","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","onChecked","item","xs","sm","Checkbox","color","checked","alt","name","Typography","vendorCode","CardContent","component","Link","href","price","alignContent","Rating","readOnly","hideLike","IconButton","aria-label","hideBuy","showCounter","serverAnswers","authViaGoogle","token","logInRequest","logInData","registrationRequest","registrationData","regViaGoogleRequest","getRole","get","getUserInfo","logOut","Roles","guest","admin","customer","getRequest","getProducts","currentPage","itemsOnPage","sortType","sortparams","sortTypeParsing","params","URLSearchParams","location","search","type","reverse","getCart","getCartUnsigned","getWishlist","getCategories","commonCategory","getCommonCategories","getReviews","getProduct","getParameters","getRegions","getProductsOfCategory","categoryName","filters","filter","range","minValue","maxValue","itemIds","length","join","split","getPurchases","paper","marginRight","menu","paddingRight","largeObject","breakpoints","down","smallObject","up","CategorySelector","comCategories","setComCategories","anchorRef","useRef","handleToggle","prevOpen","current","focus","res","getCategs","ref","size","aria-controls","undefined","aria-haspopup","endIcon","Popper","anchorEl","transition","disablePortal","Paper","ClickAwayListener","onClickAway","contains","MenuList","autoFocusItem","onKeyDown","key","preventDefault","Array","map","comCategory","index","MenuItem","document","ErrorSnackBar","AlertTitle","message","errors","er","spaces","marginTop","LoginForm","login","password","rememberMe","loginData","setLoginData","setErrors","setMessage","handleGoogleLoginSuccess","googleData","getAuthResponse","googleRedirectTo","logInButtonClicked","redirectTo","response","code","window","replace","id_token","serverResult","redirectToRegistrationPage","profile","getBasicProfile","regData","email","getEmail","firstName","getGivenName","secondName","getFamilyName","history","pushState","label","FormControlLabel","control","clientId","buttonText","onSuccess","cookiePolicy","buttons","LoginModal","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","UserAvatar","picPath","userInfo","avatar","stringToColor","string","i","hash","charCodeAt","toString","substr","Fragment","Avatar","userName","sx","bgcolor","children","UserMiniPanel","setUserInfo","getUserInformation","userInformation","signOut","removeItem","Divider","bar","backgroundColor","CityNavigation","city","setCity","regions","setRegions","getCity","getRegionsInfo","cityName","onCityClick","currentTarget","reg","find","r","cities","c","cit","pickCity","region","cityAutoPicked","Accordion","AccordionSummary","expandIcon","AccordionDetails","List","ind","ListItem","position","borderRadius","shape","palette","common","white","width","inputRoot","inputInput","transitions","create","searchIcon","height","pointerEvents","justifyContent","logoButton","fontSize","fontFamily","logoIcon","realElement","NavigationBar","isAuth","setAuth","loaded","setLoaded","setSearch","checkAuth","authres","AppBar","Toolbar","startIcon","InputBase","str","placeholder","input","inputProps","ButtonGroup","selector","formControl","minWidth","SortBar","handleOpen","handleSortTypeChanged","FormControl","InputLabel","Select","labelId","heading","textDecoration","beforeText","RangeFilter","setMinValue","setMaxValue","paramValue","pickedParams","parameter","handleMinChange","setParameter","handleMaxChange","checkboxField","overflow","ListFilter","picked","setPicked","parameterValues","p","pic","getChecked","onCheckboxChanged","pickedValues","push","findIndex","v","splice","val","typography","FilterBlock","parameterBlock","parameters","rightTextField","leftTextField","FilterBar","setPrices","gutterBottom","priceRange","pickedPrices","InputProps","endAdornment","InputAdornment","parameterBlocks","applyChanges","createProdParams","getItems","pickedPrice","productList","lastPage","handlePageChange","this","setPage","createURL","setSortType","filtersApplied","setInfo","prodList","maxPage","minPrice","maxPrice","checkPickedPrices","newValue","setParams","currPage","sort","isItNumber","isNaN","setParameterValue","param","f","setFilters","keys","next","done","set","productGrid","categoryWord","filterPanel","CategoryPage","useParams","object","products","useLocalObservable","qParams","Pagination","page","ProductsPage","getProd","OutletInfo","outlet","streetName","building","userNote","OutletCount","dialog","outlets","isInWarehouse","o","grid","PriceLikeBuyCard","checkInCart","UnitProducts","image","card","DetailedProductCard","strinTechParams","paramBlocks","block","important","substring","paramString","outletProducts","prodName","fontWeightBold","descriptionText","ProductDescription","productName","productDescription","line","borderBottom","divider","ProductParameter","ProductParams","reviewHeader","commentSection","ReviewBlock","review","cardPart","ReviewForm","setReview","submit","addReview","multiline","rows","fullWidth","ProductReviews","getProductReviews","setReviews","reviewed","setReviewed","reviews","newReview","newVar","pop","saveReviewed","TabPanel","other","hidden","a11yProps","background","tabs","borderRight","ProductInfoPanel","setValue","Tabs","orientation","textColor","Tab","ProductPage","setProduct","setParameters","productID","onload","RegistrationForm","newObject","oldData","phoneNumber","rerendered","setRererendered","setRegData","registerButtonClicked","newData","RegistrationPage","async","defer","style","state","put","pageName","CartPage","setCartItems","updateCurrentSumm","pickedProducts","cartItems","prod","summ","element","setCurrentSumm","updateCartItem","itemId","deleteItem","deleted","newCartItems","deletedPicked","setPickedProducts","added","newPicked","currentSumm","cartItem","disabled","WishlistPage","setWishlistItems","wishlistItems","newWishlistItems","console","log","wishlistItem","CategoryCard","redirectionURL","category","CardActionArea","CommonCategoryPage","categories","setCategories","commonCategoryName","arr","array","createRow","PurchaseStatus","getStatusString","text","PurchasingItemsList","PurchaseDetailedInfo","cardName","purchase","customerName","sellerName","status","totalCost","recieverName","deliveryAdress","deliveryCost","deliveryOutlet","topCard","field","textSep","PurchasingPage","getPreInfo","parseParams","setPrepurchaseInfo","setSum","sum","dataArr","result","toParse","createNewCustomerInfo","curr","customerFullName","customerTelephone","prepurchaseInfo","customerInfo","setCustomerInfo","deliveryType","setDeliveryType","setRecieverName","recieverAdress","setRecieverAdress","setOutlet","operationResult","setResult","err","deliveryOutletId","itemArr","e","newVal","RadioGroup","row","deliveryPrice","Radio","UserPurchases","setPurchases","purchases","date","createdDate","Date","toLocaleString","innerTheme","createMuiTheme","primary","main","secondary","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6c6a2e7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport ItemOfPurchase from 'src/Types/ItemOfPurchase';\r\nimport PurchaseRequest from 'src/Types/PurchaseRequest';\r\n\r\nasync function post<T>(url: string, data: T) {\r\n  return (await axios.post(url, data)).data;\r\n}\r\n\r\nasync function addToCart(productId: string, count: number) {\r\n  return await post('/api/CustomerLists/cart/', { productId: productId, count: count });\r\n}\r\n\r\nasync function addToWishlist(productId: string) {\r\n  return await post(`/api/CustomerLists/wishlist/${productId}/`, null);\r\n}\r\n\r\nasync function createReview(productId: string, mark: number, description: string) {\r\n  return await post(`/api/Review/`, { productId: productId, mark: mark, description: description });\r\n}\r\n\r\nasync function getPrepurchaseInfo(items: ItemOfPurchase[]) {\r\n  const cityId = localStorage.getItem('cityId');\r\n  const data = { cityId: cityId, purchaseItems: items };\r\n  return await post(`/api/Purchase/preinfo`, data);\r\n}\r\n\r\nasync function createPurchase(data: PurchaseRequest) {\r\n  const cityId = localStorage.getItem('cityId');\r\n  data.cityId = parseInt(cityId as string);\r\n  if (data.delivery) {\r\n    data.delivery.cityId = parseInt(cityId as string);\r\n  }\r\n\r\n  return await post(`/api/Purchase/`, data);\r\n}\r\n\r\nexport { addToCart, addToWishlist, createReview, getPrepurchaseInfo, createPurchase };\r\n","import axios from 'axios';\n\nasync function deleteRequest<T>(url: string, data: T) {\n  return (await axios.delete(url, data)).data;\n}\n\nasync function deleteFromCart(productId: string) {\n  return await deleteRequest(`/api/CustomerLists/cart/${productId}`, null);\n}\n\nasync function deleteFromWishlist(productId: string) {\n  return await deleteRequest(`/api/CustomerLists/wishlist/${productId}`, null);\n}\n\nexport { deleteFromCart, deleteFromWishlist };\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IPoductCounter {\n  count: number;\n  id?: string;\n  onCount?: (newCount: number, id?: string) => void;\n}\n\nconst PoductCounter: React.FC<IPoductCounter> = props => {\n  const [currentCount, setCount] = useState<number>(props.count);\n  const classes = useStyles();\n\n  const onCount = (newCount: number) => {\n    let countValue = newCount;\n    if (newCount > 99) {\n      countValue = 99;\n    } else if (newCount < 1) {\n      countValue = 1;\n    }\n\n    if (currentCount !== countValue) {\n      if (props.onCount) {\n        props.onCount(countValue, props.id);\n      }\n\n      setCount(countValue);\n    }\n  };\n\n  const addCount = () => {\n    const curCount = currentCount + 1;\n    onCount(curCount);\n  };\n\n  const minCount = () => {\n    const curCount = currentCount - 1;\n    onCount(curCount);\n  };\n\n  const onlyNubmers = /^\\d[0-2]$/;\n  const onTextChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const curStringCount = event.target.value as string;\n    if (onlyNubmers.test(curStringCount)) {\n      onCount(parseInt(curStringCount));\n    } else {\n      onCount(1);\n    }\n  };\n\n  return (\n    <Grid className={classes.root} container direction=\"column\" justify=\"center\" alignItems=\"center\">\n      <Button variant=\"outlined\" onClick={addCount}>\n        +\n      </Button>\n      <TextField id=\"counter\" value={currentCount} onChange={onTextChanged} variant=\"outlined\" />\n      <Button variant=\"outlined\" onClick={minCount}>\n        -\n      </Button>\n    </Grid>\n  );\n};\n\nexport default PoductCounter;\n","import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Button, Snackbar } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Close from '@mui/icons-material/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport Product from 'src/Types/Product';\r\nimport { addToCart, addToWishlist } from 'src/Requests/PostRequests';\r\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\r\n\r\nimport PoductCounter from './PoductCounter';\r\n\r\ninterface IProductCard {\r\n  product: Product;\r\n  hideBuy?: boolean;\r\n  hideLike?: boolean;\r\n  showCounter?: boolean;\r\n  count?: number;\r\n  isChecked?: boolean;\r\n  onCount?: (newCount: number, productId?: string) => void;\r\n  onDelete?: (productId: string) => void;\r\n  onBuy?: () => void;\r\n  onWished?: () => void;\r\n  onChecked?: (product: Product, added: boolean) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      minHeight: 180,\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    button: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    buttonright: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(1),\r\n    },\r\n    cover: {\r\n      maxWidth: 151,\r\n      maxHeight: 120,\r\n      margin: theme.spacing(1),\r\n    },\r\n    bold: {\r\n      fontWeight: 600,\r\n    },\r\n    rating: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    ratingNum: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst ProductCard: React.FC<IProductCard> = props => {\r\n  const role = sessionStorage.getItem('signed');\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [isChecked, setChecked] = useState(props.isChecked ?? false);\r\n  const picUrl = 'https://localhost:5001/products/';\r\n  const [picture, setPicture] = useState(`${picUrl}${props.product.picURL}`);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const img = new Image();\r\n    img.src = `${picUrl}${props.product.picURL}`;\r\n\r\n    if (!role) {\r\n      const cart = localStorage.getItem('cartItems');\r\n      if (cart) {\r\n        props.product.inCart = cart.includes(props.product.id);\r\n        setInCart(props.product.inCart);\r\n      }\r\n    }\r\n\r\n    if (isMounted) {\r\n      img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  });\r\n\r\n  const [inCart, setInCart] = useState(props.product.inCart);\r\n  const [inWishlist, setInWishlist] = useState(props.product.inWishlist);\r\n\r\n  const addProductToCart = async () => {\r\n    if (role) {\r\n      const response = await addToCart(props.product.id, 0);\r\n      if (response !== null) {\r\n        setInCart(true);\r\n        if (props.onBuy) {\r\n          props.onBuy();\r\n        }\r\n      }\r\n    } else {\r\n      const items = localStorage.getItem('cartItems');\r\n\r\n      if (items) {\r\n        if (items.includes(props.product.id)) {\r\n          return;\r\n        }\r\n        localStorage.setItem('cartItems', `${items},${props.product.id}`);\r\n      } else {\r\n        localStorage.setItem('cartItems', props.product.id);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addProductToWishlist = async () => {\r\n    if (role) {\r\n      const response = await addToWishlist(props.product.id);\r\n      if (response !== null) {\r\n        setInWishlist(true);\r\n        if (props.onWished) {\r\n          props.onWished();\r\n        }\r\n      }\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  const deleteProductFromWishlist = async () => {\r\n    const response = await deleteFromWishlist(props.product.id);\r\n    if (response === 1) {\r\n      setInWishlist(false);\r\n      if (props.onWished) {\r\n        props.onWished();\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDelete = props.onDelete?.bind(this, props.product.id);\r\n\r\n  const onChange = () => {\r\n    if (props.onChecked) {\r\n      props.onChecked(props.product, !isChecked);\r\n    }\r\n\r\n    setChecked(!isChecked);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      className={classes.root}\r\n      onMouseEnter={() => setIsShown(true)}\r\n      onMouseLeave={() => setIsShown(false)}\r\n    >\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Зарегистрируйтесь для использования всех возможностей магазина!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n        {props.onChecked && (\r\n          <Grid container direction=\"column\" item alignItems=\"center\" justify=\"center\" xs={12} sm={1}>\r\n            <Checkbox color=\"primary\" onChange={onChange} checked={isChecked} />\r\n          </Grid>\r\n        )}\r\n        <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" item xs={12} sm={3}>\r\n          <img className={classes.cover} src={picture} alt={props.product.name} />\r\n          <Typography variant=\"body1\">{isShown && props.product.vendorCode}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} container direction=\"column\">\r\n          <CardContent className={classes.content}>\r\n            <Grid>\r\n              <Typography component=\"h5\" variant=\"h5\">\r\n                <Link href={`/product/${props.product.id}`} color=\"inherit\">\r\n                  {props.product.name}\r\n                </Link>\r\n              </Typography>\r\n              <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\r\n                {props.product.price}₽\r\n              </Typography>\r\n            </Grid>\r\n          </CardContent>\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            justify=\"center\"\r\n            alignContent=\"center\"\r\n            direction=\"row\"\r\n            className={classes.rating}\r\n          >\r\n            <Rating name=\"read-only\" value={props.product.mark} readOnly />\r\n            <Typography className={`${classes.bold} ${classes.ratingNum}`}>{props.product.mark}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" item xs={12} sm={2}>\r\n          {!props.hideLike && (\r\n            <Grid item xs={12} sm={4}>\r\n              {inWishlist ? (\r\n                <IconButton\r\n                  aria-label=\"favourite\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  onClick={deleteProductFromWishlist}\r\n                >\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton aria-label=\"favourite\" className={classes.button} onClick={addProductToWishlist}>\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n              )}\r\n            </Grid>\r\n          )}\r\n          {!props.hideBuy &&\r\n            (inCart ? (\r\n              <Grid item xs={12} sm={8}>\r\n                <Button className={classes.button} variant=\"contained\" color=\"primary\" href=\"/cart\">\r\n                  В Корзине\r\n                </Button>\r\n              </Grid>\r\n            ) : (\r\n              <Grid item xs={12} sm={8}>\r\n                <Button className={classes.button} variant=\"outlined\" onClick={addProductToCart}>\r\n                  Купить\r\n                </Button>\r\n              </Grid>\r\n            ))}\r\n          {props.showCounter && (\r\n            <Grid item xs={12} sm={6}>\r\n              <PoductCounter id={props.product.id} count={props.count as number} onCount={props.onCount} />\r\n            </Grid>\r\n          )}\r\n          {props.onDelete && (\r\n            <Grid item xs={12} sm={4}>\r\n              <IconButton aria-label=\"favourite\" className={classes.buttonright} onClick={onDelete}>\r\n                <Close />\r\n              </IconButton>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import axios from 'axios';\n\nimport Login from 'src/Types/Login';\nimport Register from 'src/Types/Register';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport UserMainInfo from 'src/Types/UserMainInfo';\n\nconst serverAnswers = {\n  noCommand: 0,\n  signedIn: 3,\n  userNotFound: 10,\n};\n\nconst authViaGoogle = async (token: string): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/GoogleAuth', { token: token })).data;\n\nconst logInRequest = async (logInData: Login): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Login', logInData)).data;\n\nconst registrationRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Register', registrationData)).data;\n\nconst regViaGoogleRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/RegisterViaGoogle', registrationData)).data;\n\nconst getRole = async (): Promise<string> => (await axios.get('/api/Account/Role')).data;\n\nconst getUserInfo = async (): Promise<UserMainInfo> => (await axios.get('/api/Account/GetCurrentUserInfo')).data;\n\nconst logOut = async (): Promise<string> => (await axios.post('/api/Account/LogOut')).data;\n\nexport {\n  serverAnswers,\n  authViaGoogle,\n  logInRequest,\n  registrationRequest,\n  regViaGoogleRequest,\n  getRole,\n  getUserInfo,\n  logOut,\n};\n","const Roles = {\n  guest: 'Guest',\n  admin: 'Admin',\n  customer: 'Customer',\n};\n\nexport default Roles;\n","import axios from 'axios';\r\n\r\nimport Category from 'src/Types/Category';\r\nimport CommonCategory from 'src/Types/CommonCategory';\r\nimport FilterValue from 'src/Types/FilterValue';\r\nimport ParameterBlock from 'src/Types/ParameterBlock';\r\nimport Product from 'src/Types/Product';\r\nimport Purchase from 'src/Types/Purchase';\r\nimport Region from 'src/Types/Region';\r\nimport Sorting from 'src/Types/Sorting';\r\n\r\nasync function getRequest(url: string) {\r\n  return (await axios.get(url)).data;\r\n}\r\n\r\nasync function getProducts(currentPage: number, itemsOnPage: number, sortType: string, price: number[]) {\r\n  const sortparams: Sorting = sortTypeParsing(sortType);\r\n  const params = new URLSearchParams(location.search);\r\n  const search = params.get('search');\r\n  let url = `/api/Product?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\r\n  if (search) {\r\n    url += `&search=${search}`;\r\n  }\r\n\r\n  return await getRequest(url);\r\n}\r\n\r\nasync function getCart() {\r\n  const url = `/api/CustomerLists/cart`;\r\n  return await getRequest(url);\r\n}\r\n\r\nasync function getCartUnsigned() {\r\n  const items = localStorage.getItem('cartItems');\r\n  const url = `/api/CustomerLists/cart/unsigned?productIds=${items}`;\r\n  return await getRequest(url);\r\n}\r\n\r\nasync function getWishlist() {\r\n  const url = `/api/CustomerLists/wishlist`;\r\n  return await getRequest(url);\r\n}\r\n\r\nasync function getCategories(commonCategory: string) {\r\n  return (await getRequest(`/api/Category/${commonCategory}`)) as Category[];\r\n}\r\n\r\nasync function getCommonCategories() {\r\n  return (await getRequest('/api/CommonCategory')) as CommonCategory[];\r\n}\r\n\r\nasync function getReviews(productId: string) {\r\n  return await getRequest(`/api/Review/${productId}`);\r\n}\r\n\r\nasync function getProduct(id: string) {\r\n  const cityId = localStorage.getItem('cityId');\r\n  return (await getRequest(`/api/Product/${id}?cityId=${cityId}`)) as Product;\r\n}\r\n\r\nasync function getParameters(id: string) {\r\n  return (await getRequest(`/api/Product/parameters/${id}`)) as ParameterBlock[];\r\n}\r\n\r\nasync function getRegions() {\r\n  return (await getRequest('/api/Geography/regions')) as Region[];\r\n}\r\n\r\nasync function getProductsOfCategory(\r\n  categoryName: string,\r\n  currentPage: number,\r\n  itemsOnPage: number,\r\n  sortType: string,\r\n  price: number[],\r\n  filters: FilterValue[],\r\n) {\r\n  const sortparams: Sorting = sortTypeParsing(sortType);\r\n  let url = `/api/Category/name/${categoryName}?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\r\n\r\n  for (const filter of filters) {\r\n    if (filter.range) {\r\n      if (filter.minValue || filter.maxValue) {\r\n        if (!filter.minValue) {\r\n          filter.minValue = '0';\r\n        }\r\n        if (!filter.maxValue) {\r\n          filter.maxValue = '0';\r\n        }\r\n        url += `&${filter.id}=${filter.minValue},${filter.maxValue}`;\r\n      }\r\n    } else {\r\n      if (filter.itemIds && filter.itemIds.length > 0) {\r\n        url += `&${filter.id}=${filter.itemIds?.join(',')}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  return await getRequest(url);\r\n}\r\n\r\nfunction sortTypeParsing(sortType: string): Sorting {\r\n  if (sortType.includes('reverse')) {\r\n    return { type: sortType.split(' ')[0], reverse: true };\r\n  } else {\r\n    return { type: sortType.split(' ')[0], reverse: false };\r\n  }\r\n}\r\n\r\nasync function getPurchases() {\r\n  return (await getRequest('/api/Purchase')) as Purchase[];\r\n}\r\n\r\nexport default getRequest;\r\n\r\nexport {\r\n  getProducts,\r\n  getRequest,\r\n  getCategories,\r\n  getCommonCategories,\r\n  getProductsOfCategory,\r\n  getProduct,\r\n  getCart,\r\n  getWishlist,\r\n  getReviews,\r\n  getParameters,\r\n  getRegions,\r\n  getCartUnsigned,\r\n  getPurchases,\r\n};\r\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { Typography } from '@material-ui/core';\n\nimport CommonCategory from 'src/Types/CommonCategory';\nimport { getCommonCategories } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n    menu: {\n      padding: theme.spacing(1),\n    },\n    item: {\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    largeObject: {\n      [theme.breakpoints.down('sm')]: {\n        display: 'none',\n      },\n    },\n    smallObject: {\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nconst CategorySelector: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [comCategories, setComCategories] = React.useState<CommonCategory[]>([]);\n\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    const keyValue = 'Tab';\n    if (event.key === keyValue) {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const getCategs = async () => {\n      const res = await getCommonCategories();\n      if (isMounted) {\n        setComCategories(res);\n      }\n    };\n    getCategs();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <div ref={anchorRef}>\n        {open ? (\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            className={classes.largeObject}\n            onClick={handleToggle}\n            endIcon={<ArrowDropUpIcon />}\n          >\n            Категории\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.largeObject}\n            endIcon={<ArrowDropDownIcon />}\n          >\n            Категории\n          </Button>\n        )}\n        {open ? (\n          <Button\n            variant=\"outlined\"\n            size=\"medium\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.smallObject}\n          >\n            <ArrowDropUpIcon />\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            size=\"medium\"\n            color=\"secondary\"\n            aria-controls={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={handleToggle}\n            className={classes.smallObject}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        )}\n      </div>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown} className={classes.menu}>\n              {comCategories instanceof Array &&\n                comCategories.map((comCategory, index) => (\n                  <MenuItem\n                    className={classes.item}\n                    key={index}\n                    onClick={() => {\n                      document.location.href = `/common/${comCategory.name}`;\n                    }}\n                  >\n                    <Typography variant=\"h6\" component=\"h6\">\n                      {comCategory.name}\n                    </Typography>\n                  </MenuItem>\n                ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </div>\n  );\n};\n\nexport default CategorySelector;\n","import React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport { AlertTitle } from '@material-ui/lab';\nimport MuiAlert from '@mui/material/Alert';\n\ninterface IErrorSnackBar {\n  open: boolean;\n  setOpen: (b: boolean) => void;\n  message: string;\n  errors: string[];\n}\n\nconst ErrorSnackBar: React.FC<IErrorSnackBar> = props => {\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={props?.open} onClose={handleClose}>\n      <MuiAlert onClose={handleClose} severity=\"warning\">\n        <AlertTitle>{props?.message}</AlertTitle>\n        <ul>\n          {props?.errors.map((er, key) => (\n            <li key={key}>{er}</li>\n          ))}\n        </ul>\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ErrorSnackBar;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\n\nimport Login from 'src/Types/Login';\nimport { authViaGoogle, logInRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst LoginForm: React.FC = () => {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState<Login>({ login: '', password: '', rememberMe: true });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleRememberMeChange = () => {\n    setLoginData({ login: loginData.login, password: loginData.password, rememberMe: !loginData.rememberMe });\n  };\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: event.target.value as string,\n      password: loginData.password,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: loginData.login,\n      password: event.target.value as string,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handleGoogleLoginSuccess = async (googleData: unknown) => {\n    if (googleData) {\n      const authResponse = (googleData as GoogleLoginResponse)?.getAuthResponse();\n      if (authResponse) {\n        googleRedirectTo(googleData as GoogleLoginResponse);\n      }\n    }\n  };\n\n  const logInButtonClicked = async () => {\n    redirectTo(await logInRequest(loginData));\n  };\n\n  const redirectTo = async (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const googleRedirectTo = async (googleData: GoogleLoginResponse) => {\n    const id = googleData?.getAuthResponse()?.id_token;\n    const serverResult = await authViaGoogle(id);\n    switch (serverResult.code) {\n      case serverAnswers.userNotFound:\n        redirectToRegistrationPage(id, googleData);\n        break;\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(serverResult.message);\n        setErrors(serverResult.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const redirectToRegistrationPage = (id: string, googleData: GoogleLoginResponse) => {\n    const profile = googleData.getBasicProfile();\n    const regData: Register = {\n      login: '',\n      password: '',\n      email: profile.getEmail(),\n      firstName: profile.getGivenName(),\n      secondName: profile.getFamilyName(),\n      token: id,\n    };\n\n    history.pushState(regData, '', '/registration');\n    window.location.replace('/registration');\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={loginData.login}\n        onChange={handleLoginChange}\n        label=\"Логин\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={loginData.password}\n        onChange={handlePasswordChange}\n        label=\"Пароль\"\n        variant=\"outlined\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={loginData.rememberMe}\n            onChange={handleRememberMeChange}\n            name=\"rememberMe\"\n            color=\"primary\"\n          />\n        }\n        label=\"Запомнить меня\"\n        className={classes.spaces}\n      />\n      <Grid container justify=\"flex-end\">\n        <Button\n          type=\"submit\"\n          className={classes.spaces}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={logInButtonClicked}\n        >\n          Войти\n        </Button>\n      </Grid>\n      <Grid className={classes.spaces} container justify=\"center\">\n        <Typography component=\"div\">Войти с помощью</Typography>\n      </Grid>\n      <Grid container justify=\"center\">\n        <GoogleLogin\n          clientId={'1036988036938-9u2bo3aiqo038ehm8tlb3vl9lq6bm27f.apps.googleusercontent.com'}\n          buttonText=\"Log in with Google\"\n          onSuccess={handleGoogleLoginSuccess}\n          cookiePolicy={'single_host_origin'}\n        />\n      </Grid>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport LoginForm from './LoginForm';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst LoginModal: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} color=\"secondary\" variant=\"outlined\" onClick={handleClickOpen}>\n        Войти\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Войти</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <LoginForm />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Grid container justify=\"center\">\n            <Typography>Вы здесь впервые?</Typography>\n            <Link href=\"/Registration\"> Зарегистрироваться </Link>\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import Avatar from '@mui/material/Avatar';\nimport React from 'react';\n\nimport UseBaseInfo from 'src/Types/UserBaseInfo';\n\ninterface IUserAvatar {\n  userInfo: UseBaseInfo;\n}\n\nconst UserAvatar: React.FC<IUserAvatar> = props => {\n  const picUrl = 'https://localhost:5001/users/';\n  const picPath = props.userInfo?.avatar?.includes('http')\n    ? props.userInfo?.avatar\n    : `${picUrl}${props.userInfo.avatar}`;\n\n  const stringToColor = (string: string) => {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.substr(-2);\n    }\n\n    return color;\n  };\n\n  const stringAvatar = (name: string) => ({\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name[0]}`,\n  });\n\n  return (\n    <React.Fragment>\n      {props.userInfo &&\n        (props.userInfo.avatar ? (\n          <Avatar alt={props.userInfo.userName} src={picPath} />\n        ) : (\n          <Avatar {...stringAvatar(props.userInfo.userName)} />\n        ))}\n    </React.Fragment>\n  );\n};\nexport default UserAvatar;\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { Divider, Typography } from '@material-ui/core';\r\n\r\nimport { getUserInfo, logOut } from 'src/Requests/AccountRequests';\r\nimport UserInfo from 'src/Types/UserMainInfo';\r\n\r\nimport UserAvatar from './UserAvatar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    paper: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    menu: {\r\n      padding: theme.spacing(1),\r\n    },\r\n    item: {\r\n      paddingRight: theme.spacing(4),\r\n      paddingLeft: theme.spacing(4),\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nconst UserMiniPanel: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [userInfo, setUserInfo] = useState<UserInfo>();\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const prevOpen = useRef(open);\r\n  useEffect(() => {\r\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getUserInformation(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event: React.KeyboardEvent) {\r\n    const keyValue = 'Tab';\r\n    if (event.key === keyValue) {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const getUserInformation = async (isMounted: boolean) => {\r\n    const userInformation = await getUserInfo();\r\n\r\n    if (isMounted) {\r\n      setUserInfo(userInformation);\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    await logOut();\r\n    sessionStorage.removeItem('signed');\r\n    document.location.href = `/`;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {userInfo && (\r\n        <React.Fragment>\r\n          <Button onClick={handleToggle} ref={anchorRef}>\r\n            <UserAvatar userInfo={{ userName: userInfo.userName, avatar: userInfo.avatar, role: userInfo.role }} />\r\n          </Button>\r\n          <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleClose}>\r\n                <MenuList\r\n                  autoFocusItem={open}\r\n                  id=\"menu-list-grow\"\r\n                  onKeyDown={handleListKeyDown}\r\n                  className={classes.menu}\r\n                >\r\n                  <Typography variant=\"h5\" color=\"primary\" component=\"h5\">\r\n                    {userInfo.userName}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" component=\"h6\">\r\n                    {`${userInfo.firstName} ${userInfo.secondName}`}\r\n                  </Typography>\r\n                  <Divider />\r\n                  <MenuItem\r\n                    className={classes.item}\r\n                    onClick={() => {\r\n                      document.location.href = `/profile`;\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h5\">Профиль</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    className={classes.item}\r\n                    onClick={() => {\r\n                      document.location.href = `/purchases`;\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h5\">Мои заказы</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem className={classes.item} onClick={signOut}>\r\n                    <Typography variant=\"h5\">Выйти</Typography>\r\n                  </MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Popper>\r\n        </React.Fragment>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default UserMiniPanel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Accordion } from '@material-ui/core';\r\n\r\nimport City from 'src/Types/City';\r\nimport Region from 'src/Types/Region';\r\nimport { getRegions } from 'src/Requests/GetRequests';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    bar: {\r\n      backgroundColor: 'white',\r\n    },\r\n  }),\r\n);\r\n\r\nconst CityNavigation: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [city, setCity] = useState<City | null>(null);\r\n  const [regions, setRegions] = useState<Region[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getCity(isMounted);\r\n    getRegionsInfo(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getCity = async (isMounted: boolean) => {\r\n    const cityName = localStorage.getItem('cityName');\r\n    const cityId = localStorage.getItem('cityId');\r\n    if (isMounted) {\r\n      if (cityName && cityId) {\r\n        setCity({ id: parseInt(cityId), name: cityName });\r\n      } else {\r\n        setOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getRegionsInfo = async (isMounted: boolean) => {\r\n    const res = await getRegions();\r\n    if (isMounted) {\r\n      setRegions(res);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    const cityName = localStorage.getItem('cityName');\r\n    const cityId = localStorage.getItem('cityId');\r\n    if (!cityName || !cityId) {\r\n      const region = regions.find(r => r.cities.find(c => c.name === 'Москва'));\r\n      if (region) {\r\n        const cityAutoPicked = region.cities.find(c => c.name === 'Москва');\r\n        if (cityAutoPicked) {\r\n          localStorage.setItem('cityName', cityAutoPicked.name);\r\n          localStorage.setItem('cityId', cityAutoPicked.id.toString());\r\n          setCity(cityAutoPicked);\r\n        }\r\n      }\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const onCityClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const id = parseInt(event.currentTarget.id);\r\n    const reg = regions.find(r => r.cities.find(c => c.id === id));\r\n    const cit = reg?.cities.find(c => c.id === id);\r\n    if (cit) {\r\n      pickCity(cit);\r\n    }\r\n  };\r\n\r\n  const pickCity = (cit: City) => {\r\n    localStorage.setItem('cityName', cit.name);\r\n    localStorage.setItem('cityId', cit.id.toString());\r\n    setCity(cit);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} className={classes.bar}>\r\n      <Button variant=\"text\" size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        {city?.name ?? 'Выберите город'}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Выберите город</DialogTitle>\r\n        <DialogContent>\r\n          {regions.map((reg, index) => (\r\n            <Accordion key={index}>\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\r\n                <Typography>{reg.name}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <List component=\"nav\">\r\n                    {reg.cities.map((cit, ind) => (\r\n                      <React.Fragment key={ind}>\r\n                        <Divider />\r\n                        <ListItem>\r\n                          <Button\r\n                            id={cit.id.toString()}\r\n                            onClick={onCityClick}\r\n                            variant=\"text\"\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                          >\r\n                            {cit.name}\r\n                          </Button>\r\n                        </ListItem>\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </List>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\nexport default CityNavigation;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport DevicesIcon from '@material-ui/icons/Devices';\r\n\r\nimport { getRole } from 'src/Requests/AccountRequests';\r\nimport Roles from 'src/Types/Roles';\r\n\r\nimport CategorySelector from './CategorySelector';\r\nimport LoginModal from './LoginModal';\r\nimport UserMiniPanel from './UserMiniPanel';\r\nimport CityNavigation from './CityNavigation';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    buttons: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: theme.palette.common.white,\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    inputRoot: {\r\n      color: '#000',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      color: '#999',\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    logoButton: {\r\n      fontSize: '30px',\r\n      fontFamily: 'cursive',\r\n      [theme.breakpoints.down('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    logoIcon: {\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    largeObject: {\r\n      [theme.breakpoints.down('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    smallObject: {\r\n      [theme.breakpoints.up('lg')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    realElement: {\r\n      height: 25,\r\n    },\r\n  }),\r\n);\r\n\r\nconst NavigationBar: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [isAuth, setAuth] = useState<boolean>(false);\r\n  const [loaded, setLoaded] = useState<boolean>(false);\r\n  const [search, setSearch] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    checkAuth(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  });\r\n\r\n  const onSearchChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const str = event.target.value as string;\r\n    setSearch(str);\r\n  };\r\n\r\n  const searchRequest = (event: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (event.key === 'Enter') {\r\n      history.pushState({}, 'DTS', `/?search=${search}`);\r\n      window.location.replace(`/?search=${search}`);\r\n    }\r\n  };\r\n\r\n  const checkAuth = async (isMounted: boolean) => {\r\n    const authres = await getRole();\r\n\r\n    if (isMounted) {\r\n      if (authres !== Roles.guest) {\r\n        sessionStorage.setItem('signed', authres);\r\n        setAuth(true);\r\n      } else {\r\n        setAuth(false);\r\n      }\r\n      setLoaded(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar>\r\n        <CityNavigation />\r\n        <Toolbar>\r\n          <Grid item xs={12} sm={2}>\r\n            <Button\r\n              variant=\"text\"\r\n              size=\"large\"\r\n              color=\"secondary\"\r\n              href=\"/\"\r\n              className={classes.logoButton}\r\n              startIcon={<DevicesIcon />}\r\n            >\r\n              DTS\r\n            </Button>\r\n            <Button variant=\"text\" size=\"large\" color=\"secondary\" href=\"/\" className={classes.logoIcon}>\r\n              <DevicesIcon />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            <CategorySelector />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                onKeyDown={searchRequest}\r\n                onChange={onSearchChange}\r\n                value={search}\r\n                placeholder=\"Поиск\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <ButtonGroup\r\n              className={classes.smallObject}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              aria-label=\"text primary button group\"\r\n            >\r\n              <Button href=\"/wishlist\">\r\n                <FavoriteBorderIcon />\r\n              </Button>\r\n              <Button href=\"/cart\">\r\n                <ShoppingCartOutlinedIcon />\r\n              </Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup\r\n              className={classes.largeObject}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              size=\"large\"\r\n              aria-label=\"text primary button group\"\r\n            >\r\n              <Button href=\"/wishlist\" startIcon={<FavoriteBorderIcon />}>\r\n                Избранное\r\n              </Button>\r\n              <Button href=\"/cart\" startIcon={<ShoppingCartOutlinedIcon />}>\r\n                Корзина\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item xs={12} sm={2}>\r\n            {loaded && (isAuth ? <UserMiniPanel /> : <LoginModal />)}\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n      <div className={classes.realElement} />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default NavigationBar;\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { Observer } from 'mobx-react';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    selector: {\r\n      marginLeft: theme.spacing(6),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 100,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ISortBar {\r\n  type: string;\r\n  onChange: (sortType: string) => void;\r\n}\r\n\r\nconst SortBar: React.FC<ISortBar> = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleSortTypeChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    props.onChange(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Card variant=\"outlined\">\r\n        <Grid className={classes.selector} container alignItems=\"center\" justify=\"flex-start\">\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"sorting-controlled-open-select-label\">Сортировка</InputLabel>\r\n            <Observer>\r\n              {() => (\r\n                <Select\r\n                  labelId=\"sorting-controlled-open-select-label\"\r\n                  id=\"sorting-controlled-open-select\"\r\n                  open={open}\r\n                  onClick={handleOpen}\r\n                  value={props.type}\r\n                  onChange={handleSortTypeChanged}\r\n                >\r\n                  <MenuItem value={'price'}>\r\n                    <ArrowDownwardIcon fontSize=\"small\" /> Цена\r\n                  </MenuItem>\r\n                  <MenuItem value={'price reverse'}>\r\n                    <ArrowUpwardIcon fontSize=\"small\" /> Цена\r\n                  </MenuItem>\r\n                  <MenuItem value={'name'}>\r\n                    <ArrowDownwardIcon fontSize=\"small\" /> Название\r\n                  </MenuItem>\r\n                  <MenuItem value={'name reverse'}>\r\n                    <ArrowUpwardIcon fontSize=\"small\" /> Название\r\n                  </MenuItem>\r\n                  <MenuItem value={'rating'}>\r\n                    <ArrowDownwardIcon fontSize=\"small\" /> Оценка\r\n                  </MenuItem>\r\n                  <MenuItem value={'rating reverse'}>\r\n                    <ArrowUpwardIcon fontSize=\"small\" /> Оценка\r\n                  </MenuItem>\r\n                </Select>\r\n              )}\r\n            </Observer>\r\n          </FormControl>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SortBar;\r\n","import React, { useState } from 'react';\nimport { Observer } from 'mobx-react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Parameter from 'src/Types/Parameter';\nimport FilterValue from 'src/Types/FilterValue';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      textDecoration: 'underline',\n    },\n    beforeText: {\n      paddingRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IRangeFilter {\n  parameter: Parameter;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst RangeFilter: React.FC<IRangeFilter> = props => {\n  const classes = useStyles();\n  const [minValue, setMinValue] = useState<string>('');\n  const [maxValue, setMaxValue] = useState<string>('');\n  const paramValue = props.pickedParams.find(i => i.id === props.parameter.id);\n\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    if (paramValue) {\n      paramValue.minValue = event.target.value as string;\n    }\n\n    setMinValue(event.target.value as string);\n    props.setParameter({\n      id: props.parameter.id,\n      minValue: event.target.value as string,\n      maxValue: paramValue?.maxValue,\n      range: true,\n    });\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    if (paramValue) {\n      paramValue.maxValue = event.target.value as string;\n    }\n\n    setMaxValue(event.target.value as string);\n    props.setParameter({\n      id: props.parameter.id,\n      minValue: paramValue?.minValue ?? minValue,\n      maxValue: event.target.value as string,\n      range: true,\n    });\n  };\n\n  return (\n    <Grid item container justify=\"space-evenly\" alignItems=\"flex-start\" direction=\"column\" xs={12}>\n      <Typography variant=\"h6\" className={classes.heading}>\n        {props.parameter.name}:\n      </Typography>\n      <Grid item container justify=\"flex-start\" alignItems=\"center\" direction=\"row\" xs={12}>\n        <Typography className={classes.beforeText} variant=\"body1\">\n          От:\n        </Typography>\n        <Observer>\n          {() => (\n            <TextField\n              id=\"minPrice\"\n              variant=\"outlined\"\n              placeholder={props.parameter.minValue.toString()}\n              size=\"small\"\n              type=\"number\"\n              value={paramValue?.minValue ?? minValue}\n              onChange={handleMinChange}\n            />\n          )}\n        </Observer>\n      </Grid>\n      <Grid item container justify=\"flex-start\" alignItems=\"center\" direction=\"row\" xs={12}>\n        <Typography className={classes.beforeText} variant=\"body1\">\n          До:\n        </Typography>\n        <Observer>\n          {() => (\n            <TextField\n              id=\"minPrice\"\n              variant=\"outlined\"\n              placeholder={props.parameter.maxValue.toString()}\n              size=\"small\"\n              type=\"number\"\n              value={paramValue?.maxValue ?? maxValue}\n              onChange={handleMaxChange}\n            />\n          )}\n        </Observer>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RangeFilter;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Parameter from 'src/Types/Parameter';\nimport FilterValue from 'src/Types/FilterValue';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      textDecoration: 'underline',\n    },\n    beforeText: {\n      paddingRight: theme.spacing(1),\n    },\n    checkboxField: {\n      maxHeight: 130,\n      overflow: 'auto',\n    },\n  }),\n);\n\ninterface IListFilter {\n  parameter: Parameter;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst ListFilter: React.FC<IListFilter> = props => {\n  const classes = useStyles();\n\n  const [picked, setPicked] = useState<boolean[]>([]);\n  const getChecked = (isMounted: boolean) => {\n    const value = props.parameter.parameterValues.map(p =>\n      props.pickedParams.find(pic => pic.id === props.parameter.id && pic.itemIds?.find(i => i === p.id))\n        ? true\n        : false,\n    );\n\n    if (isMounted) {\n      setPicked(value);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getChecked(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const onCheckboxChanged = (event: React.ChangeEvent, checked: boolean) => {\n    const pickedValues: string[] = [];\n    for (let i = 0; i < props.parameter.parameterValues.length; i++) {\n      if (picked[i]) {\n        pickedValues.push(props.parameter.parameterValues[i].id);\n      }\n    }\n\n    const ind = props.parameter.parameterValues.findIndex(p => p.id === event.currentTarget.id);\n    if (checked) {\n      pickedValues.push(event.currentTarget.id);\n    } else {\n      const index = pickedValues.findIndex(v => v === event.currentTarget.id);\n      if (index !== -1) {\n        pickedValues.splice(index, 1);\n      }\n    }\n\n    picked[ind] = checked;\n    setPicked([...picked]);\n    props.setParameter({ id: props.parameter.id, itemIds: pickedValues, range: false });\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Typography variant=\"h6\" className={classes.heading}>\n        {props.parameter.name}:\n      </Typography>\n      <Grid item xs={12} className={classes.checkboxField}>\n        {props.parameter.parameterValues.map(\n          (val, index) =>\n            picked[index] !== undefined && (\n              <FormControlLabel\n                key={index}\n                control={<Checkbox color=\"primary\" onChange={onCheckboxChanged} checked={picked[index]} id={val.id} />}\n                label={val.value}\n              />\n            ),\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ListFilter;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { Observer } from 'mobx-react';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport FilterValue from 'src/Types/FilterValue';\n\nimport RangeFilter from './RangeFilter';\nimport ListFilter from './ListFilter';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      marginLeft: theme.spacing(1),\n      fontSize: 1.1 * theme.typography.fontSize,\n    },\n  }),\n);\n\ninterface IFilterBlock {\n  parameterBlock: ParameterBlock;\n  pickedParams: FilterValue[];\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst FilterBlock: React.FC<IFilterBlock> = props => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Accordion variant=\"outlined\">\n        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n          <Typography className={classes.heading}>{props.parameterBlock.name}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Grid item xs={12}>\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              {props.parameterBlock.parameters.map((val, index) => (\n                <React.Fragment key={index}>\n                  <Divider />\n                  <ListItem>\n                    {val.range ? (\n                      <Observer>\n                        {() => (\n                          <RangeFilter\n                            pickedParams={props.pickedParams}\n                            setParameter={props.setParameter}\n                            parameter={val}\n                          />\n                        )}\n                      </Observer>\n                    ) : (\n                      <Observer>\n                        {() => (\n                          <ListFilter\n                            pickedParams={props.pickedParams}\n                            setParameter={props.setParameter}\n                            parameter={val}\n                          />\n                        )}\n                      </Observer>\n                    )}\n                  </ListItem>\n                </React.Fragment>\n              ))}\n            </List>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    </Grid>\n  );\n};\n\nexport default FilterBlock;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Observer } from 'mobx-react';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport FilterValue from 'src/Types/FilterValue';\n\nimport FilterBlock from './FilterBlock';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rightTextField: {\n      marginLeft: theme.spacing(1),\n    },\n    leftTextField: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IFilterBar {\n  priceRange: number[];\n  pickedPrices: number[];\n  parameterBlocks: ParameterBlock[];\n  pickedParams: FilterValue[];\n  applyChanges: () => void;\n  setPrices: (i: number, newValue: unknown) => void;\n  setParameter: (newValue: FilterValue) => void;\n}\n\nconst FilterBar: React.FC<IFilterBar> = props => {\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(0, event.target.value);\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(1, event.target.value);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Card variant=\"outlined\">\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem>\n            <Typography variant=\"h5\" component=\"h5\">\n              Фильтры\n            </Typography>\n          </ListItem>\n          <Divider variant=\"middle\" />\n          <ListItem>\n            <Typography id=\"price-slider\" gutterBottom>\n              Цена\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"minPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[0].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.leftTextField}\n                  value={props.pickedPrices[0]}\n                  onChange={handleMinChange}\n                  InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">₽</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"maxPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[1].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.rightTextField}\n                  value={props.pickedPrices[1]}\n                  onChange={handleMaxChange}\n                  InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">₽</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n          </ListItem>\n          <Observer>\n            {() => (\n              <React.Fragment>\n                {props.parameterBlocks &&\n                  props.parameterBlocks.map((val, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <FilterBlock\n                          parameterBlock={val}\n                          setParameter={props.setParameter}\n                          pickedParams={props.pickedParams}\n                        />\n                      </ListItem>\n                    </React.Fragment>\n                  ))}\n              </React.Fragment>\n            )}\n          </Observer>\n          <Divider variant=\"middle\" />\n          <ListItem>\n            <Grid container justify=\"center\">\n              <Button variant=\"contained\" color=\"primary\" onClick={props.applyChanges}>\n                Применить\n              </Button>\n            </Grid>\n          </ListItem>\n        </List>\n      </Card>\n    </Grid>\n  );\n};\nexport default FilterBar;\n","import FilterValue from 'src/Types/FilterValue';\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport Product from 'src/Types/Product';\n\ninterface ISettings {\n  currentPage: number;\n  sortType: string;\n  pickedPrice: number[];\n  productList: Product[];\n  filters: ParameterBlock[];\n  lastPage: number;\n  priceRange: number[];\n  pickedParams: FilterValue[];\n\n  handlePageChange(event: React.ChangeEvent<unknown>, value: number): void;\n  setPage(value: number): void;\n  setSortType(type: string): void;\n  filtersApplied(): void;\n  setParameterValue(newValue: FilterValue): void;\n  setInfo(prodList: unknown, maxPage: number, minPrice: number, maxPrice: number, filters: ParameterBlock[]): void;\n  checkPickedPrices(i: number, newValue: unknown): void;\n  setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown): void;\n  setFilters(params: URLSearchParams): void;\n  isItNumber(value: unknown): boolean;\n  createURL(): void;\n}\n\nfunction createProdParams(getItems: () => void): ISettings {\n  const settings: ISettings = {\n    currentPage: 1,\n    sortType: 'price',\n    pickedPrice: [0, 0],\n    productList: [],\n    filters: [],\n    lastPage: 0,\n    priceRange: [0, 0],\n    pickedParams: [],\n\n    handlePageChange(event: React.ChangeEvent<unknown>, value: number) {\n      this.setPage(value);\n    },\n\n    setPage(value: number) {\n      if (value <= this.lastPage && value > 0 && value !== 1) {\n        this.currentPage = value;\n      } else {\n        this.currentPage = 1;\n      }\n      this.createURL();\n    },\n\n    setSortType(type: string) {\n      if (this.sortType !== type) {\n        this.setPage(1);\n        this.sortType = type;\n        this.createURL();\n      }\n    },\n\n    filtersApplied() {\n      this.setPage(1);\n      this.createURL();\n    },\n\n    setInfo(prodList: Product[], maxPage: number, minPrice: number, maxPrice: number, filters: ParameterBlock[]) {\n      this.productList = prodList;\n      this.filters = filters;\n      this.lastPage = maxPage;\n      this.priceRange = [minPrice, maxPrice];\n      if (this.pickedPrice[0] === 0) {\n        this.pickedPrice[0] = minPrice;\n      }\n      if (this.pickedPrice[1] === 0) {\n        this.pickedPrice[1] = maxPrice;\n      }\n    },\n\n    checkPickedPrices(i: number, newValue: unknown) {\n      const regexFull = /^\\d*$/;\n      const regexPunct = /\\d+\\.\\d+/;\n      if ((regexFull.test(newValue as string) || regexPunct.test(newValue as string)) && (i === 0 || i === 1)) {\n        if ((newValue as string) === '') {\n          this.pickedPrice[i] = 0;\n        } else {\n          this.pickedPrice[i] = newValue as number;\n        }\n      }\n    },\n\n    setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown) {\n      if (this.isItNumber(minPrice)) {\n        this.checkPickedPrices(0, minPrice as number);\n      }\n      if (this.isItNumber(maxPrice)) {\n        this.checkPickedPrices(1, maxPrice as number);\n      }\n      if (sort !== null && sort !== this.sortType) {\n        this.sortType = sort as string;\n      }\n      if (this.isItNumber(currPage)) {\n        this.setPage(parseInt(currPage as string));\n      }\n      this.createURL();\n    },\n\n    isItNumber(value: unknown): boolean {\n      if (!isNaN(parseInt(value as string))) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    setParameterValue(newValue: FilterValue) {\n      const param = this.pickedParams.find(f => f.id === newValue.id);\n      if (param) {\n        param.itemIds = newValue.itemIds;\n        param.maxValue = newValue.maxValue;\n        param.minValue = newValue.minValue;\n      } else {\n        this.pickedParams.push(newValue);\n      }\n    },\n\n    setFilters(params: URLSearchParams) {\n      this.pickedParams.splice(0, this.pickedParams.length);\n      const keys = params.keys();\n      let key = keys.next();\n      let value;\n      while (!key.done) {\n        value = params.get(key.value as string)?.split(',');\n        if (value && value.length > 0) {\n          if (!isNaN(parseInt(value[0] as string))) {\n            this.pickedParams.push({ id: key.value as string, range: true, minValue: value[0], maxValue: value[1] });\n          } else {\n            this.pickedParams.push({ id: key.value as string, range: false, itemIds: value });\n          }\n        }\n\n        key = keys.next();\n      }\n    },\n\n    createURL() {\n      const params = new URLSearchParams(location.search);\n      if (this.currentPage === 1) {\n        params.delete('page');\n      } else {\n        params.set('page', this.currentPage.toString());\n      }\n      if (this.sortType === 'price') {\n        params.delete('sort');\n      } else {\n        params.set('sort', this.sortType);\n      }\n      if (this.pickedPrice[0] === this.priceRange[0] && this.pickedPrice[1] === this.priceRange[1]) {\n        params.delete('minPrice');\n        params.delete('maxPrice');\n      } else {\n        params.set('minPrice', this.pickedPrice[0].toString());\n        params.set('maxPrice', this.pickedPrice[1].toString());\n      }\n\n      for (const filter of this.pickedParams) {\n        if (filter.range) {\n          if (filter.minValue || filter.maxValue) {\n            if (!filter.minValue) {\n              filter.minValue = '0';\n            }\n            if (!filter.maxValue) {\n              filter.maxValue = '0';\n            }\n            params.set(filter.id, `${filter.minValue},${filter.maxValue}`);\n          }\n        } else {\n          if (filter.itemIds && filter.itemIds.length > 0) {\n            params.set(filter.id, filter.itemIds?.join(','));\n          }\n        }\n      }\n\n      history.pushState({}, 'Products', `?${params.toString()}`);\n      getItems();\n    },\n  };\n\n  return settings;\n}\n\nexport { createProdParams };\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProductsOfCategory } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\ninterface ICategoryPage {\n  categoryName: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryWord: {\n      fontWeight: 600,\n      padding: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst CategoryPage: React.FC = () => {\n  const params: ICategoryPage = useParams();\n\n  const object = createProdParams(async () => {\n    const res = await getProductsOfCategory(\n      params.categoryName,\n      data.currentPage,\n      10,\n      data.sortType,\n      data.pickedPrice,\n      data.pickedParams,\n    );\n\n    data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice, res.container.parameterBlocks);\n  });\n  const data = useLocalObservable(() => object);\n\n  const getProducts = async (isMounted: boolean) => {\n    const qParams = new URLSearchParams(location.search);\n    data.setParams(qParams.get('page'), qParams.get('minPrice'), qParams.get('maxPrice'), qParams.get('sort'));\n    data.setFilters(qParams);\n\n    const res = await getProductsOfCategory(\n      params.categoryName,\n      data.currentPage,\n      10,\n      data.sortType,\n      data.pickedPrice,\n      data.pickedParams,\n    );\n    if (isMounted !== false && res.container !== undefined) {\n      data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice, res.container.parameterBlocks);\n    }\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    getProducts(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n            <Grid>\n              <Typography className={classes.categoryWord} variant=\"h5\" component=\"h5\">\n                {params.categoryName}\n              </Typography>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      parameterBlocks={data.filters}\n                      pickedParams={data.pickedParams}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                      setParameter={data.setParameterValue}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justify=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryPage;\n","import React, { useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Observer, useLocalObservable } from 'mobx-react';\r\n\r\nimport ProductCard from 'src/Components/Parts/ProductCard';\r\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\r\nimport { getProducts } from 'src/Requests/GetRequests';\r\nimport SortBar from 'src/Components/Parts/SortBar';\r\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    productGrid: {\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    filterPanel: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst ProductsPage: React.FC = () => {\r\n  const getProd = async (isMounted: boolean) => {\r\n    const res = await getProducts(data.currentPage, 10, data.sortType, data.pickedPrice);\r\n    if (isMounted) {\r\n      const params = new URLSearchParams(location.search);\r\n      data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice, []);\r\n      data.setParams(params.get('page'), params.get('minPrice'), params.get('maxPrice'), params.get('sort'));\r\n    }\r\n  };\r\n\r\n  const object = createProdParams(async () => {\r\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\r\n    data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice, []);\r\n  });\r\n\r\n  const data = useLocalObservable(() => object);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getProd(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\r\n          <Grid item direction=\"column\" justify=\"center\" container>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\r\n            </Grid>\r\n            <Grid item direction=\"row\" justify=\"center\" container>\r\n              <Grid className={classes.productGrid} xs={12} sm={12} item container direction=\"column\">\r\n                <Observer>\r\n                  {() => (\r\n                    <Grid>\r\n                      {data.productList.map(product => (\r\n                        <ProductCard product={product} key={product.id} />\r\n                      ))}\r\n                    </Grid>\r\n                  )}\r\n                </Observer>\r\n                <Grid justify=\"center\" alignItems=\"center\" container>\r\n                  <Observer>\r\n                    {() => (\r\n                      <React.Fragment>\r\n                        {data.lastPage > 1 && (\r\n                          <Pagination\r\n                            count={data.lastPage}\r\n                            page={data.currentPage}\r\n                            onChange={data.handlePageChange}\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            shape=\"rounded\"\r\n                          />\r\n                        )}\r\n                      </React.Fragment>\r\n                    )}\r\n                  </Observer>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Outlet from 'src/Types/Outlet';\r\n\r\ninterface IOutletInfo {\r\n  outlet: Outlet;\r\n}\r\n\r\nconst OutletInfo: React.FC<IOutletInfo> = props => (\r\n  <Grid item xs={12} direction=\"column\" justify=\"space-evenly\" alignItems=\"stretch\" container>\r\n    <Typography variant=\"h6\" color=\"primary\">\r\n      {props.outlet.name}\r\n    </Typography>\r\n    <Typography>\r\n      {`${props.outlet.region.name}, ${props.outlet.city.name}, ${props.outlet.streetName}, ${props.outlet.building}`}\r\n    </Typography>\r\n    {props.outlet.userNote && <Typography color=\"textSecondary\">{props.outlet.userNote}</Typography>}\r\n  </Grid>\r\n);\r\n\r\nexport default OutletInfo;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport OutletProduct from 'src/Types/OutletProduct';\r\n\r\nimport OutletInfo from './OutletInfo';\r\n\r\ninterface IOutletCount {\r\n  outlet: OutletProduct;\r\n}\r\n\r\nconst OutletCount: React.FC<IOutletCount> = props => (\r\n  <Grid item xs={12}>\r\n    <Grid direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" item xs={12} container>\r\n      <Grid item xs={12} sm={10}>\r\n        <OutletInfo outlet={props.outlet.outlet} />\r\n      </Grid>\r\n      <Typography>{props.outlet.count}</Typography>\r\n    </Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default OutletCount;\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport OutletProduct from 'src/Types/OutletProduct';\r\n\r\nimport OutletCount from './OutletCount';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    bar: {\r\n      backgroundColor: 'white',\r\n    },\r\n    dialog: {\r\n      minWidth: 480,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ICityNavigation {\r\n  outlets?: OutletProduct[];\r\n  isInWarehouse?: boolean;\r\n}\r\n\r\nconst CityNavigation: React.FC<ICityNavigation> = props => {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Grid direction=\"row\" justify=\"space-evenly\" alignItems=\"stretch\" item xs={12} container>\r\n        <Button variant=\"text\" size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n          В наличии в магазинах: {props.outlets?.length}\r\n        </Button>\r\n        <Typography>На складе: {props.isInWarehouse ? 'есть' : 'нет'}</Typography>\r\n      </Grid>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.dialog}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">В магазинах:</DialogTitle>\r\n        <DialogContent className={classes.dialog}>\r\n          {props.outlets?.map((o, index) => (\r\n            <OutletCount outlet={o} key={index} />\r\n          ))}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\nexport default CityNavigation;\r\n","import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { Button } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { addToCart, addToWishlist } from 'src/Requests/PostRequests';\r\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\r\nimport OutletProduct from 'src/Types/OutletProduct';\r\n\r\nimport UnitProducts from './UnitProducts';\r\n\r\ninterface IPriceLikeBuyCard {\r\n  price?: number;\r\n  id?: string;\r\n  rating?: number;\r\n  onBuy?: () => void;\r\n  onWished?: () => void;\r\n  inCart?: boolean;\r\n  inWishlist?: boolean;\r\n  outlets?: OutletProduct[];\r\n  isInWarehouse?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      minHeight: 180,\r\n      margin: theme.spacing(1),\r\n    },\r\n    grid: {\r\n      minHeight: 80,\r\n    },\r\n    details: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    content: {\r\n      flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n      maxWidth: 151,\r\n      maxHeight: 120,\r\n      margin: theme.spacing(2),\r\n    },\r\n    bold: {\r\n      fontWeight: 600,\r\n    },\r\n    rating: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    ratingNum: {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nconst PriceLikeBuyCard: React.FC<IPriceLikeBuyCard> = props => {\r\n  const checkInCart = () => {\r\n    const role = sessionStorage.getItem('signed');\r\n    if (!role) {\r\n      const cart = localStorage.getItem('cartItems');\r\n      if (cart) {\r\n        return cart.includes(props.id as string);\r\n      }\r\n    }\r\n    return props.inCart;\r\n  };\r\n\r\n  const [inCart, setInCart] = useState(checkInCart());\r\n  const [inWishlist, setInWishlist] = useState(props.inWishlist);\r\n\r\n  const addProductToCart = async () => {\r\n    const role = sessionStorage.getItem('signed');\r\n\r\n    if (role) {\r\n      const response = await addToCart(props.id as string, 0);\r\n      if (response !== null) {\r\n        setInCart(true);\r\n        if (props.onBuy) {\r\n          props.onBuy();\r\n        }\r\n      }\r\n    } else {\r\n      const items = localStorage.getItem('cartItems');\r\n      if (items) {\r\n        if (items.includes(props.id as string)) {\r\n          return;\r\n        }\r\n        localStorage.setItem('cartItems', `${items},${props.id}`);\r\n      } else {\r\n        localStorage.setItem('cartItems', props.id as string);\r\n      }\r\n    }\r\n  };\r\n\r\n  const addProductToWishlist = async () => {\r\n    const response = await addToWishlist(props.id as string);\r\n    if (response !== null) {\r\n      setInWishlist(true);\r\n      if (props.onWished) {\r\n        props.onWished();\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteProductFromWishlist = async () => {\r\n    const response = await deleteFromWishlist(props.id as string);\r\n    if (response === 1) {\r\n      setInWishlist(false);\r\n      if (props.onWished) {\r\n        props.onWished();\r\n      }\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.root}>\r\n      <Grid justify=\"center\" alignItems=\"center\" container>\r\n        <Grid className={classes.grid} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" xs={12} sm={6}>\r\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\r\n              Цена:\r\n            </Typography>\r\n            <Typography color=\"primary\" component=\"h5\" variant=\"h5\" className={classes.bold}>\r\n              {props.price}₽\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} sm={3} container justify=\"flex-start\">\r\n              {inWishlist ? (\r\n                <IconButton aria-label=\"favourite\" color=\"primary\" onClick={deleteProductFromWishlist}>\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton aria-label=\"favourite\" onClick={addProductToWishlist}>\r\n                  <FavoriteIcon />\r\n                </IconButton>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={9}>\r\n              {inCart ? (\r\n                <Button color=\"primary\" variant=\"outlined\" href=\"/cart\">\r\n                  Корзина\r\n                </Button>\r\n              ) : (\r\n                <Button color=\"primary\" variant=\"contained\" onClick={addProductToCart}>\r\n                  Купить\r\n                </Button>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"center\" alignContent=\"center\" direction=\"row\" className={classes.rating}>\r\n          <Rating className={classes.rating} name=\"read-only\" value={props.rating} readOnly />\r\n          <Typography className={`${classes.bold} ${classes.rating}`}>{props.rating}</Typography>\r\n        </Grid>\r\n        <UnitProducts outlets={props.outlets} isInWarehouse={props.isInWarehouse} />\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PriceLikeBuyCard;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Product from 'src/Types/Product';\r\nimport PriceLikeBuyCard from 'src/Components/Parts/PriceLikeBuyCard';\r\nimport ParameterBlock from 'src/Types/ParameterBlock';\r\n\r\ninterface IDetailedProductCard {\r\n  product?: Product;\r\n  paramBlocks?: ParameterBlock[];\r\n  image?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    image: {\r\n      maxWidth: 260,\r\n      maxHeight: 400,\r\n      margin: theme.spacing(2),\r\n    },\r\n    card: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nconst DetailedProductCard: React.FC<IDetailedProductCard> = props => {\r\n  const classes = useStyles();\r\n  const paramString = (): string => {\r\n    let string = '';\r\n    props.paramBlocks?.map(block =>\r\n      block.parameters.map(param => {\r\n        if (param.important) {\r\n          string += `${param.name}:${param.value}, `;\r\n        }\r\n      }),\r\n    );\r\n    return string.substring(0, string.length - 2);\r\n  };\r\n\r\n  const strinTechParams = paramString();\r\n  return (\r\n    <Card variant=\"outlined\" className={classes.card}>\r\n      <Grid direction=\"row\" justify=\"center\" container>\r\n        <Grid item xs={12} sm={6} direction=\"column\" justify=\"center\" alignItems=\"center\" container>\r\n          <img className={classes.image} src={props.image} />\r\n          Артикул: {props.product?.vendorCode}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" component=\"h6\">\r\n            {strinTechParams}\r\n          </Typography>\r\n          <PriceLikeBuyCard\r\n            price={props.product?.price}\r\n            rating={props.product?.mark}\r\n            id={props.product?.id}\r\n            inCart={props.product?.inCart}\r\n            inWishlist={props.product?.inWishlist}\r\n            outlets={props.product?.outletProducts}\r\n            isInWarehouse={props.product?.isInWarehouse}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid direction=\"row\" justify=\"center\" alignItems=\"center\" container />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default DetailedProductCard;\r\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IProductDescription {\n  productName: string;\n  productDescription: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    descriptionText: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst ProductDescription: React.FC<IProductDescription> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-around\" item xs={12}>\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Описание ${props.productName}`}\n      </Typography>\n      <Grid className={classes.descriptionText} container justify=\"flex-start\">\n        <Typography variant=\"body2\">{props.productDescription}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductDescription;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\n\ninterface IProductParameter {\n  param: Parameter;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    line: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 0, 1, 0),\n    },\n  }),\n);\n\nconst ProductParameter: React.FC<IProductParameter> = props => {\n  const classes = useStyles();\n  return (\n    <Grid direction=\"row\" container alignItems=\"center\" justify=\"center\" className={classes.line}>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.name}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.value}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductParameter;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ParameterBlock from 'src/Types/ParameterBlock';\nimport ProductParameter from 'src/Components/Parts/ProductParameter';\n\ninterface IProductParams {\n  productName: string;\n  params: ParameterBlock[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    line: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductParams: React.FC<IProductParams> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-around\" item xs={12}>\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Характеристики ${props.productName}`}\n      </Typography>\n      {props.params?.map((block, index) => (\n        <Grid direction=\"column\" alignItems=\"center\" container key={index}>\n          <Grid item xs={12} sm={6} container alignItems=\"center\" justify=\"space-evenly\" className={classes.line}>\n            {block.name}\n          </Grid>\n          {block.parameters.map((param, key) => (\n            <ProductParameter param={param} key={key} />\n          ))}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ProductParams;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\n\nimport Review from 'src/Types/Review';\n\ninterface IProductReviews {\n  review: Review;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    userName: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    reviewHeader: {\n      padding: theme.spacing(1),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    commentSection: {\n      minHeight: '6em',\n      padding: theme.spacing(2),\n    },\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n  }),\n);\n\nconst ReviewBlock: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"flex-start\" justify=\"flex-start\">\n        <Grid className={classes.reviewHeader} container direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item xs={12} sm={8}>\n            <Typography className={classes.userName}>{props.review.userName}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Rating value={props.review.mark} readOnly />\n          </Grid>\n        </Grid>\n        <Typography className={classes.commentSection}>{props.review.description}</Typography>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewBlock;\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Review from 'src/Types/Review';\nimport { createReview } from 'src/Requests/PostRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n    cardPart: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateReview {\n  mark: number;\n  description: string;\n}\n\ninterface IReviewForm {\n  productId: string;\n  addReview: (newReview: Review) => void;\n}\n\nconst ReviewForm: React.FC<IReviewForm> = props => {\n  const classes = useStyles();\n\n  const [review, setReview] = useState<ICreateReview>({ description: '', mark: 5 });\n  const handleMark = (event: unknown, value: unknown) => {\n    setReview({ description: review.description, mark: value as number });\n  };\n  const handleMessage = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const value = event.target.value as string;\n    setReview({ description: value, mark: review.mark });\n  };\n\n  const submit = async () => {\n    const result = await createReview(props.productId, review.mark, review.description);\n    if (result !== null) {\n      props.addReview({ description: review.description, mark: review.mark, userName: 'Я' });\n    }\n  };\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"center\" justify=\"center\">\n        <Grid className={classes.cardPart} container direction=\"row\" alignItems=\"center\" justify=\"flex-end\">\n          <Rating value={review.mark} onChange={handleMark} />\n        </Grid>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Отзыв\"\n          multiline\n          rows={4}\n          placeholder=\"Оставьте свой отзыв здесь\"\n          variant=\"outlined\"\n          value={review.description}\n          onChange={handleMessage}\n          fullWidth\n        />\n        <Grid className={classes.cardPart} container alignItems=\"center\" justify=\"flex-end\">\n          <Button color=\"primary\" variant=\"contained\" onClick={submit}>\n            Отправить\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewForm;\n","import React, { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport ReviewBlock from 'src/Components/Parts/ReviewBlock';\r\nimport Review from 'src/Types/Review';\r\nimport ReviewForm from 'src/Components/Parts/ReviewForm';\r\nimport { getReviews } from 'src/Requests/GetRequests';\r\n\r\ninterface IProductReviews {\r\n  productName: string;\r\n  productId: string;\r\n  reviewed: boolean;\r\n  saveReviewed: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    prodName: {\r\n      fontSize: 1.3 * theme.typography.fontSize,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n  }),\r\n);\r\n\r\nconst ProductReviews: React.FC<IProductReviews> = props => {\r\n  const classes = useStyles();\r\n\r\n  const getProductReviews = async (isMounted: boolean) => {\r\n    const res = await getReviews(props.productId);\r\n    if (isMounted !== false) {\r\n      setReviews(res as Review[]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getProductReviews(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const role = sessionStorage.getItem('signed');\r\n  const [reviewed, setReviewed] = useState<boolean>(props.reviewed);\r\n  const [reviews, setReviews] = useState<Review[]>([]);\r\n\r\n  const addReview = (newReview: Review): void => {\r\n    const newVar: Review[] = [];\r\n    while (reviews.length > 0) {\r\n      newVar.push(reviews.pop() as Review);\r\n    }\r\n    newVar.push(newReview);\r\n    setReviews(newVar.reverse());\r\n\r\n    setReviewed(true);\r\n    props.saveReviewed();\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"space-around\" item xs={12}>\r\n      <Typography className={classes.prodName} variant=\"overline\">\r\n        {`Отзывы на ${props.productName}`}\r\n      </Typography>\r\n      <Grid item xs={12} direction=\"column\" container justify=\"center\">\r\n        {role && !reviewed && <ReviewForm addReview={addReview} productId={props.productId} />}\r\n        {reviews?.map((review, index) => (\r\n          <ReviewBlock review={review} key={index} />\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ProductReviews;\r\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport ProductDescription from 'src/Components/Parts/ProductDescription';\nimport ProductParams from 'src/Components/Parts/ProductParams';\nimport ProductReviews from 'src/Components/Parts/ProductReviews';\nimport ParameterBlock from 'src/Types/ParameterBlock';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: unknown;\n  value: unknown;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nfunction a11yProps(index: unknown) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\ninterface IVerticalTabs {\n  product: Product;\n  paramBlocks: ParameterBlock[];\n}\n\nconst ProductInfoPanel = (props: IVerticalTabs) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: unknown, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const saveReviewed = () => {\n    props.product.reviewed = true;\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justify=\"space-evenly\">\n        <Grid className={classes.tabs} item xs={12} sm={3}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs\"\n            textColor=\"primary\"\n          >\n            <Tab label=\"Описание\" {...a11yProps(0)} />\n            <Tab label=\"Характеристики\" {...a11yProps(1)} />\n            <Tab label=\"Отзывы\" {...a11yProps(2)} />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <TabPanel value={value} index={0}>\n            <ProductDescription productName={props.product.name} productDescription={props.product.description} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <ProductParams productName={props.product.name} params={props.paramBlocks} />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <ProductReviews\n              productName={props.product.name}\n              productId={props.product.id}\n              reviewed={props.product.reviewed}\n              saveReviewed={saveReviewed}\n            />\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProductInfoPanel;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from 'react-router-dom';\nimport { Card, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getParameters, getProduct } from 'src/Requests/GetRequests';\nimport Product from 'src/Types/Product';\nimport DetailedProductCard from 'src/Components/Parts/DetailedProductCard';\nimport ProductInfoPanel from 'src/Components/Parts/ProductInfoPanel';\nimport ParameterBlock from 'src/Types/ParameterBlock';\n\ninterface IProductPage {\n  productID: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 2 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductPage: React.FC = () => {\n  const params: IProductPage = useParams();\n  const classes = useStyles();\n\n  const [product, setProduct] = useState<Product>();\n  const [parameters, setParameters] = useState<ParameterBlock[]>();\n  const [picture, setPicture] = useState<string>('');\n  const picUrl = 'https://localhost:5001/products/';\n\n  useEffect(() => {\n    let isMounted = true;\n    const getProd = async () => {\n      const res = await getProduct(params.productID);\n      const param = await getParameters(params.productID);\n\n      if (isMounted) {\n        setProduct(res);\n        setParameters(param);\n        const img = new Image();\n        img.src = `${picUrl}${res.picURL}`;\n\n        if (isMounted) {\n          img.onload = () => setPicture(`${picUrl}${res.picURL}`);\n          img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n        }\n      }\n    };\n    getProd();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [params.productID]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={7} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n          <Card>\n            <Grid justify=\"space-evenly\" container>\n              <Typography className={classes.prodName} variant=\"overline\" component=\"h4\">\n                {product?.name}\n              </Typography>\n            </Grid>\n            {product && parameters && (\n              <DetailedProductCard product={product} paramBlocks={parameters} image={picture} />\n            )}\n            {product && parameters && <ProductInfoPanel product={product} paramBlocks={parameters} />}\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductPage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, TextField } from '@material-ui/core';\n\nimport { registrationRequest, regViaGoogleRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n    button: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n);\n\ninterface IRegistrationForm {\n  regData?: Register;\n}\n\nconst RegistrationForm: React.FC<IRegistrationForm> = props => {\n  const classes = useStyles();\n\n  const newObject = (oldData: Register): Register => ({\n    login: oldData.login,\n    password: oldData.password,\n    firstName: oldData.firstName,\n    secondName: oldData.secondName,\n    phoneNumber: oldData.phoneNumber,\n    token: oldData.token,\n    email: oldData.email,\n  });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const [rerendered, setRererendered] = React.useState(false);\n  const [regData, setRegData] = React.useState<Register>({\n    login: '',\n    password: '',\n    firstName: '',\n    secondName: '',\n    email: '',\n    phoneNumber: '',\n    token: '',\n  });\n\n  if (props.regData && !rerendered) {\n    setRegData(props.regData);\n    setRererendered(true);\n  }\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.login = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.password = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleEMailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.email = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.firstName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.secondName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.phoneNumber = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const registerButtonClicked = async () => {\n    if (!props.regData?.token) {\n      redirectTo(await registrationRequest(regData));\n    } else {\n      redirectTo(await regViaGoogleRequest(regData));\n    }\n  };\n\n  const redirectTo = (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={regData.login}\n        onChange={handleLoginChange}\n        label=\"Логин\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={regData.password}\n        onChange={handlePasswordChange}\n        label=\"Пароль\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"email-tf\"\n        className={classes.spaces}\n        value={regData.email}\n        onChange={handleEMailChange}\n        label=\"Email\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"first-name-tf\"\n        className={classes.spaces}\n        value={regData.firstName}\n        onChange={handleFirstNameChange}\n        label=\"Имя\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"second-name-tf\"\n        className={classes.spaces}\n        value={regData.secondName}\n        onChange={handleSecondNameChange}\n        label=\"Фамилия\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"phone-tf\"\n        className={classes.spaces}\n        value={regData.phoneNumber}\n        onChange={handlePhoneChange}\n        label=\"Номер телефона\"\n        variant=\"outlined\"\n      />\n      <Button\n        type=\"submit\"\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={registerButtonClicked}\n      >\n        Зарегистрироваться\n      </Button>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { Typography, Card, Grid } from '@material-ui/core';\n\nimport RegistrationForm from 'src/Components/Parts/RegistrationForm';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport Register from 'src/Types/Register';\n\ninterface IRegistration {\n  regData?: Register;\n}\n\nconst RegistrationPage: React.FC<IRegistration> = () => (\n  <React.Fragment>\n    <script src=\"https://apis.google.com/js/platform.js\" async defer />\n    <NavigationBar />\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid xs={12} sm={9} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n        <Card style={{ padding: '35px' }} variant=\"outlined\">\n          <Typography variant=\"h4\" style={{ paddingBottom: '10px' }}>\n            Регистрация\n          </Typography>\n          <RegistrationForm regData={history.state} />\n        </Card>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n);\n\nexport default RegistrationPage;\n","import axios from 'axios';\n\nasync function put<T>(url: string, data: T) {\n  return (await axios.put(url, data)).data;\n}\n\nasync function updateCartItem(count: number, productId: string) {\n  return await put(`/api/CustomerLists/cart/`, { count: count, productId: productId });\n}\n\nexport { updateCartItem };\n","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ProductCard from 'src/Components/Parts/ProductCard';\r\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\r\nimport { getCart, getCartUnsigned } from 'src/Requests/GetRequests';\r\nimport CartItem from 'src/Types/CartItem';\r\nimport Cart from 'src/Types/Cart';\r\nimport { deleteFromCart } from 'src/Requests/DeleteRequests';\r\nimport { updateCartItem } from 'src/Requests/PutRequests';\r\nimport Product from 'src/Types/Product';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    productGrid: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    filterPanel: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n    pageName: {\r\n      paddingTop: theme.spacing(2),\r\n      fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n  }),\r\n);\r\n\r\nconst CartPage: React.FC = () => {\r\n  const getProd = async (isMounted: boolean) => {\r\n    let res: Cart;\r\n    const role = sessionStorage.getItem('signed');\r\n    if (role) {\r\n      res = (await getCart()) as Cart;\r\n    } else {\r\n      res = await getCartUnsigned();\r\n    }\r\n\r\n    if (isMounted) {\r\n      setCartItems(res.products);\r\n    }\r\n  };\r\n\r\n  const updateCurrentSumm = (pickedProducts: Product[], cartItems: CartItem[]) => {\r\n    let summ = 0;\r\n    let prod;\r\n    for (const element of pickedProducts) {\r\n      prod = cartItems.find(item => item.product.id === element.id);\r\n      if (prod) {\r\n        summ += prod.count * prod.product.price;\r\n      }\r\n    }\r\n\r\n    setCurrentSumm(summ);\r\n    return summ;\r\n  };\r\n\r\n  const onCount = (newCount: number, id?: string) => {\r\n    const role = sessionStorage.getItem('signed');\r\n    if (!role) {\r\n      updateCartItem(newCount, id as string);\r\n    }\r\n\r\n    const itemId = cartItems.findIndex(item => item.product.id === (id as string));\r\n    cartItems[itemId].count = newCount;\r\n    updateCurrentSumm(pickedProducts, cartItems);\r\n  };\r\n\r\n  const deleteItem = async (productId: string) => {\r\n    const result = await deleteFromCart(productId);\r\n    if (result === 1) {\r\n      const deleted = cartItems.findIndex(item => item.product.id === productId);\r\n      const newCartItems = [...cartItems];\r\n      newCartItems.splice(deleted, 1);\r\n\r\n      const deletedPicked = pickedProducts.findIndex(item => item.id === productId);\r\n      const picked = [...pickedProducts];\r\n      picked.splice(deletedPicked, 1);\r\n      setPickedProducts(picked);\r\n\r\n      setCartItems(newCartItems);\r\n      updateCurrentSumm(pickedProducts, newCartItems);\r\n    }\r\n  };\r\n\r\n  const onChecked = (product: Product, added: boolean) => {\r\n    let newPicked;\r\n    if (added) {\r\n      newPicked = [...pickedProducts, product];\r\n      setPickedProducts(newPicked);\r\n    } else {\r\n      const deleted = pickedProducts.findIndex(item => item.id === product.id);\r\n      newPicked = [...pickedProducts];\r\n      newPicked.splice(deleted, 1);\r\n      setPickedProducts(newPicked);\r\n    }\r\n\r\n    updateCurrentSumm(newPicked, cartItems);\r\n  };\r\n\r\n  const onPuchaseClick = () => {\r\n    if (pickedProducts.length > 0) {\r\n      let picked = '';\r\n      for (const item of pickedProducts) {\r\n        picked += `${item.id}_${cartItems.find(p => p.product.id === item.id)?.count},`;\r\n      }\r\n      picked = picked.substring(0, picked.length - 1);\r\n\r\n      history.pushState({}, 'DTS', `/purchasing?items=${picked}`);\r\n      window.location.replace(`/purchasing?items=${picked}`);\r\n    }\r\n  };\r\n\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n  const [pickedProducts, setPickedProducts] = useState<Product[]>([]);\r\n  const [currentSumm, setCurrentSumm] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getProd(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\r\n          <Grid item direction=\"column\" justify=\"center\" container>\r\n            <Grid>\r\n              <Typography className={classes.pageName} variant=\"h5\" component=\"h5\">\r\n                Корзина\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item direction=\"row\" justify=\"center\" container>\r\n              <Grid className={classes.productGrid} xs={12} sm={10} item container direction=\"column\">\r\n                <Grid>\r\n                  {cartItems &&\r\n                    cartItems.map(cartItem => (\r\n                      <ProductCard\r\n                        product={cartItem.product}\r\n                        key={cartItem.product.id}\r\n                        hideBuy={true}\r\n                        hideLike={true}\r\n                        showCounter={true}\r\n                        count={cartItem.count}\r\n                        onCount={onCount}\r\n                        onDelete={deleteItem}\r\n                        onChecked={onChecked}\r\n                      />\r\n                    ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\r\n              <Typography className={classes.pageName} variant=\"h6\" component=\"h6\">\r\n                Сумма: {currentSumm} ₽\r\n              </Typography>\r\n              <Button variant=\"contained\" disabled={pickedProducts.length < 1} onClick={onPuchaseClick} color=\"primary\">\r\n                Оформить заказ\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getWishlist } from 'src/Requests/GetRequests';\nimport { deleteFromWishlist } from 'src/Requests/DeleteRequests';\nimport Product from 'src/Types/Product';\nimport Wishlist from 'src/Types/Wishlist';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n    pageName: {\n      paddingTop: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst WishlistPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = (await getWishlist()) as Wishlist;\n    if (isMounted) {\n      setWishlistItems(res.products);\n    }\n  };\n\n  const deleteItem = async (productId: string) => {\n    const result = await deleteFromWishlist(productId);\n    if (result === 1) {\n      const deleted = wishlistItems.findIndex(item => item.id === productId);\n      const newWishlistItems = [...wishlistItems];\n      newWishlistItems.splice(deleted, 1);\n      console.log(newWishlistItems);\n      setWishlistItems(newWishlistItems);\n    }\n  };\n\n  const [wishlistItems, setWishlistItems] = useState<Product[]>([]);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" container>\n            <Grid>\n              <Typography className={classes.pageName} variant=\"h5\" component=\"h5\">\n                Избранное\n              </Typography>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Grid>\n                  {wishlistItems.map(wishlistItem => (\n                    <ProductCard\n                      product={wishlistItem}\n                      key={wishlistItem.id}\n                      hideBuy={true}\n                      hideLike={true}\n                      onDelete={deleteItem}\n                    />\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default WishlistPage;\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\n\r\nimport Category from 'src/Types/Category';\r\n\r\ninterface ICategoryCard {\r\n  category: Category;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    name: {\r\n      fontSize: 1.2 * theme.typography.fontSize,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n  }),\r\n);\r\n\r\nconst CategoryCard: React.FC<ICategoryCard> = props => {\r\n  const classes = useStyles();\r\n  const redirectionURL = `/category/${props.category.name}`;\r\n  return (\r\n    <Card variant=\"outlined\">\r\n      <Grid item xs={12} container>\r\n        <CardActionArea href={redirectionURL}>\r\n          <Typography className={classes.name} variant=\"overline\">\r\n            {props.category.name}\r\n          </Typography>\r\n        </CardActionArea>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryCard;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport CategoryCard from 'src/Components/Parts/CategoryCard';\r\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\r\nimport { getCategories } from 'src/Requests/GetRequests';\r\nimport Category from 'src/Types/Category';\r\n\r\ninterface ICommonCategoryPage {\r\n  commonCategoryName: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    productGrid: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    categoryWord: {\r\n      fontWeight: 600,\r\n      padding: theme.spacing(2),\r\n    },\r\n    filterPanel: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst CommonCategoryPage: React.FC = () => {\r\n  const params: ICommonCategoryPage = useParams();\r\n\r\n  const [categories, setCategories] = React.useState<Category[]>([]);\r\n\r\n  const createRow = (index: number, array: Category[]) => (\r\n    <Grid container item xs={12} key={index} alignItems=\"stretch\" justify=\"space-evenly\" spacing={2}>\r\n      <Grid item xs={12} sm={4}>\r\n        {array[index] && <CategoryCard category={array[index]} />}\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        {array[index + 1] && <CategoryCard category={array[index + 1]} />}\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        {array[index + 2] && <CategoryCard category={array[index + 2]} />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let isMounted = true;\r\n    const getCategs = async () => {\r\n      const res = await getCategories(params.commonCategoryName);\r\n      if (isMounted) {\r\n        setCategories(res);\r\n      }\r\n    };\r\n    getCategs();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Grid xs={12} item container direction=\"row\" justify=\"center\">\r\n        <Grid sm={9} container>\r\n          <Grid item direction=\"column\" justify=\"center\" alignItems=\"stretch\" container>\r\n            <Typography className={classes.categoryWord} variant=\"h5\" component=\"h5\">\r\n              {params.commonCategoryName}\r\n            </Typography>\r\n            <Grid container justify=\"space-evenly\" alignItems=\"stretch\" spacing={1}>\r\n              {categories.map((item, index, arr) => index % 3 === 0 && createRow(index, arr))}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommonCategoryPage;\r\n","const PurchaseStatus = {\r\n  waitsForPaymentAprroval: 0,\r\n  waitsInOulet: 1,\r\n  transportingToOutlet: 2,\r\n  waitsForDelivery: 3,\r\n  inDelivering: 4,\r\n  refused: 5,\r\n  canceledByClient: 6,\r\n  finished: 7,\r\n};\r\n\r\nconst getStatusString = (id: number) => {\r\n  switch (id) {\r\n    case PurchaseStatus.waitsForPaymentAprroval:\r\n      return 'Ожидается подтверждения оплаты';\r\n    case PurchaseStatus.waitsInOulet:\r\n      return 'Ожидает в магазине';\r\n    case PurchaseStatus.transportingToOutlet:\r\n      return 'Доставляется в магазин';\r\n    case PurchaseStatus.waitsForDelivery:\r\n      return 'Ожидается доставка';\r\n    case PurchaseStatus.inDelivering:\r\n      return 'Доставляется';\r\n    case PurchaseStatus.refused:\r\n      return 'Отказ';\r\n    case PurchaseStatus.canceledByClient:\r\n      return 'Закрыт';\r\n    case PurchaseStatus.finished:\r\n      return 'Завершён';\r\n    default:\r\n      return 'Временно недоступно';\r\n  }\r\n};\r\n\r\nexport { PurchaseStatus, getStatusString };\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Divider, List, ListItem } from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport PurchaseItem from 'src/Types/PurchaseItem';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    text: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface IPurchasingItemsList {\r\n  purchaseItems: PurchaseItem[];\r\n}\r\n\r\nconst PurchasingItemsList: React.FC<IPurchasingItemsList> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List>\r\n      <Divider />\r\n      {props.purchaseItems.map(item => (\r\n        <React.Fragment key={item.productId}>\r\n          <ListItem>\r\n            <Grid container direction=\"row\" justify=\"space-around\">\r\n              <Button className={classes.text} href={`product/${item.productId}`}>{`${item.productName}`}</Button>\r\n              <Typography className={classes.text}>{`${item.price}₽ x${item.count}`}</Typography>\r\n            </Grid>\r\n          </ListItem>\r\n          <Divider />\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\nexport default PurchasingItemsList;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Card, Divider, List, ListItem } from '@material-ui/core';\r\n\r\nimport Purchase from 'src/Types/Purchase';\r\nimport { getStatusString } from 'src/Types/PurchaseStatus';\r\n\r\nimport OutletInfo from './OutletInfo';\r\nimport PurchasingItemsList from './PurchasingItemsList';\r\n\r\ninterface IPurchaseDetailedInfo {\r\n  purchase: Purchase;\r\n  cardName: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      marginTop: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n    },\r\n    text: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst PurchaseDetailedInfo: React.FC<IPurchaseDetailedInfo> = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <Grid xs={12} item justify=\"center\" alignContent=\"flex-start\" container>\r\n        <Grid xs={12} sm={9} item direction=\"column\" container>\r\n          <Typography variant=\"h5\" className={classes.text}>\r\n            {props.cardName}\r\n          </Typography>\r\n          <List>\r\n            <Divider />\r\n            <ListItem>\r\n              <Typography>Покупатель: {props.purchase.customerName}</Typography>\r\n            </ListItem>\r\n            <Divider />\r\n            {props.purchase.sellerName && (\r\n              <React.Fragment>\r\n                <ListItem>\r\n                  <Typography>Продавец: {props.purchase.sellerName}</Typography>\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            )}\r\n            <ListItem>\r\n              <Typography>Статус: {getStatusString(props.purchase.status)}</Typography>\r\n            </ListItem>\r\n            <Divider />\r\n            <ListItem>\r\n              <Typography>Общая стоимость: {props.purchase.totalCost}</Typography>\r\n            </ListItem>\r\n            <Divider />\r\n            <Accordion variant=\"outlined\">\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Доставка</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                {props.purchase.delivery ? (\r\n                  <Grid xs={12} item>\r\n                    <List>\r\n                      <ListItem>\r\n                        <Typography>Получатель: {props.purchase.delivery.recieverName}</Typography>\r\n                      </ListItem>\r\n                      <Divider />\r\n                      <ListItem>\r\n                        <Typography>Адрес доставки: {props.purchase.delivery.deliveryAdress}</Typography>\r\n                      </ListItem>\r\n                      <Divider />\r\n                      <ListItem>\r\n                        <Typography>Стоимость доставки: {props.purchase.delivery.deliveryCost}</Typography>\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </List>\r\n                  </Grid>\r\n                ) : (\r\n                  <React.Fragment>\r\n                    <Typography>Магазин получения:</Typography>\r\n                    <OutletInfo outlet={props.purchase.deliveryOutlet} />\r\n                  </React.Fragment>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion variant=\"outlined\">\r\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>Список покупок</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid item xs={12}>\r\n                  <PurchasingItemsList purchaseItems={props.purchase.purchaseItems} />\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PurchaseDetailedInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Typography,\r\n  Card,\r\n  Grid,\r\n  TextField,\r\n  ListItem,\r\n  Divider,\r\n  List,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Snackbar,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\r\nimport PurchasingItemsList from 'src/Components/Parts/PurchasingItemsList';\r\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\r\nimport OutletInfo from 'src/Components/Parts/OutletInfo';\r\nimport PrepurchaseInfo from 'src/Types/PrepurchaseInfo';\r\nimport ItemOfPurchase from 'src/Types/ItemOfPurchase';\r\nimport { createPurchase, getPrepurchaseInfo } from 'src/Requests/PostRequests';\r\nimport CustomerInfo from 'src/Types/CustomerInfo';\r\nimport PurchaseRequest from 'src/Types/PurchaseRequest';\r\nimport Purchase from 'src/Types/Purchase';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    topCard: {\r\n      paddingTop: theme.spacing(5),\r\n    },\r\n    pageName: {\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    card: {\r\n      marginTop: theme.spacing(2),\r\n      padding: theme.spacing(2),\r\n    },\r\n    field: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    text: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    textSep: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nconst PurchasingPage: React.FC = () => {\r\n  const getPreInfo = async (isMounted: boolean) => {\r\n    const data = parseParams();\r\n    const res = (await getPrepurchaseInfo(data)) as PrepurchaseInfo;\r\n    if (isMounted) {\r\n      setPrepurchaseInfo(res);\r\n      setSum(res.sum);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getPreInfo(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const parseParams = (): ItemOfPurchase[] => {\r\n    const result = [] as ItemOfPurchase[];\r\n    const params = new URLSearchParams(location.search);\r\n    const toParse = params.get('items');\r\n    const arr = toParse?.split(',');\r\n    let dataArr: string[];\r\n    for (const item of arr as string[]) {\r\n      dataArr = item.split('_');\r\n      result.push({ productId: dataArr[0], count: parseInt(dataArr[1] as string) });\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const createNewCustomerInfo = (curr: CustomerInfo): CustomerInfo =>\r\n    ({ customerFullName: curr.customerFullName, customerTelephone: curr.customerTelephone } as CustomerInfo);\r\n\r\n  const role = sessionStorage.getItem('signed');\r\n  const [prepurchaseInfo, setPrepurchaseInfo] = useState<PrepurchaseInfo>();\r\n  const [customerInfo, setCustomerInfo] = useState<CustomerInfo>({ customerFullName: '', customerTelephone: '' });\r\n  const [deliveryType, setDeliveryType] = useState<string>('outlet');\r\n  const [recieverName, setRecieverName] = useState<string>('');\r\n  const [recieverAdress, setRecieverAdress] = useState<string>('');\r\n  const [outlet, setOutlet] = useState<string>('');\r\n  const [sum, setSum] = useState<number>(0);\r\n  const [operationResult, setResult] = useState<Purchase>();\r\n\r\n  const classes = useStyles();\r\n\r\n  const nameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const newVal = event.target.value as string;\r\n    const newData = createNewCustomerInfo(customerInfo);\r\n    newData.customerFullName = newVal;\r\n    setCustomerInfo(newData);\r\n  };\r\n\r\n  const phoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const regex = /^\\+?[\\d ]*$/;\r\n    const newVal = event.target.value as string;\r\n    if (regex.test(newVal)) {\r\n      const newData = createNewCustomerInfo(customerInfo);\r\n      newData.customerTelephone = newVal;\r\n      setCustomerInfo(newData);\r\n    }\r\n  };\r\n\r\n  const deliveryTypeChange = (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\r\n    setDeliveryType(value);\r\n    if (prepurchaseInfo) {\r\n      if (value === 'outlet') {\r\n        setSum(prepurchaseInfo.sum);\r\n      } else {\r\n        setSum(prepurchaseInfo.sum + prepurchaseInfo.deliveryPrice);\r\n      }\r\n    }\r\n  };\r\n\r\n  const outletChange = (event: React.ChangeEvent<HTMLInputElement>, value: string) => {\r\n    setOutlet(value);\r\n  };\r\n\r\n  const recieverNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const newVal = event.target.value as string;\r\n    setRecieverName(newVal);\r\n  };\r\n\r\n  const recieverAdressChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    const newVal = event.target.value as string;\r\n    setRecieverAdress(newVal);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [errors, setErrors] = React.useState<string[]>([]);\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const submit = async () => {\r\n    const err = [] as string[];\r\n    if (role && role !== 'Customer') {\r\n      if (customerInfo.customerFullName.length < 3) {\r\n        err.push('Введено некорректное имя покупателя!');\r\n      }\r\n      if (customerInfo.customerTelephone.length < 8) {\r\n        err.push('Введён некорректный телефонный номер покупателя!');\r\n      }\r\n    }\r\n\r\n    if (deliveryType === 'outlet') {\r\n      if (outlet.length < 1) {\r\n        err.push('Не выбран магазин для самовывоза!');\r\n      }\r\n    } else {\r\n      if (recieverName.length < 3) {\r\n        err.push('Указано некорректное имя получателя!');\r\n      }\r\n      if (recieverAdress.length < 5) {\r\n        err.push('Не выбран адрес доставки!');\r\n      }\r\n    }\r\n\r\n    if (prepurchaseInfo && prepurchaseInfo.purchaseItems.length < 1) {\r\n      err.push('Произошла ошибка: не найдены товары.');\r\n    }\r\n\r\n    if (err.length > 0) {\r\n      setErrors(err);\r\n      setOpen(true);\r\n    } else {\r\n      const data = {\r\n        customerFullName: customerInfo.customerFullName,\r\n        customerTelephone: customerInfo.customerTelephone,\r\n        cityId: 0,\r\n        purchaseItems: (prepurchaseInfo as PrepurchaseInfo).purchaseItems,\r\n      } as PurchaseRequest;\r\n\r\n      if (deliveryType === 'outlet') {\r\n        data.deliveryOutletId = parseInt(outlet);\r\n      } else {\r\n        data.delivery = { deliveryAdress: recieverAdress, recieverName: recieverName, cityId: 0 };\r\n      }\r\n\r\n      const result = await createPurchase(data);\r\n      if (result) {\r\n        setResult(result as Purchase);\r\n        if (!role) {\r\n          const items = localStorage.getItem('cartItems');\r\n          const itemArr = items?.split(',');\r\n          let index;\r\n          if (prepurchaseInfo && itemArr) {\r\n            for (const prod of prepurchaseInfo.purchaseItems) {\r\n              index = itemArr.findIndex(i => i === prod.productId);\r\n              if (index && index !== -1) {\r\n                itemArr?.splice(index, 1);\r\n              }\r\n            }\r\n            localStorage.setItem('cartItems', itemArr.join(','));\r\n          }\r\n        }\r\n      } else {\r\n        err.push('Произошла непредвиденная ошибка!');\r\n        setErrors(err);\r\n        setOpen(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          <ul>\r\n            {errors.map((e, i) => (\r\n              <li key={i}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </Alert>\r\n      </Snackbar>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid xs={12} sm={9} item direction=\"column\" container>\r\n          {!operationResult && (\r\n            <React.Fragment>\r\n              <Card className={classes.topCard} variant=\"outlined\">\r\n                <Typography variant=\"h4\" className={classes.pageName}>\r\n                  Оформление заказа\r\n                </Typography>\r\n              </Card>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Grid xs={12} item justify=\"center\" alignContent=\"flex-start\" container>\r\n                  <Grid xs={12} sm={9} item direction=\"column\" container>\r\n                    <Typography variant=\"h5\" className={classes.text}>\r\n                      Состав заказа:\r\n                    </Typography>\r\n                    <Card>\r\n                      <List>\r\n                        <Divider />\r\n                        {prepurchaseInfo && <PurchasingItemsList purchaseItems={prepurchaseInfo.purchaseItems} />}\r\n                      </List>\r\n                    </Card>\r\n                    <Typography variant=\"h6\" className={classes.textSep}>\r\n                      Всего: {prepurchaseInfo?.sum}₽\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n              {role !== 'Customer' && (\r\n                <Card className={classes.card} variant=\"outlined\">\r\n                  <Typography variant=\"h5\" className={classes.text}>\r\n                    Данные покупателя:\r\n                  </Typography>\r\n                  <Grid xs={12} item justify=\"center\" container>\r\n                    <Grid xs={12} sm={6} item direction=\"column\" container>\r\n                      <TextField\r\n                        className={classes.field}\r\n                        value={customerInfo.customerFullName}\r\n                        onChange={nameChange}\r\n                        variant=\"outlined\"\r\n                        label=\"ФИО покупателя\"\r\n                      />\r\n                      <TextField\r\n                        className={classes.field}\r\n                        value={customerInfo.customerTelephone}\r\n                        onChange={phoneChange}\r\n                        variant=\"outlined\"\r\n                        label=\"Номер телефона\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Card>\r\n              )}\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Typography variant=\"h5\" className={classes.text}>\r\n                  Выбор доставки:\r\n                </Typography>\r\n                <Grid xs={12} item justify=\"space-evenly\" direction=\"column\" alignItems=\"center\" container>\r\n                  <RadioGroup className={classes.field} row value={deliveryType} onChange={deliveryTypeChange}>\r\n                    <FormControlLabel\r\n                      value=\"outlet\"\r\n                      control={<Radio color=\"primary\" />}\r\n                      label=\"Самовывоз из магазина\"\r\n                    />\r\n                    <FormControlLabel value=\"delivery\" control={<Radio color=\"primary\" />} label=\"Доставка на дом\" />\r\n                  </RadioGroup>\r\n                  {deliveryType === 'outlet' ? (\r\n                    <Card>\r\n                      <List>\r\n                        <RadioGroup row value={outlet} onChange={outletChange}>\r\n                          <Divider />\r\n                          {prepurchaseInfo?.outlets.map(o => (\r\n                            <React.Fragment key={o.id}>\r\n                              <ListItem>\r\n                                <Grid alignItems=\"center\" direction=\"row\" container>\r\n                                  <Grid item xs={12} sm={3}>\r\n                                    <Radio value={o.id.toString()} color=\"primary\" />\r\n                                  </Grid>\r\n                                  <Grid item xs={12} sm={9}>\r\n                                    <OutletInfo outlet={o} />\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </ListItem>\r\n                              <Divider />\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </RadioGroup>\r\n                      </List>\r\n                    </Card>\r\n                  ) : (\r\n                    <Grid xs={12} item justify=\"center\" container>\r\n                      <Grid xs={12} sm={6} item direction=\"column\" container>\r\n                        <Typography variant=\"h5\" className={classes.text}>\r\n                          Стоимость доставки: {prepurchaseInfo?.deliveryPrice}₽\r\n                        </Typography>\r\n                        <TextField\r\n                          className={classes.field}\r\n                          value={recieverName}\r\n                          onChange={recieverNameChange}\r\n                          variant=\"outlined\"\r\n                          label=\"ФИО получателя\"\r\n                        />\r\n                        <TextField\r\n                          className={classes.field}\r\n                          value={recieverAdress}\r\n                          onChange={recieverAdressChange}\r\n                          variant=\"outlined\"\r\n                          label=\"Адрес доставки\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Card>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Typography variant=\"h5\" className={classes.pageName}>\r\n                  Итог: {sum}₽\r\n                </Typography>\r\n              </Card>\r\n              <Card className={classes.card} variant=\"outlined\">\r\n                <Button color=\"primary\" variant=\"contained\" onClick={submit}>\r\n                  Купить\r\n                </Button>\r\n              </Card>\r\n            </React.Fragment>\r\n          )}\r\n          {operationResult && (\r\n            <React.Fragment>\r\n              <PurchaseDetailedInfo purchase={operationResult} cardName={'Заказ оформлен:'} />\r\n              <Button variant=\"contained\" color=\"primary\" href=\"/\">\r\n                К покупкам\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PurchasingPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\r\nimport PurchaseDetailedInfo from 'src/Components/Parts/PurchaseDetailedInfo';\r\nimport { getPurchases } from 'src/Requests/GetRequests';\r\nimport Purchase from 'src/Types/Purchase';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    productGrid: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n    filterPanel: {\r\n      paddingTop: theme.spacing(1),\r\n    },\r\n    pageName: {\r\n      paddingTop: theme.spacing(2),\r\n      fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n  }),\r\n);\r\n\r\nconst UserPurchases: React.FC = () => {\r\n  const getProd = async (isMounted: boolean) => {\r\n    const res = await getPurchases();\r\n    if (isMounted) {\r\n      setPurchases(res);\r\n    }\r\n  };\r\n\r\n  const [purchases, setPurchases] = useState<Purchase[]>([]);\r\n\r\n  const dateParse = (date: string) => {\r\n    const val = new Date(date);\r\n    return val.toLocaleString();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    getProd(isMounted);\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavigationBar />\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\r\n          <Grid item direction=\"column\" justify=\"center\" container>\r\n            <Grid>\r\n              <Typography className={classes.pageName} variant=\"h5\" component=\"h5\">\r\n                История заказов\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item direction=\"row\" justify=\"center\" container>\r\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\r\n                <Grid>\r\n                  {purchases.map(purchase => (\r\n                    <PurchaseDetailedInfo\r\n                      key={purchase.id}\r\n                      purchase={purchase}\r\n                      cardName={`Заказ от ${dateParse(purchase.createdDate)}`}\r\n                    />\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPurchases;\r\n","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport CategoryPage from './Components/Pages/CategoryPage';\r\nimport ProductsPage from './Components/Pages/ProductsPage';\r\nimport ProductPage from './Components/Pages/ProductPage';\r\nimport RegistrationPage from './Components/Pages/RegistrationPage';\r\nimport CartPage from './Components/Pages/CartPage';\r\nimport WishlistPage from './Components/Pages/WishlistPage';\r\nimport CommonCategoryPage from './Components/Pages/CommonCategoryPage';\r\nimport PurchasingPage from './Components/Pages/PurchasingPage';\r\nimport UserPurchases from './Components/Pages/UserPurchases';\r\n\r\nconst innerTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#ef6c00',\r\n    },\r\n    secondary: {\r\n      main: '#FFF',\r\n    },\r\n  },\r\n});\r\n\r\nconst App: React.FC = () => (\r\n  <div className=\"App\">\r\n    <ThemeProvider theme={innerTheme}>\r\n      <BrowserRouter>\r\n        <div>\r\n          <Route exact path=\"/\" component={ProductsPage} />\r\n          <Route path=\"/common/:commonCategoryName\" component={CommonCategoryPage} />\r\n          <Route path=\"/category/:categoryName\" component={CategoryPage} />\r\n          <Route path=\"/cart\" component={CartPage} />\r\n          <Route path=\"/wishlist\" component={WishlistPage} />\r\n          <Route path=\"/product/:productID\" component={ProductPage} />\r\n          <Route path=\"/registration\" component={RegistrationPage} />\r\n          <Route path=\"/purchasing\" component={PurchasingPage} />\r\n          <Route path=\"/purchases\" component={UserPurchases} />\r\n        </div>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from 'src/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}