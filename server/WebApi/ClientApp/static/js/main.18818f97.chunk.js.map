{"version":3,"sources":["Components/Parts/ProductCard.tsx","Requests/GetRequests.ts","Components/Parts/CategorySelector.tsx","Requests/AccountRequests.ts","Components/Parts/LoginForm.tsx","Components/Parts/LoginModal.tsx","Components/Parts/NavigationBar.tsx","Components/Parts/SortBar.tsx","Components/Parts/FilterBar.tsx","Components/Parts/ProductListParams.tsx","Components/Pages/CategoryPage.tsx","Components/Pages/ProductsPage.tsx","Components/Parts/PriceLikeBuyCard.tsx","Components/Parts/DetailedProductCard.tsx","Components/Parts/ProductDescription.tsx","Components/Parts/ProductParameter.tsx","Components/Parts/ProductParams.tsx","Components/Parts/ReviewBlock.tsx","Components/Parts/ReviewForm.tsx","Components/Parts/ProductReviews.tsx","Components/Parts/ProductInfoPanel.tsx","Components/Pages/ProductPage.tsx","Components/Parts/RegistrationForm.tsx","Components/Pages/RegistrationPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","minHeight","marginBottom","spacing","details","flexDirection","content","flex","button","marginTop","marginLeft","marginRight","maxHeight","cover","maxWidth","margin","bold","fontWeight","rating","ProductCard","props","useState","isShown","setIsShown","picUrl","product","picURL","picture","setPicture","classes","useEffect","isMounted","img","Image","src","onerror","Card","variant","className","onMouseEnter","onMouseLeave","Grid","container","direction","alignItems","item","xs","sm","alt","name","Typography","vendorCode","CardContent","component","Link","href","id","color","price","Rating","value","mark","readOnly","justify","IconButton","aria-label","Button","getRequest","url","a","axios","get","data","getProducts","currentPage","itemsOnPage","sortType","sortparams","sortTypeParsing","type","reverse","getCategories","getProduct","getProductsOfCategory","categoryName","includes","split","paper","menu","padding","paddingRight","paddingLeft","paddingTop","paddingBottom","CategorySelector","React","open","setOpen","categories","setCategories","anchorRef","useRef","handleToggle","prevOpen","current","focus","res","getCategs","size","ref","aria-controls","undefined","aria-haspopup","onClick","endIcon","Popper","anchorEl","role","transition","disablePortal","Paper","ClickAwayListener","onClickAway","event","contains","target","MenuList","autoFocusItem","onKeyDown","key","preventDefault","Array","map","category","index","MenuItem","document","location","serverAnswers","authViaGoogle","token","post","logInRequest","logInData","registrationRequest","registrationData","regViaGoogleRequest","spaces","LoginForm","login","password","rememberMe","loginData","setLoginData","handleGoogleLoginSuccess","googleData","getAuthResponse","id_token","redirectTo","logInButtonClicked","response","code","window","replace","TextField","onChange","label","FormControlLabel","control","Checkbox","checked","clientId","buttonText","onSuccess","cookiePolicy","buttons","LoginModal","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","search","position","borderRadius","shape","backgroundColor","palette","common","white","width","breakpoints","up","inputRoot","inputInput","transitions","create","searchIcon","height","pointerEvents","justifyContent","logoButton","fontSize","fontFamily","NavigationBar","Fragment","AppBar","Toolbar","startIcon","InputBase","placeholder","input","inputProps","ButtonGroup","selector","formControl","minWidth","SortBar","handleOpen","handleSortTypeChanged","FormControl","InputLabel","Select","labelId","rightTextField","leftTextField","FilterBar","handleMinChange","setPrices","handleMaxChange","List","ListItem","Divider","gutterBottom","priceRange","toString","pickedPrices","InputProps","startAdornment","InputAdornment","applyChanges","createProdParams","getItems","pickedPrice","productList","lastPage","handlePageChange","this","setPage","createURL","setSortType","filtersApplied","setInfo","prodList","maxPage","minPrice","maxPrice","checkPickedPrices","i","newValue","test","setParams","currPage","sort","isItNumber","parseInt","isNaN","params","URLSearchParams","delete","set","history","pushState","productGrid","categoryWord","filterPanel","CategoryPage","useParams","qParams","products","object","useLocalObservable","Pagination","count","page","ProductsPage","getProd","grid","PriceLikeBuyCard","image","card","DetailedProductCard","strinTechParams","string","productParameter","param","important","substring","length","paramString","prodName","typography","fontWeightBold","descriptionText","ProductDescription","productName","productDescription","line","borderBottom","divider","ProductParameter","ProductParams","userName","reviewHeader","commentSection","ReviewBlock","review","username","message","cardPart","ReviewForm","setReview","multiline","rows","fullWidth","addReview","ProductReviews","reviews","setRerviews","newReview","newVar","push","pop","TabPanel","children","other","hidden","a11yProps","background","tabs","borderRight","ProductInfoPanel","setValue","Tabs","orientation","textColor","Tab","description","ProductPage","setProduct","productID","onload","RegistrationForm","newObject","oldData","firstName","secondName","phoneNumber","email","regData","setRegData","registerButtonClicked","newData","RegistrationPage","async","defer","style","innerTheme","createMuiTheme","primary","main","secondary","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18818f97.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nimport Product from 'src/Types/Product';\n\ninterface IProductCard {\n  product: Product;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      marginBottom: theme.spacing(1),\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    button: {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5),\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      maxHeight: 50,\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(2),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    rating: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductCard: React.FC<IProductCard> = props => {\n  const [isShown, setIsShown] = useState(false);\n  const picUrl = 'http://localhost:3000/';\n  const [picture, setPicture] = useState(`${picUrl}${props.product.picURL}`);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let isMounted = true;\n    const img = new Image();\n    img.src = `${picUrl}${props.product.picURL}`;\n\n    if (isMounted) {\n      img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n    >\n      <Grid container direction=\"column\" alignItems=\"center\" item xs={12} sm={3}>\n        <img className={classes.cover} src={picture} alt={props.product.name} />\n        <Typography variant=\"body1\">{isShown && props.product.vendorCode}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6} container direction=\"column\">\n        <CardContent className={classes.content}>\n          <Grid>\n            <Typography component=\"h5\" variant=\"h5\">\n              <Link href={`/product/${props.product.id}`} color=\"inherit\">\n                {props.product.name}\n              </Link>\n            </Typography>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\n              ${props.product.price}\n            </Typography>\n          </Grid>\n        </CardContent>\n        <Grid className={classes.rating}>\n          <Rating name=\"read-only\" value={props.product.mark} readOnly />\n        </Grid>\n      </Grid>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={3}>\n        <Grid item xs={12} sm={4}>\n          <IconButton aria-label=\"favourite\" className={classes.button}>\n            <FavoriteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Button className={classes.button} variant=\"outlined\">\n            Buy\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProductCard;\n","import axios from 'axios';\n\nimport Sorting from 'src/Types/Sorting';\n\nasync function getRequest(url: string) {\n  return (await axios.get(url)).data;\n}\n\nasync function getProducts(currentPage: number, itemsOnPage: number, sortType: string, price: number[]) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const url = `/api/Product?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n  return await getRequest(url);\n}\n\nasync function getCategories() {\n  return await getRequest('/api/Category');\n}\n\nasync function getProduct(id: string) {\n  return await getRequest(`/api/Product/${id}`);\n}\n\nasync function getProductsOfCategory(\n  categoryName: string,\n  currentPage: number,\n  itemsOnPage: number,\n  sortType: string,\n  price: number[],\n) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const url = `/api/Category/name/${categoryName}?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n  return await getRequest(url);\n}\n\nfunction sortTypeParsing(sortType: string): Sorting {\n  if (sortType.includes('reverse')) {\n    return { type: sortType.split(' ')[0], reverse: true };\n  } else {\n    return { type: sortType.split(' ')[0], reverse: false };\n  }\n}\n\nexport default getRequest;\n\nexport { getProducts, getRequest, getCategories, getProductsOfCategory, getProduct };\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { Typography } from '@material-ui/core';\n\nimport Category from 'src/Types/Category';\nimport { getCategories } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n    menu: {\n      padding: theme.spacing(1),\n    },\n    item: {\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  }),\n);\n\nconst CategorySelector: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    const keyValue = 'Tab';\n    if (event.key === keyValue) {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const getCategs = async () => {\n      const res = await getCategories();\n      if (isMounted) {\n        setCategories(res);\n      }\n    };\n    getCategs();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {open ? (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"secondary\"\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          endIcon={<ArrowDropUpIcon />}\n        >\n          Categories\n        </Button>\n      ) : (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"secondary\"\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          endIcon={<ArrowDropDownIcon />}\n        >\n          Categories\n        </Button>\n      )}\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown} className={classes.menu}>\n              {categories instanceof Array &&\n                categories.map((category, index) => (\n                  <MenuItem\n                    className={classes.item}\n                    key={index}\n                    onClick={() => {\n                      document.location.href = `/category/${category.name}`;\n                    }}\n                  >\n                    <Typography variant=\"h6\" component=\"h6\">\n                      {category.name}\n                    </Typography>\n                  </MenuItem>\n                ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </div>\n  );\n};\n\nexport default CategorySelector;\n","import axios from 'axios';\n\nimport Login from 'src/Types/Login';\nimport Register from 'src/Types/Register';\nimport ServerResponse from 'src/Types/ServerResponse';\n\nconst serverAnswers = {\n  noCommand: 0,\n  signedIn: 3,\n  goToGoogleRegistrationPage: 10,\n};\n\nconst authViaGoogle = async (token: string): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/GoogleAuth', { token: token })).data;\n\nconst logInRequest = async (logInData: Login): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Login', logInData)).data;\n\nconst registrationRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Register', registrationData)).data;\n\nconst regViaGoogleRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/RegisterViaGoogle', registrationData)).data;\n\nexport { serverAnswers, authViaGoogle, logInRequest, registrationRequest, regViaGoogleRequest };\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\n\nimport Login from 'src/Types/Login';\nimport { authViaGoogle, logInRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst LoginForm: React.FC = () => {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState<Login>({ login: '', password: '', rememberMe: true });\n\n  const handleRememberMeChange = () => {\n    setLoginData({ login: loginData.login, password: loginData.password, rememberMe: !loginData.rememberMe });\n  };\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: event.target.value as string,\n      password: loginData.password,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: loginData.login,\n      password: event.target.value as string,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handleGoogleLoginSuccess = async (googleData: unknown) => {\n    if (googleData) {\n      const token = (googleData as GoogleLoginResponse)?.getAuthResponse()?.id_token;\n      if (token) {\n        redirectTo(await authViaGoogle(token));\n      }\n    }\n  };\n\n  const logInButtonClicked = async () => {\n    redirectTo(await logInRequest(loginData));\n  };\n\n  const redirectTo = (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.goToGoogleRegistrationPage:\n        window.location.replace('/Registration');\n        break;\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={loginData.login}\n        onChange={handleLoginChange}\n        label=\"Login\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={loginData.password}\n        onChange={handlePasswordChange}\n        label=\"Password\"\n        variant=\"outlined\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={loginData.rememberMe}\n            onChange={handleRememberMeChange}\n            name=\"rememberMe\"\n            color=\"primary\"\n          />\n        }\n        label=\"Remember me\"\n        className={classes.spaces}\n      />\n      <Grid container justify=\"flex-end\">\n        <Button\n          type=\"submit\"\n          className={classes.spaces}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={logInButtonClicked}\n        >\n          LogIn\n        </Button>\n      </Grid>\n      <Grid className={classes.spaces} container justify=\"center\">\n        <Typography>Sign in with other services</Typography>\n      </Grid>\n      <Grid container justify=\"center\">\n        <GoogleLogin\n          clientId={'1036988036938-9u2bo3aiqo038ehm8tlb3vl9lq6bm27f.apps.googleusercontent.com'}\n          buttonText=\"Log in with Google\"\n          onSuccess={handleGoogleLoginSuccess}\n          cookiePolicy={'single_host_origin'}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport LoginForm from './LoginForm';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst LoginModal: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} color=\"secondary\" variant=\"outlined\" onClick={handleClickOpen}>\n        LogIn\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Sign in</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <LoginForm />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Grid container justify=\"center\">\n            <Typography>You are new here?</Typography>\n            <Link href=\"/Registration\"> Regiser </Link>\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DevicesIcon from '@material-ui/icons/Devices';\n\nimport CategorySelector from './CategorySelector';\nimport LoginModal from './LoginModal';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.common.white,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    inputRoot: {\n      color: '#000',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    searchIcon: {\n      color: '#999',\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    logoButton: {\n      fontSize: '30px',\n      fontFamily: 'cursive',\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar>\n        <Toolbar>\n          <Grid item xs={12} sm={2}>\n            <Button\n              variant=\"text\"\n              size=\"large\"\n              color=\"secondary\"\n              href=\"/\"\n              className={classes.logoButton}\n              startIcon={<DevicesIcon />}\n            >\n              DDoS\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <CategorySelector />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <ButtonGroup variant=\"outlined\" color=\"secondary\" size=\"large\" aria-label=\"text primary button group\">\n              <Button startIcon={<FavoriteBorderIcon />}>Favorite</Button>\n              <Button startIcon={<ShoppingCartOutlinedIcon />}>Cart</Button>\n            </ButtonGroup>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <LoginModal />\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\nexport default NavigationBar;\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { Observer } from 'mobx-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    selector: {\n      marginLeft: theme.spacing(6),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n  }),\n);\n\ninterface ISortBar {\n  type: string;\n  onChange: (sortType: string) => void;\n}\n\nconst SortBar: React.FC<ISortBar> = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleSortTypeChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.onChange(event.target.value as string);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\">\n        <Grid className={classes.selector} container alignItems=\"center\" justify=\"flex-start\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"sorting-controlled-open-select-label\">Sort by</InputLabel>\n            <Observer>\n              {() => (\n                <Select\n                  labelId=\"sorting-controlled-open-select-label\"\n                  id=\"sorting-controlled-open-select\"\n                  open={open}\n                  onClick={handleOpen}\n                  value={props.type}\n                  onChange={handleSortTypeChanged}\n                >\n                  <MenuItem value={'price'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Price\n                  </MenuItem>\n                  <MenuItem value={'price reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Price\n                  </MenuItem>\n                  <MenuItem value={'name'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Name\n                  </MenuItem>\n                  <MenuItem value={'name reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Name\n                  </MenuItem>\n                </Select>\n              )}\n            </Observer>\n          </FormControl>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SortBar;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Observer } from 'mobx-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rightTextField: {\n      marginLeft: theme.spacing(1),\n    },\n    leftTextField: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IFilterBar {\n  priceRange: number[];\n  pickedPrices: number[];\n  applyChanges: () => void;\n  setPrices: (i: number, newValue: unknown) => void;\n}\n\nconst FilterBar: React.FC<IFilterBar> = props => {\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(0, event.target.value);\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(1, event.target.value);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Card variant=\"outlined\">\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem>\n            <Typography variant=\"h5\" component=\"h5\">\n              Filters\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Typography id=\"price-slider\" gutterBottom>\n              Price\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"minPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[0].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.leftTextField}\n                  value={props.pickedPrices[0]}\n                  onChange={handleMinChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"maxPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[1].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.rightTextField}\n                  value={props.pickedPrices[1]}\n                  onChange={handleMaxChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Grid container justify=\"center\">\n              <Button variant=\"contained\" color=\"primary\" onClick={props.applyChanges}>\n                Apply\n              </Button>\n            </Grid>\n          </ListItem>\n        </List>\n      </Card>\n    </Grid>\n  );\n};\nexport default FilterBar;\n","import Product from 'src/Types/Product';\n\ninterface ISettings {\n  currentPage: number;\n  sortType: string;\n  pickedPrice: number[];\n  productList: Product[];\n  lastPage: number;\n  priceRange: number[];\n\n  handlePageChange(event: React.ChangeEvent<unknown>, value: number): void;\n  setPage(value: number): void;\n  setSortType(type: string): void;\n  filtersApplied(): void;\n  setInfo(prodList: unknown, maxPage: number, minPrice: number, maxPrice: number): void;\n  checkPickedPrices(i: number, newValue: unknown): void;\n  setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown): void;\n  isItNumber(value: unknown): boolean;\n  createURL(): void;\n}\n\nfunction createProdParams(getItems: () => void): ISettings {\n  const settings: ISettings = {\n    currentPage: 1,\n    sortType: 'price',\n    pickedPrice: [0, 0],\n    productList: [],\n    lastPage: 0,\n    priceRange: [0, 0],\n\n    handlePageChange(event: React.ChangeEvent<unknown>, value: number) {\n      this.setPage(value);\n      getItems();\n    },\n\n    setPage(value: number) {\n      if (value <= this.lastPage && value > 0 && value !== 1) {\n        this.currentPage = value;\n      } else {\n        this.currentPage = 1;\n      }\n      this.createURL();\n    },\n\n    setSortType(type: string) {\n      if (this.sortType !== type) {\n        this.setPage(1);\n        this.sortType = type;\n        this.createURL();\n        getItems();\n      }\n    },\n\n    filtersApplied() {\n      this.setPage(1);\n      this.createURL();\n      getItems();\n    },\n\n    setInfo(prodList: Product[], maxPage: number, minPrice: number, maxPrice: number) {\n      this.productList = prodList;\n      this.lastPage = maxPage;\n      this.priceRange = [minPrice, maxPrice];\n      if (this.pickedPrice[0] === 0) {\n        this.pickedPrice[0] = minPrice;\n      }\n      if (this.pickedPrice[1] === 0) {\n        this.pickedPrice[1] = maxPrice;\n      }\n    },\n\n    checkPickedPrices(i: number, newValue: unknown) {\n      const regexFull = /^\\d*$/;\n      const regexPunct = /\\d+\\.\\d+/;\n      if ((regexFull.test(newValue as string) || regexPunct.test(newValue as string)) && (i === 0 || i === 1)) {\n        if ((newValue as string) === '') {\n          this.pickedPrice[i] = 0;\n        } else {\n          this.pickedPrice[i] = newValue as number;\n        }\n      }\n    },\n\n    setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown) {\n      if (this.isItNumber(minPrice)) {\n        this.checkPickedPrices(0, minPrice as number);\n      }\n      if (this.isItNumber(maxPrice)) {\n        this.checkPickedPrices(1, maxPrice as number);\n      }\n      if (sort !== null && sort !== this.sortType) {\n        this.sortType = sort as string;\n      }\n      if (this.isItNumber(currPage)) {\n        this.setPage(parseInt(currPage as string));\n      }\n      this.createURL();\n      getItems();\n    },\n\n    isItNumber(value: unknown): boolean {\n      if (!isNaN(parseInt(value as string))) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    createURL() {\n      const params = new URLSearchParams(location.search);\n      if (this.currentPage === 1) {\n        params.delete('page');\n      } else {\n        params.set('page', this.currentPage.toString());\n      }\n      if (this.sortType === 'price') {\n        params.delete('sort');\n      } else {\n        params.set('sort', this.sortType);\n      }\n      if (this.pickedPrice[0] === this.priceRange[0] && this.pickedPrice[1] === this.priceRange[1]) {\n        params.delete('minPrice');\n        params.delete('maxPrice');\n      } else {\n        params.set('minPrice', this.pickedPrice[0].toString());\n        params.set('maxPrice', this.pickedPrice[1].toString());\n      }\n      history.pushState({}, 'Products', `?${params.toString()}`);\n    },\n  };\n\n  return settings;\n}\n\nexport { createProdParams };\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProductsOfCategory } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\ninterface ICategoryPage {\n  categoryName: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryWord: {\n      fontWeight: 600,\n      padding: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst CategoryPage: React.FC = () => {\n  const params: ICategoryPage = useParams();\n\n  const getProducts = async (isMounted: boolean) => {\n    const res = await getProductsOfCategory(params.categoryName, data.currentPage, 9, data.sortType, data.pickedPrice);\n    if (isMounted !== false && res.container !== undefined) {\n      const qParams = new URLSearchParams(location.search);\n      data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice);\n      data.setParams(qParams.get('page'), qParams.get('minPrice'), qParams.get('maxPrice'), qParams.get('sort'));\n    }\n  };\n\n  const object = createProdParams(async () => {\n    const res = await getProductsOfCategory(params.categoryName, data.currentPage, 9, data.sortType, data.pickedPrice);\n    data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice);\n  });\n  const data = useLocalObservable(() => object);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProducts(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n            <Grid>\n              <Typography className={classes.categoryWord} variant=\"h5\" component=\"h5\">\n                {params.categoryName}\n              </Typography>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justify=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryPage;\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProducts } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductsPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\n    if (isMounted) {\n      const params = new URLSearchParams(location.search);\n      data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice);\n      data.setParams(params.get('page'), params.get('minPrice'), params.get('maxPrice'), params.get('sort'));\n    }\n  };\n\n  const object = createProdParams(async () => {\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\n    data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice);\n  });\n\n  const data = useLocalObservable(() => object);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" container>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justify=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductsPage;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IPriceLikeBuyCard {\n  price?: number;\n  id?: string;\n  rating?: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      margin: theme.spacing(1),\n    },\n    grid: {\n      minHeight: 80,\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(2),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    rating: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst PriceLikeBuyCard: React.FC<IPriceLikeBuyCard> = props => {\n  const classes = useStyles();\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid justify=\"center\" alignItems=\"center\" container direction=\"column\">\n        <Grid className={classes.grid} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" xs={12} sm={6}>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\n              Price:\n            </Typography>\n            <Typography color=\"primary\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n              ${props.price}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={3} container justify=\"flex-start\">\n              <IconButton aria-label=\"favourite\">\n                <FavoriteIcon />\n              </IconButton>\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              <Button color=\"primary\" variant=\"contained\">\n                Buy\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Rating className={classes.rating} name=\"read-only\" value={props.rating} readOnly />\n      </Grid>\n    </Card>\n  );\n};\n\nexport default PriceLikeBuyCard;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport PriceLikeBuyCard from 'src/Components/Parts/PriceLikeBuyCard';\n\ninterface IDetailedProductCard {\n  product?: Product;\n  image?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      maxWidth: 260,\n      maxHeight: 400,\n      margin: theme.spacing(2),\n    },\n    card: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst DetailedProductCard: React.FC<IDetailedProductCard> = props => {\n  const classes = useStyles();\n  const paramString = (): string => {\n    let string = '';\n    props.product?.productParameter.map(param => {\n      if (param.important) {\n        string += `${param.name}:${param.value}, `;\n      }\n    });\n    return string.substring(0, string.length - 2);\n  };\n\n  const strinTechParams = paramString();\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <Grid direction=\"row\" justify=\"center\" container>\n        <Grid item xs={12} sm={6} direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n          <img className={classes.image} src={props.image} />\n          Code: {props.product?.vendorCode}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" component=\"h6\">\n            {strinTechParams}\n          </Typography>\n          <PriceLikeBuyCard price={props.product?.price} rating={props.product?.mark} id={props.product?.id} />\n        </Grid>\n      </Grid>\n      <Grid direction=\"row\" justify=\"center\" alignItems=\"center\" container />\n    </Card>\n  );\n};\n\nexport default DetailedProductCard;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IProductDescription {\n  productName: string;\n  productDescription: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    descriptionText: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst ProductDescription: React.FC<IProductDescription> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Descripton of ${props.productName}`}\n      </Typography>\n      <Grid className={classes.descriptionText} container justify=\"flex-start\">\n        <Typography variant=\"body2\">{props.productDescription}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductDescription;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\n\ninterface IProductParameter {\n  param: Parameter;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    line: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 0, 1, 0),\n    },\n  }),\n);\n\nconst ProductParameter: React.FC<IProductParameter> = props => {\n  const classes = useStyles();\n  return (\n    <Grid direction=\"row\" container alignItems=\"center\" justify=\"center\" className={classes.line}>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.name}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.value}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductParameter;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\nimport ProductParameter from 'src/Components/Parts/ProductParameter';\n\ninterface IProductParams {\n  productName: string;\n  params: Parameter[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductParams: React.FC<IProductParams> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Parameters of ${props.productName}`}\n      </Typography>\n      {props.params?.map((param, index) => (\n        <ProductParameter param={param} key={index} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default ProductParams;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\n\nimport Review from 'src/Types/Review';\n\ninterface IProductReviews {\n  review: Review;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    userName: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    reviewHeader: {\n      padding: theme.spacing(1),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    commentSection: {\n      minHeight: '6em',\n      padding: theme.spacing(2),\n    },\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n  }),\n);\n\nconst ReviewBlock: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"flex-start\" justify=\"flex-start\">\n        <Grid className={classes.reviewHeader} container direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item xs={12} sm={8}>\n            <Typography className={classes.userName}>{props.review.username}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Rating value={props.review.mark} readOnly />\n          </Grid>\n        </Grid>\n        <Typography className={classes.commentSection}>{props.review.message}</Typography>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewBlock;\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Review from 'src/Types/Review';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n    cardPart: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateReview {\n  mark: number;\n  message: string;\n}\n\ninterface IReviewForm {\n  addReview: (newReview: Review) => void;\n}\n\nconst ReviewForm: React.FC<IReviewForm> = props => {\n  const classes = useStyles();\n\n  const [review, setReview] = useState<ICreateReview>({ message: '', mark: 0 });\n  const handleMark = (event: unknown, value: unknown) => {\n    setReview({ message: review.message, mark: value as number });\n  };\n  const handleMessage = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const value = event.target.value as string;\n    setReview({ message: value, mark: review.mark });\n  };\n\n  const submit = () => {\n    // sent request, wait for result\n    props.addReview({ message: review.message, mark: review.mark, username: 'me' });\n    // if there is user's comment -> redraw form (new values) and button label = 'update'\n  };\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"center\" justify=\"center\">\n        <Grid className={classes.cardPart} container direction=\"row\" alignItems=\"center\" justify=\"flex-end\">\n          <Rating value={review.mark} onChange={handleMark} />\n        </Grid>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Review\"\n          multiline\n          rows={4}\n          placeholder=\"Write your review here\"\n          variant=\"outlined\"\n          value={review.message}\n          onChange={handleMessage}\n          fullWidth\n        />\n        <Grid className={classes.cardPart} container alignItems=\"center\" justify=\"flex-end\">\n          <Button color=\"primary\" variant=\"contained\" onClick={submit}>\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ReviewBlock from 'src/Components/Parts/ReviewBlock';\nimport Review from 'src/Types/Review';\nimport ReviewForm from 'src/Components/Parts/ReviewForm';\n\ninterface IProductReviews {\n  productName: string;\n  reviews: Review[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductReviews: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n  const [reviews, setRerviews] = useState<Review[]>(props.reviews);\n  const addReview = (newReview: Review): void => {\n    const newVar: Review[] = [];\n    while (reviews.length > 0) {\n      newVar.push(reviews.pop() as Review);\n    }\n    newVar.push(newReview);\n    setRerviews(newVar.reverse());\n  };\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Reviews on ${props.productName}`}\n      </Typography>\n      <Grid item xs={12} direction=\"column\" container justify=\"center\">\n        <ReviewForm addReview={addReview} />\n        {reviews?.map((review, index) => (\n          <ReviewBlock review={review} key={index} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductReviews;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport ProductDescription from 'src/Components/Parts/ProductDescription';\nimport ProductParams from 'src/Components/Parts/ProductParams';\nimport ProductReviews from 'src/Components/Parts/ProductReviews';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: unknown;\n  value: unknown;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nfunction a11yProps(index: unknown) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\ninterface IVerticalTabs {\n  product: Product;\n}\n\nconst ProductInfoPanel = (props: IVerticalTabs) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: unknown, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const reviews = [\n    { username: 'user1', message: `Not funny, didn't laught`, mark: 3 },\n    { username: '-user2011-', message: 'The best thing happened with me!', mark: 5 },\n    { username: 'User1984', message: `It's not about the product - it's about lifestyle`, mark: 4 },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid className={classes.tabs} item xs={12} sm={3}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs\"\n            textColor=\"primary\"\n          >\n            <Tab label=\"Description\" {...a11yProps(0)} />\n            <Tab label=\"Parameters\" {...a11yProps(1)} />\n            <Tab label=\"Reviews\" {...a11yProps(2)} />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <TabPanel value={value} index={0}>\n            <ProductDescription productName={props.product.name} productDescription={props.product.description} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <ProductParams productName={props.product.name} params={props.product.productParameter} />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <ProductReviews productName={props.product.name} reviews={reviews} />\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProductInfoPanel;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from 'react-router-dom';\nimport { Card, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProduct } from 'src/Requests/GetRequests';\nimport Product from 'src/Types/Product';\nimport DetailedProductCard from 'src/Components/Parts/DetailedProductCard';\nimport ProductInfoPanel from 'src/Components/Parts/ProductInfoPanel';\n\ninterface IProductPage {\n  productID: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 2 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductPage: React.FC = () => {\n  const params: IProductPage = useParams();\n  const classes = useStyles();\n\n  const [product, setProduct] = useState<Product>();\n  const [picture, setPicture] = useState<string>('');\n  const picUrl = 'http://localhost:3000/';\n\n  useEffect(() => {\n    let isMounted = true;\n    const getProd = async () => {\n      const res = await getProduct(params.productID);\n      if (isMounted) {\n        setProduct(res);\n\n        const img = new Image();\n        img.src = `${picUrl}${res.picURL}`;\n\n        if (isMounted) {\n          img.onload = () => setPicture(`${picUrl}${res.picURL}`);\n          img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n        }\n      }\n    };\n    getProd();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [params.productID]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={7} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n          <Card>\n            <Grid>\n              <Typography className={classes.prodName} variant=\"overline\" component=\"h4\">\n                {product?.name}\n              </Typography>\n            </Grid>\n            {product && <DetailedProductCard product={product} image={picture} />}\n            {product && <ProductInfoPanel product={product} />}\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductPage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, TextField } from '@material-ui/core';\n\nimport { registrationRequest, regViaGoogleRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n    button: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n);\n\ninterface IRegistrationForm {\n  regData?: Register;\n}\n\nconst RegistrationForm: React.FC<IRegistrationForm> = props => {\n  const classes = useStyles();\n\n  const newObject = (oldData: Register): Register => ({\n    login: oldData.login,\n    password: oldData.password,\n    firstName: oldData.firstName,\n    secondName: oldData.secondName,\n    phoneNumber: oldData.phoneNumber,\n    token: oldData.token,\n    email: oldData.email,\n  });\n\n  const [regData, setRegData] = React.useState<Register>({\n    login: '',\n    password: '',\n    firstName: '',\n    secondName: '',\n    email: '',\n    phoneNumber: '',\n    token: '',\n  });\n\n  if (props.regData) {\n    setRegData(props.regData);\n  }\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.login = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.password = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleEMailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.email = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.firstName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.secondName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.phoneNumber = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const registerButtonClicked = async () => {\n    if (!props.regData?.token) {\n      redirectTo(await registrationRequest(regData));\n    } else {\n      redirectTo(await regViaGoogleRequest(regData));\n    }\n  };\n\n  const redirectTo = (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.goToGoogleRegistrationPage:\n        window.location.replace('/Registration');\n        break;\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={regData.login}\n        onChange={handleLoginChange}\n        label=\"Login\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={regData.password}\n        onChange={handlePasswordChange}\n        label=\"Password\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"email-tf\"\n        className={classes.spaces}\n        value={regData.email}\n        onChange={handleEMailChange}\n        label=\"Email\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"first-name-tf\"\n        className={classes.spaces}\n        value={regData.firstName}\n        onChange={handleFirstNameChange}\n        label=\"First Name\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"second-name-tf\"\n        className={classes.spaces}\n        value={regData.secondName}\n        onChange={handleSecondNameChange}\n        label=\"Second Name\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"phone-tf\"\n        className={classes.spaces}\n        value={regData.phoneNumber}\n        onChange={handlePhoneChange}\n        label=\"Phone Number\"\n        variant=\"outlined\"\n      />\n      <Button\n        type=\"submit\"\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={registerButtonClicked}\n      >\n        Register\n      </Button>\n    </Grid>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { Typography, Card, Grid } from '@material-ui/core';\n\nimport RegistrationForm from 'src/Components/Parts/RegistrationForm';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport Register from 'src/Types/Register';\n\ninterface IRegistration {\n  regData?: Register;\n}\n\nconst RegistrationPage: React.FC<IRegistration> = props => (\n  <React.Fragment>\n    <script src=\"https://apis.google.com/js/platform.js\" async defer />\n    <NavigationBar />\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid xs={12} sm={9} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n        <Card style={{ padding: '35px' }} variant=\"outlined\">\n          <Typography variant=\"h4\" style={{ paddingBottom: '10px' }}>\n            Registration\n          </Typography>\n          <RegistrationForm regData={props.regData} />\n        </Card>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n);\n\nexport default RegistrationPage;\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport CategoryPage from './Components/Pages/CategoryPage';\nimport ProductsPage from './Components/Pages/ProductsPage';\nimport ProductPage from './Components/Pages/ProductPage';\nimport RegistrationPage from './Components/Pages/RegistrationPage';\n\nconst innerTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ef6c00',\n    },\n    secondary: {\n      main: '#FFF',\n    },\n  },\n});\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <ThemeProvider theme={innerTheme}>\n      <BrowserRouter>\n        <div>\n          <Route exact path=\"/\" component={ProductsPage} />\n          <Route path=\"/category/:categoryName\" component={CategoryPage} />\n          <Route path=\"/product/:productID\" component={ProductPage} />\n          <Route path=\"/registration\" component={RegistrationPage} />\n        </div>\n      </BrowserRouter>\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from 'src/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}