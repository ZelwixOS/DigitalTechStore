{"version":3,"sources":["Components/Parts/ProductCard.tsx","Requests/AccountRequests.ts","Types/Roles.ts","Requests/GetRequests.ts","Components/Parts/CategorySelector.tsx","Components/Parts/ErrorSnackBar.tsx","Components/Parts/LoginForm.tsx","Components/Parts/LoginModal.tsx","Components/Parts/UserMiniPanel.tsx","Components/Parts/NavigationBar.tsx","Components/Parts/SortBar.tsx","Components/Parts/FilterBar.tsx","Components/Parts/ProductListParams.tsx","Components/Pages/CategoryPage.tsx","Components/Pages/ProductsPage.tsx","Components/Parts/PriceLikeBuyCard.tsx","Components/Parts/DetailedProductCard.tsx","Components/Parts/ProductDescription.tsx","Components/Parts/ProductParameter.tsx","Components/Parts/ProductParams.tsx","Components/Parts/ReviewBlock.tsx","Components/Parts/ReviewForm.tsx","Components/Parts/ProductReviews.tsx","Components/Parts/ProductInfoPanel.tsx","Components/Pages/ProductPage.tsx","Components/Parts/RegistrationForm.tsx","Components/Pages/RegistrationPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","minHeight","marginBottom","spacing","details","flexDirection","content","flex","button","marginTop","marginLeft","marginRight","maxHeight","cover","maxWidth","margin","bold","fontWeight","rating","ProductCard","props","useState","isShown","setIsShown","picUrl","product","picURL","picture","setPicture","classes","useEffect","isMounted","img","Image","src","onerror","Card","variant","className","onMouseEnter","onMouseLeave","Grid","container","direction","alignItems","item","xs","sm","alt","name","Typography","vendorCode","CardContent","component","Link","href","id","color","price","Rating","value","mark","readOnly","justify","IconButton","aria-label","Button","serverAnswers","authViaGoogle","token","a","axios","post","data","logInRequest","logInData","registrationRequest","registrationData","regViaGoogleRequest","getRole","get","getUserInfo","Roles","guest","admin","customer","getRequest","url","getProducts","currentPage","itemsOnPage","sortType","sortparams","sortTypeParsing","type","reverse","getCategories","getProduct","getProductsOfCategory","categoryName","includes","split","paper","menu","padding","paddingRight","paddingLeft","paddingTop","paddingBottom","CategorySelector","React","open","setOpen","categories","setCategories","anchorRef","useRef","handleToggle","prevOpen","current","focus","res","getCategs","size","ref","aria-controls","undefined","aria-haspopup","onClick","endIcon","Popper","anchorEl","role","transition","disablePortal","Paper","ClickAwayListener","onClickAway","event","contains","target","MenuList","autoFocusItem","onKeyDown","key","preventDefault","Array","map","category","index","MenuItem","document","location","ErrorSnackBar","handleClose","Snackbar","anchorOrigin","vertical","horizontal","onClose","severity","AlertTitle","message","errors","er","spaces","LoginForm","login","password","rememberMe","loginData","setLoginData","setErrors","setMessage","handleGoogleLoginSuccess","googleData","getAuthResponse","googleRedirectTo","logInButtonClicked","redirectTo","response","code","window","replace","id_token","serverResult","redirectToRegistrationPage","profile","getBasicProfile","regData","email","getEmail","firstName","getGivenName","secondName","getFamilyName","history","pushState","TextField","onChange","label","FormControlLabel","control","Checkbox","checked","clientId","buttonText","onSuccess","cookiePolicy","buttons","LoginModal","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","UserMiniPanel","userInfo","setUserInfo","getUserInformation","userInformation","stringToColor","string","i","hash","length","charCodeAt","toString","substr","Fragment","avatar","Avatar","userName","sx","bgcolor","children","search","position","borderRadius","shape","backgroundColor","palette","common","white","width","breakpoints","up","inputRoot","inputInput","transitions","create","searchIcon","height","pointerEvents","justifyContent","logoButton","fontSize","fontFamily","NavigationBar","isAuth","setAuth","loaded","setLoaded","checkAuth","authres","AppBar","Toolbar","startIcon","InputBase","placeholder","input","inputProps","ButtonGroup","selector","formControl","minWidth","SortBar","handleOpen","handleSortTypeChanged","FormControl","InputLabel","Select","labelId","rightTextField","leftTextField","FilterBar","handleMinChange","setPrices","handleMaxChange","List","ListItem","Divider","gutterBottom","priceRange","pickedPrices","InputProps","startAdornment","InputAdornment","applyChanges","createProdParams","getItems","pickedPrice","productList","lastPage","handlePageChange","this","setPage","createURL","setSortType","filtersApplied","setInfo","prodList","maxPage","minPrice","maxPrice","checkPickedPrices","newValue","test","setParams","currPage","sort","isItNumber","parseInt","isNaN","params","URLSearchParams","delete","set","productGrid","categoryWord","filterPanel","CategoryPage","useParams","qParams","products","object","useLocalObservable","Pagination","count","page","ProductsPage","getProd","grid","PriceLikeBuyCard","image","card","DetailedProductCard","strinTechParams","productParameter","param","important","substring","paramString","prodName","typography","fontWeightBold","descriptionText","ProductDescription","productName","productDescription","line","borderBottom","divider","ProductParameter","ProductParams","reviewHeader","commentSection","ReviewBlock","review","username","cardPart","ReviewForm","setReview","multiline","rows","fullWidth","addReview","ProductReviews","reviews","setRerviews","newReview","newVar","push","pop","TabPanel","other","hidden","a11yProps","background","tabs","borderRight","ProductInfoPanel","setValue","Tabs","orientation","textColor","Tab","description","ProductPage","setProduct","productID","onload","RegistrationForm","newObject","oldData","phoneNumber","rerendered","setRererendered","setRegData","registerButtonClicked","newData","RegistrationPage","async","defer","style","state","innerTheme","createMuiTheme","primary","main","secondary","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gZAkBMA,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,UAAW,IACXC,aAAcL,EAAMM,QAAQ,IAE9BC,QAAS,CACPJ,QAAS,OACTK,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERC,OAAQ,CACNN,aAAcL,EAAMM,QAAQ,GAC5BM,UAAWZ,EAAMM,QAAQ,GACzBO,WAAYb,EAAMM,QAAQ,GAC1BQ,YAAad,EAAMM,QAAQ,GAC3BS,UAAW,IAEbC,MAAO,CACLC,SAAU,IACVF,UAAW,IACXG,OAAQlB,EAAMM,QAAQ,IAExBa,KAAM,CACJC,WAAY,KAEdC,OAAQ,CACNH,OAAQlB,EAAMM,QAAQ,SAqEbgB,EAhE6B,SAAAC,GAC1C,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAS,mCACf,EAA8BH,mBAAS,GAAD,OAAIG,GAAJ,OAAaJ,EAAMK,QAAQC,SAAjE,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAUlC,IAgBhB,OAdAmC,qBAAU,WACR,IAAIC,GAAY,EACVC,EAAM,IAAIC,MAOhB,OANAD,EAAIE,IAAJ,UAAaV,GAAb,OAAsBJ,EAAMK,QAAQC,QAEhCK,IACFC,EAAIG,QAAU,kBAAMP,EAAW,GAAD,OAAIJ,EAAJ,gBAGzB,WACLO,GAAY,MAKd,eAACK,EAAA,EAAD,CACEC,QAAQ,WACRC,UAAWT,EAAQ9B,KACnBwC,aAAc,kBAAMhB,GAAW,IAC/BiB,aAAc,kBAAMjB,GAAW,IAJjC,UAME,eAACkB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,SAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAxE,UACE,qBAAKT,UAAWT,EAAQhB,MAAOqB,IAAKP,EAASqB,IAAK5B,EAAMK,QAAQwB,OAChE,cAACC,EAAA,EAAD,CAAYb,QAAQ,QAApB,SAA6Bf,GAAWF,EAAMK,QAAQ0B,gBAExD,eAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGL,WAAS,EAACC,UAAU,SAA9C,UACE,cAACS,EAAA,EAAD,CAAad,UAAWT,EAAQvB,QAAhC,SACE,eAACmC,EAAA,EAAD,WACE,cAACS,EAAA,EAAD,CAAYG,UAAU,KAAKhB,QAAQ,KAAnC,SACE,cAACiB,EAAA,EAAD,CAAMC,KAAI,mBAAcnC,EAAMK,QAAQ+B,IAAMC,MAAM,UAAlD,SACGrC,EAAMK,QAAQwB,SAGnB,eAACC,EAAA,EAAD,CAAYG,UAAU,KAAKhB,QAAQ,KAAKC,UAAWT,EAAQb,KAA3D,cACII,EAAMK,QAAQiC,cAItB,cAACjB,EAAA,EAAD,CAAMH,UAAWT,EAAQX,OAAzB,SACE,cAACyC,EAAA,EAAD,CAAQV,KAAK,YAAYW,MAAOxC,EAAMK,QAAQoC,KAAMC,UAAQ,SAGhE,eAACrB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAzF,UACE,cAACN,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiB,EAAA,EAAD,CAAYC,aAAW,YAAY3B,UAAWT,EAAQrB,OAAtD,SACE,cAAC,IAAD,QAGJ,cAACiC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACmB,EAAA,EAAD,CAAQ5B,UAAWT,EAAQrB,OAAQ6B,QAAQ,WAA3C,0B,qICrGJ8B,EACO,EADPA,EAEM,EAFNA,EAGU,GAGVC,EAAa,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACbC,IAAMC,KAAK,0BAA2B,CAAEH,MAAOA,IADlC,uCAC4CI,MAD5C,2CAAH,sDAGbC,EAAY,uCAAG,WAAOC,GAAP,SAAAL,EAAA,sEACZC,IAAMC,KAAK,qBAAsBG,GADrB,uCACiCF,MADjC,2CAAH,sDAGZG,EAAmB,uCAAG,WAAOC,GAAP,SAAAP,EAAA,sEACnBC,IAAMC,KAAK,wBAAyBK,GADjB,uCACoCJ,MADpC,2CAAH,sDAGnBK,EAAmB,uCAAG,WAAOD,GAAP,SAAAP,EAAA,sEACnBC,IAAMC,KAAK,iCAAkCK,GAD1B,uCAC6CJ,MAD7C,2CAAH,sDAGnBM,GAAO,uCAAG,sBAAAT,EAAA,sEAAoCC,IAAMS,IAAI,qBAA9C,uCAAoEP,MAApE,2CAAH,qDAEPQ,GAAW,uCAAG,sBAAAX,EAAA,sEAAsCC,IAAMS,IAAI,mCAAhD,uCAAoFP,MAApF,2CAAH,qDCrBFS,GAND,CACZC,MAAO,QACPC,MAAO,QACPC,SAAU,Y,qGCCGC,G,iFAAf,WAA0BC,GAA1B,SAAAjB,EAAA,sEACgBC,IAAMS,IAAIO,GAD1B,uCACgCd,MADhC,4C,+BAIee,G,uFAAf,WAA2BC,EAAqBC,EAAqBC,EAAkBjC,GAAvF,iBAAAY,EAAA,6DACQsB,EAAsBC,GAAgBF,GACtCJ,EAFR,kCAEyCE,EAFzC,wBAEoEC,EAFpE,wBAE+FE,EAAWE,KAF1G,2BAEiIF,EAAWG,QAF5I,qBAEgKrC,EAAM,GAFtK,qBAEqLA,EAAM,IAF3L,SAGe4B,GAAWC,GAH1B,oF,+BAMeS,K,8EAAf,sBAAA1B,EAAA,sEACegB,GAAW,iBAD1B,oF,+BAIeW,G,iFAAf,WAA0BzC,GAA1B,SAAAc,EAAA,sEACegB,GAAW,gBAAD,OAAiB9B,IAD1C,oF,+BAIe0C,G,yFAAf,WACEC,EACAV,EACAC,EACAC,EACAjC,GALF,iBAAAY,EAAA,6DAOQsB,EAAsBC,GAAgBF,GACtCJ,EARR,6BAQoCY,EARpC,uBAQ+DV,EAR/D,wBAQ0FC,EAR1F,wBAQqHE,EAAWE,KARhI,2BAQuJF,EAAWG,QARlK,qBAQsLrC,EAAM,GAR5L,qBAQ2MA,EAAM,IARjN,SASe4B,GAAWC,GAT1B,oF,sBAYA,SAASM,GAAgBF,GACvB,OAAIA,EAASS,SAAS,WACb,CAAEN,KAAMH,EAASU,MAAM,KAAK,GAAIN,SAAS,GAEzC,CAAED,KAAMH,EAASU,MAAM,KAAK,GAAIN,SAAS,GAIrCT,IC3BT3F,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,QAEXsG,MAAO,CACL3F,YAAad,EAAMM,QAAQ,IAE7BoG,KAAM,CACJC,QAAS3G,EAAMM,QAAQ,IAEzB0C,KAAM,CACJ4D,aAAc5G,EAAMM,QAAQ,GAC5BuG,YAAa7G,EAAMM,QAAQ,GAC3BwG,WAAY9G,EAAMM,QAAQ,GAC1ByG,cAAe/G,EAAMM,QAAQ,SAgHpB0G,GA3GoB,WACjC,IAAMhF,EAAUlC,KAEhB,EAAwBmH,IAAMzF,UAAkB,GAAhD,mBAAO0F,EAAP,KAAaC,EAAb,KACA,EAAoCF,IAAMzF,SAAqB,IAA/D,mBAAO4F,EAAP,KAAmBC,EAAnB,KAEMC,EAAYL,IAAMM,OAA0B,MAE5CC,EAAe,WACnBL,GAAQ,SAAAM,GAAQ,OAAKA,MAmBvB,IAAMA,EAAWR,IAAMM,OAAOL,GAwB9B,OAvBAD,IAAMhF,WAAU,YACW,IAArBwF,EAASC,UAA6B,IAATR,GAAwC,OAAtBI,EAAUI,SAC3DJ,EAAUI,QAAQC,QAGpBF,EAASC,QAAUR,IAClB,CAACA,IAEJD,IAAMhF,WAAU,WACd,IAAIC,GAAY,EAShB,OARe,uCAAG,4BAAAuC,EAAA,sEACE0B,KADF,OACVyB,EADU,OAEZ1F,GACFmF,EAAcO,GAHA,2CAAH,oDAMfC,GAEO,WACL3F,GAAY,KAEb,IAGD,sBAAKO,UAAWT,EAAQ9B,KAAxB,UACGgH,EACC,cAAC7C,EAAA,EAAD,CACE7B,QAAQ,WACRsF,KAAK,QACLlE,MAAM,YACNmE,IAAKT,EACLU,gBAAed,EAAO,sBAAmBe,EACzCC,gBAAc,OACdC,QAASX,EACTY,QAAS,cAAC,KAAD,IARX,wBAaA,cAAC/D,EAAA,EAAD,CACE7B,QAAQ,WACRsF,KAAK,QACLlE,MAAM,YACNmE,IAAKT,EACLU,gBAAed,EAAO,sBAAmBe,EACzCC,gBAAc,OACdC,QAASX,EACTY,QAAS,cAAC,KAAD,IARX,wBAaF,cAACC,GAAA,EAAD,CAAQnB,KAAMA,EAAMoB,SAAUhB,EAAUI,QAASa,UAAMN,EAAWO,YAAU,EAACC,eAAa,EAA1F,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBC,YAvEP,SAACC,GACfvB,EAAUI,SAAWJ,EAAUI,QAAQoB,SAASD,EAAME,SAI1D5B,GAAQ,IAkEF,SACE,cAAC6B,GAAA,EAAD,CAAUC,cAAe/B,EAAMvD,GAAG,iBAAiBuF,UAhE7D,SAA2BL,GACR,QACbA,EAAMM,MACRN,EAAMO,iBACNjC,GAAQ,KA4D+E1E,UAAWT,EAAQ0E,KAApG,SACGU,aAAsBiC,OACrBjC,EAAWkC,KAAI,SAACC,EAAUC,GAAX,OACb,cAACC,GAAA,EAAD,CACEhH,UAAWT,EAAQgB,KAEnBmF,QAAS,WACPuB,SAASC,SAASjG,KAAlB,oBAAsC6F,EAASnG,OAJnD,SAOE,cAACC,EAAA,EAAD,CAAYb,QAAQ,KAAKgB,UAAU,KAAnC,SACG+F,EAASnG,QANPoG,kB,mIC7FVI,GAnBiC,SAAArI,GAC9C,IAAMsI,EAAc,WAClBtI,EAAM4F,SAAQ,IAGhB,OACE,cAAC2C,GAAA,EAAD,CAAUC,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAAY/C,KAAI,OAAE3F,QAAF,IAAEA,OAAF,EAAEA,EAAO2F,KAAMgD,QAASL,EAA/F,SACE,eAAC,KAAD,CAAUK,QAASL,EAAaM,SAAS,UAAzC,UACE,cAACC,GAAA,EAAD,iBAAa7I,QAAb,IAAaA,OAAb,EAAaA,EAAO8I,UACpB,oCACG9I,QADH,IACGA,OADH,EACGA,EAAO+I,OAAOhB,KAAI,SAACiB,EAAIpB,GAAL,OACjB,6BAAeoB,GAANpB,cCVfrJ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuK,OAAQ,CACN5J,UAAWZ,EAAMM,QAAQ,SAuJhBmK,GAlJa,WAC1B,IAAMzI,EAAUlC,KAEhB,EAAkCmH,IAAMzF,SAAgB,CAAEkJ,MAAO,GAAIC,SAAU,GAAIC,YAAY,IAA/F,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA4B7D,IAAMzF,SAAmB,IAArD,mBAAO8I,EAAP,KAAeS,EAAf,KACA,EAAwB9D,IAAMzF,UAAkB,GAAhD,mBAAO0F,EAAP,KAAaC,EAAb,KACA,EAA8BF,IAAMzF,SAAiB,IAArD,mBAAO6I,EAAP,KAAgBW,EAAhB,KAsBMC,EAAwB,uCAAG,WAAOC,GAAP,SAAAzG,EAAA,sDAC3ByG,IAAY,OACQA,QADR,IACQA,OADR,EACQA,EAAoCC,oBAExDC,EAAiBF,GAJU,2CAAH,sDASxBG,EAAkB,uCAAG,sBAAA5G,EAAA,kEACzB6G,EADyB,SACRzG,EAAagG,GADL,6EAAH,qDAIlBS,EAAU,uCAAG,WAAOC,GAAP,SAAA9G,EAAA,2DACT8G,EAASC,KADA,cAEVlH,EAFU,SAKVA,EALU,wBAGbmH,OAAO9B,SAAS+B,QAAQ,KAHX,kCAMbV,EAAWO,EAASlB,SACpBU,EAAUQ,EAASjB,QACnBnD,GAAQ,GARK,+DAAH,sDAaViE,EAAgB,uCAAG,WAAOF,GAAP,mBAAAzG,EAAA,6DACjBd,EADiB,OACZuH,QADY,IACZA,GADY,UACZA,EAAYC,yBADA,aACZ,EAA+BQ,SADnB,SAEIpH,EAAcZ,GAFlB,OAEjBiI,EAFiB,YAGfA,EAAaJ,KAHE,cAIhBlH,EAJgB,SAOhBA,EAPgB,SAUhBA,EAVgB,0BAKnBuH,EAA2BlI,EAAIuH,GALZ,mCAQnBO,OAAO9B,SAAS+B,QAAQ,KARL,oCAWnBV,EAAWY,EAAavB,SACxBU,EAAUa,EAAatB,QACvBnD,GAAQ,GAbW,iEAAH,sDAkBhB0E,EAA6B,SAAClI,EAAYuH,GAC9C,IAAMY,EAAUZ,EAAWa,kBACrBC,EAAoB,CACxBtB,MAAO,GACPC,SAAU,GACVsB,MAAOH,EAAQI,WACfC,UAAWL,EAAQM,eACnBC,WAAYP,EAAQQ,gBACpB9H,MAAOb,GAGT4I,QAAQC,UAAUR,EAAS,GAAI,iBAC/BP,OAAO9B,SAAS+B,QAAQ,kBAG1B,OACE,eAAC9I,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASoB,QAAQ,SAA3C,UACE,cAACuI,GAAA,EAAD,CACE9I,GAAG,WACHlB,UAAWT,EAAQwI,OACnBzG,MAAO8G,EAAUH,MACjBgC,SAjFoB,SAAC7D,GACzBiC,EAAa,CACXJ,MAAO7B,EAAME,OAAOhF,MACpB4G,SAAUE,EAAUF,SACpBC,WAAYC,EAAUD,cA8EpB+B,MAAM,QACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,cACHlB,UAAWT,EAAQwI,OACnBvE,KAAK,WACLlC,MAAO8G,EAAUF,SACjB+B,SAlFuB,SAAC7D,GAC5BiC,EAAa,CACXJ,MAAOG,EAAUH,MACjBC,SAAU9B,EAAME,OAAOhF,MACvB6G,WAAYC,EAAUD,cA+EpB+B,MAAM,WACNnK,QAAQ,aAEV,cAACoK,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEC,QAASlC,EAAUD,WACnB8B,SAtGqB,WAC7B5B,EAAa,CAAEJ,MAAOG,EAAUH,MAAOC,SAAUE,EAAUF,SAAUC,YAAaC,EAAUD,cAsGpFxH,KAAK,aACLQ,MAAM,YAGV+I,MAAM,cACNlK,UAAWT,EAAQwI,SAErB,cAAC5H,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,WAAxB,SACE,cAACG,EAAA,EAAD,CACE4B,KAAK,SACLxD,UAAWT,EAAQwI,OACnB5G,MAAM,UACNpB,QAAQ,YACR2F,QAASkD,EALX,qBAUF,cAACzI,EAAA,EAAD,CAAMH,UAAWT,EAAQwI,OAAQ3H,WAAS,EAACqB,QAAQ,SAAnD,SACE,cAACb,EAAA,EAAD,CAAYG,UAAU,MAAtB,2CAEF,cAACZ,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAAxB,SACE,cAAC,KAAD,CACE8I,SAAU,4EACVC,WAAW,qBACXC,UAAWjC,EACXkC,aAAc,yBAGlB,cAAC,GAAD,CAAe9C,QAASA,EAASC,OAAQA,EAAQpD,KAAMA,EAAMC,QAASA,QClJtErH,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmN,QAAS,CACPlM,OAAQlB,EAAMM,QAAQ,SA6Cb+M,GAxCc,WAC3B,IAAMrL,EAAUlC,KAChB,EAAwBmH,IAAMzF,UAAS,GAAvC,mBAAO0F,EAAP,KAAaC,EAAb,KAUA,OACE,gCACE,cAAC9C,EAAA,EAAD,CAAQ5B,UAAWT,EAAQoL,QAASxJ,MAAM,YAAYpB,QAAQ,WAAW2F,QAVrD,WACtBhB,GAAQ,IASN,mBAGA,eAACmG,GAAA,EAAD,CACEpG,KAAMA,EACNgD,QAXc,WAClB/C,GAAQ,IAWJoG,kBAAgB,qBAChBC,mBAAiB,2BAJnB,UAME,cAACC,GAAA,EAAD,CAAa9J,GAAG,qBAAhB,qBACA,cAAC+J,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBhK,GAAG,2BAAtB,SACE,cAAC,GAAD,QAGJ,cAACiK,GAAA,EAAD,UACE,eAAChL,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAAxB,UACE,cAACb,EAAA,EAAD,gCACA,cAACI,EAAA,EAAD,CAAMC,KAAK,gBAAX,mC,mBCQGmK,GA1DiB,WAC9B,MAAgCrM,qBAAhC,mBAAOsM,EAAP,KAAiBC,EAAjB,KAGA9L,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADA8L,EAAmB9L,GACZ,WACLA,GAAY,MAIhB,IA0BsBkB,EA1BhB4K,EAAkB,uCAAG,WAAO9L,GAAP,eAAAuC,EAAA,sEACKW,KADL,OACnB6I,EADmB,OAGrB/L,GACF6L,EAAYE,GAJW,2CAAH,sDAQxB,SAASC,EAAcC,GACrB,IACIC,EADAC,EAAO,EAGX,IAAKD,EAAI,EAAGA,EAAID,EAAOG,OAAQF,GAAK,EAClCC,EAAOF,EAAOI,WAAWH,KAAOC,GAAQ,GAAKA,GAG/C,IAAIzK,EAAQ,IAEZ,IAAKwK,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEzBxK,GAAS,aADMyK,GAAa,EAAJD,EAAU,KACdI,SAAS,KAAMC,QAAQ,GAG7C,OAAO7K,EAYT,OACE,cAAC,IAAM8K,SAAP,UACGZ,IACEA,EAASa,OACR,cAACC,GAAA,EAAD,CAAQzL,IAAK2K,EAASe,SAAUxM,IAAG,UAjD5B,iCAiD4B,OAAcyL,EAASa,UAE1D,cAACC,GAAA,EAAD,iBAfcxL,EAeW0K,EAASe,SAdjC,CACLC,GAAI,CACFC,QAASb,EAAc9K,IAEzB4L,SAAS,GAAD,OAAK5L,EAAK,YC7BlBtD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmN,QAAS,CACPlM,OAAQlB,EAAMM,QAAQ,IAExB2O,OAAO,aACLC,SAAU,WACVC,aAAcnP,EAAMoP,MAAMD,aAC1BE,gBAAiBrP,EAAMsP,QAAQC,OAAOC,MACtC1O,YAAad,EAAMM,QAAQ,GAC3BO,WAAY,EACZ4O,MAAO,QACNzP,EAAM0P,YAAYC,GAAG,MAAQ,CAC5B9O,WAAYb,EAAMM,QAAQ,GAC1BmP,MAAO,SAGXG,UAAW,CACThM,MAAO,QAETiM,WAAW,aACTlJ,QAAS3G,EAAMM,QAAQ,EAAG,EAAG,EAAG,GAEhCuG,YAAY,cAAD,OAAgB7G,EAAMM,QAAQ,GAA9B,OACXkI,WAAYxI,EAAM8P,YAAYC,OAAO,SACrCN,MAAO,QACNzP,EAAM0P,YAAYC,GAAG,MAAQ,CAC5BF,MAAO,SAGXO,WAAY,CACVpM,MAAO,OACP+C,QAAS3G,EAAMM,QAAQ,EAAG,GAC1B2P,OAAQ,OACRf,SAAU,WACVgB,cAAe,OACf/P,QAAS,OACT4C,WAAY,SACZoN,eAAgB,UAElBC,WAAY,CACVC,SAAU,OACVC,WAAY,gBAiFHC,GA5EiB,WAC9B,IAAMvO,EAAUlC,KAEhB,EAA0B0B,oBAAkB,GAA5C,mBAAOgP,EAAP,KAAeC,EAAf,KACA,EAA4BjP,oBAAkB,GAA9C,mBAAOkP,EAAP,KAAeC,EAAf,KAEA1O,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADA0O,EAAU1O,GACH,WACLA,GAAY,MAIhB,IAAM0O,EAAS,uCAAG,WAAO1O,GAAP,eAAAuC,EAAA,sEACMS,KADN,OACV2L,EADU,OAGZ3O,IAEAuO,EADEI,IAAYxL,GAAMC,OAKtBqL,GAAU,IATI,2CAAH,sDAaf,OACE,eAAC,IAAMjC,SAAP,WACE,cAACoC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACnO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACmB,EAAA,EAAD,CACE7B,QAAQ,OACRsF,KAAK,QACLlE,MAAM,YACNF,KAAK,IACLjB,UAAWT,EAAQoO,WACnBY,UAAW,cAAC,IAAD,IANb,oBAWF,cAACpO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,MAEF,cAACN,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,sBAAKT,UAAWT,EAAQiN,OAAxB,UACE,qBAAKxM,UAAWT,EAAQgO,WAAxB,SACE,cAAC,IAAD,MAEF,cAACiB,EAAA,EAAD,CACEC,YAAY,SACZlP,QAAS,CACP9B,KAAM8B,EAAQ4N,UACduB,MAAOnP,EAAQ6N,YAEjBuB,WAAY,CAAE,aAAc,iBAIlC,cAACxO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACmO,EAAA,EAAD,CAAa7O,QAAQ,WAAWoB,MAAM,YAAYkE,KAAK,QAAQ1D,aAAW,4BAA1E,UACE,cAACC,EAAA,EAAD,CAAQ2M,UAAW,cAAC,IAAD,IAAnB,sBACA,cAAC3M,EAAA,EAAD,CAAQ2M,UAAW,cAAC,IAAD,IAAnB,uBAGJ,cAACpO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACGwN,IAAWF,EAAS,cAAC,GAAD,IAAoB,cAAC,GAAD,YAI/C,cAACO,EAAA,EAAD,Q,sEC/HAjR,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqR,SAAU,CACRzQ,WAAYb,EAAMM,QAAQ,IAE5BiR,YAAa,CACXrQ,OAAQlB,EAAMM,QAAQ,GACtBkR,SAAU,UA4DDC,GAlDqB,SAAAlQ,GAClC,IAAMS,EAAUlC,KAChB,EAAwB0B,oBAAS,GAAjC,mBAAO0F,EAAP,KAAaC,EAAb,KAEMuK,EAAa,WACjBvK,GAASD,IAGLyK,EAAwB,SAAC9I,GAC7BtH,EAAMmL,SAAS7D,EAAME,OAAOhF,QAG9B,OACE,cAACnB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACE,cAACV,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACE,cAACI,EAAA,EAAD,CAAMH,UAAWT,EAAQsP,SAAUzO,WAAS,EAACE,WAAW,SAASmB,QAAQ,aAAzE,SACE,eAAC0N,GAAA,EAAD,CAAanP,UAAWT,EAAQuP,YAAhC,UACE,cAACM,GAAA,EAAD,CAAYlO,GAAG,uCAAf,qBACA,cAAC,IAAD,UACG,kBACC,eAACmO,GAAA,EAAD,CACEC,QAAQ,uCACRpO,GAAG,iCACHuD,KAAMA,EACNiB,QAASuJ,EACT3N,MAAOxC,EAAM0E,KACbyG,SAAUiF,EANZ,UAQE,eAAClI,GAAA,EAAD,CAAU1F,MAAO,QAAjB,UACE,cAAC,KAAD,CAAmBsM,SAAS,UAD9B,YAGA,eAAC5G,GAAA,EAAD,CAAU1F,MAAO,gBAAjB,UACE,cAAC,KAAD,CAAiBsM,SAAS,UAD5B,YAGA,eAAC5G,GAAA,EAAD,CAAU1F,MAAO,OAAjB,UACE,cAAC,KAAD,CAAmBsM,SAAS,UAD9B,WAGA,eAAC5G,GAAA,EAAD,CAAU1F,MAAO,eAAjB,UACE,cAAC,KAAD,CAAiBsM,SAAS,UAD5B,2B,wCCrDZvQ,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX+R,eAAgB,CACdnR,WAAYb,EAAMM,QAAQ,IAE5B2R,cAAe,CACbnR,YAAad,EAAMM,QAAQ,SAuFlB4R,GA3EyB,SAAA3Q,GACtC,IAAM4Q,EAAkB,SAACtJ,GACvBtH,EAAM6Q,UAAU,EAAGvJ,EAAME,OAAOhF,QAG5BsO,EAAkB,SAACxJ,GACvBtH,EAAM6Q,UAAU,EAAGvJ,EAAME,OAAOhF,QAG5B/B,EAAUlC,KAEhB,OACE,cAAC8C,EAAA,EAAD,UACE,cAACL,EAAA,EAAD,CAAMC,QAAQ,WAAd,SACE,eAAC8P,GAAA,EAAD,CAAM9O,UAAU,MAAMY,aAAW,uBAAjC,UACE,cAACmO,GAAA,EAAD,UACE,cAAClP,EAAA,EAAD,CAAYb,QAAQ,KAAKgB,UAAU,KAAnC,uBAIF,cAACgP,GAAA,EAAD,IACA,cAACD,GAAA,EAAD,UACE,cAAClP,EAAA,EAAD,CAAYM,GAAG,eAAe8O,cAAY,EAA1C,qBAIF,eAACF,GAAA,EAAD,WACE,cAAC,IAAD,UACG,kBACC,cAAC9F,GAAA,EAAD,CACE9I,GAAG,WACHnB,QAAQ,WACR0O,YAAa3P,EAAMmR,WAAW,GAAGlE,WACjC1G,KAAK,QACL7B,KAAK,SACLxD,UAAWT,EAAQiQ,cACnBlO,MAAOxC,EAAMoR,aAAa,GAC1BjG,SAAUyF,EACVS,WAAY,CACVC,eAAgB,cAACC,GAAA,EAAD,CAAgB5D,SAAS,QAAzB,qBAKxB,cAAC,IAAD,UACG,kBACC,cAACzC,GAAA,EAAD,CACE9I,GAAG,WACHnB,QAAQ,WACR0O,YAAa3P,EAAMmR,WAAW,GAAGlE,WACjC1G,KAAK,QACL7B,KAAK,SACLxD,UAAWT,EAAQgQ,eACnBjO,MAAOxC,EAAMoR,aAAa,GAC1BjG,SAAU2F,EACVO,WAAY,CACVC,eAAgB,cAACC,GAAA,EAAD,CAAgB5D,SAAS,QAAzB,wBAM1B,cAACsD,GAAA,EAAD,IACA,cAACD,GAAA,EAAD,UACE,cAAC3P,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAAxB,SACE,cAACG,EAAA,EAAD,CAAQ7B,QAAQ,YAAYoB,MAAM,UAAUuE,QAAS5G,EAAMwR,aAA3D,+BC3Ed,SAASC,GAAiBC,GA8GxB,MA7G4B,CAC1BrN,YAAa,EACbE,SAAU,QACVoN,YAAa,CAAC,EAAG,GACjBC,YAAa,GACbC,SAAU,EACVV,WAAY,CAAC,EAAG,GAEhBW,iBAR0B,SAQTxK,EAAmC9E,GAClDuP,KAAKC,QAAQxP,GACbkP,KAGFM,QAb0B,SAalBxP,GACFA,GAASuP,KAAKF,UAAYrP,EAAQ,GAAe,IAAVA,EACzCuP,KAAK1N,YAAc7B,EAEnBuP,KAAK1N,YAAc,EAErB0N,KAAKE,aAGPC,YAtB0B,SAsBdxN,GACNqN,KAAKxN,WAAaG,IACpBqN,KAAKC,QAAQ,GACbD,KAAKxN,SAAWG,EAChBqN,KAAKE,YACLP,MAIJS,eA/B0B,WAgCxBJ,KAAKC,QAAQ,GACbD,KAAKE,YACLP,KAGFU,QArC0B,SAqClBC,EAAqBC,EAAiBC,EAAkBC,GAC9DT,KAAKH,YAAcS,EACnBN,KAAKF,SAAWS,EAChBP,KAAKZ,WAAa,CAACoB,EAAUC,GACD,IAAxBT,KAAKJ,YAAY,KACnBI,KAAKJ,YAAY,GAAKY,GAEI,IAAxBR,KAAKJ,YAAY,KACnBI,KAAKJ,YAAY,GAAKa,IAI1BC,kBAjD0B,SAiDR5F,EAAW6F,IACT,QAEHC,KAAKD,KADD,WACmCC,KAAKD,IAA+B,IAAN7F,GAAiB,IAANA,IAE3FkF,KAAKJ,YAAY9E,GADU,KAAxB6F,EACmB,EAEAA,IAK5BE,UA7D0B,SA6DhBC,EAAmBN,EAAmBC,EAAmBM,GAC7Df,KAAKgB,WAAWR,IAClBR,KAAKU,kBAAkB,EAAGF,GAExBR,KAAKgB,WAAWP,IAClBT,KAAKU,kBAAkB,EAAGD,GAEf,OAATM,GAAiBA,IAASf,KAAKxN,WACjCwN,KAAKxN,SAAWuO,GAEdf,KAAKgB,WAAWF,IAClBd,KAAKC,QAAQgB,SAASH,IAExBd,KAAKE,YACLP,KAGFqB,WA9E0B,SA8EfvQ,GACT,OAAKyQ,MAAMD,SAASxQ,KAOtByP,UAtF0B,WAuFxB,IAAMiB,EAAS,IAAIC,gBAAgB/K,SAASsF,QACnB,IAArBqE,KAAK1N,YACP6O,EAAOE,OAAO,QAEdF,EAAOG,IAAI,OAAQtB,KAAK1N,YAAY4I,YAEhB,UAAlB8E,KAAKxN,SACP2O,EAAOE,OAAO,QAEdF,EAAOG,IAAI,OAAQtB,KAAKxN,UAEtBwN,KAAKJ,YAAY,KAAOI,KAAKZ,WAAW,IAAMY,KAAKJ,YAAY,KAAOI,KAAKZ,WAAW,IACxF+B,EAAOE,OAAO,YACdF,EAAOE,OAAO,cAEdF,EAAOG,IAAI,WAAYtB,KAAKJ,YAAY,GAAG1E,YAC3CiG,EAAOG,IAAI,WAAYtB,KAAKJ,YAAY,GAAG1E,aAE7CjC,QAAQC,UAAU,GAAI,WAAtB,WAAsCiI,EAAOjG,eC5GnD,IAAM1O,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4U,YAAa,CACXhO,YAAa7G,EAAMM,QAAQ,GAC3BwG,WAAY9G,EAAMM,QAAQ,GAC1ByG,cAAe/G,EAAMM,QAAQ,IAE/BwU,aAAc,CACZ1T,WAAY,IACZuF,QAAS3G,EAAMM,QAAQ,IAEzByU,YAAa,CACXjO,WAAY9G,EAAMM,QAAQ,SAgGjB0U,GA3FgB,WAC7B,IAAMP,EAAwBQ,cAExBtP,EAAW,uCAAG,WAAOzD,GAAP,iBAAAuC,EAAA,sEACA4B,GAAsBoO,EAAOnO,aAAc1B,EAAKgB,YAAa,EAAGhB,EAAKkB,SAAUlB,EAAKsO,aADpF,OACZtL,EADY,QAEA,IAAd1F,QAAyC+F,IAAlBL,EAAI/E,YACvBqS,EAAU,IAAIR,gBAAgB/K,SAASsF,QAC7CrK,EAAK+O,QAAQ/L,EAAI/E,UAAUsS,SAAUvN,EAAIiM,QAASjM,EAAIkM,SAAUlM,EAAImM,UACpEnP,EAAKuP,UAAUe,EAAQ/P,IAAI,QAAS+P,EAAQ/P,IAAI,YAAa+P,EAAQ/P,IAAI,YAAa+P,EAAQ/P,IAAI,UALlF,2CAAH,sDASXiQ,EAASpC,GAAgB,sBAAC,4BAAAvO,EAAA,sEACZ4B,GAAsBoO,EAAOnO,aAAc1B,EAAKgB,YAAa,EAAGhB,EAAKkB,SAAUlB,EAAKsO,aADxE,OACxBtL,EADwB,OAE9BhD,EAAK+O,QAAQ/L,EAAI/E,UAAUsS,SAAUvN,EAAIiM,QAASjM,EAAIkM,SAAUlM,EAAImM,UAFtC,4CAI1BnP,EAAOyQ,aAAmB,kBAAMD,KAEtCnT,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAyD,EAAYzD,GACL,WACLA,GAAY,MAIhB,IAAMF,EAAUlC,KAChB,OACE,eAAC,IAAM4O,SAAP,WACE,cAAC,GAAD,IACA,cAAC9L,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAA5D,SACE,cAACH,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACF,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAAxF,SACE,eAACD,EAAA,EAAD,CAAMI,MAAI,EAACF,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAA5E,UACE,cAACD,EAAA,EAAD,UACE,cAACS,EAAA,EAAD,CAAYZ,UAAWT,EAAQ8S,aAActS,QAAQ,KAAKgB,UAAU,KAApE,SACGiR,EAAOnO,iBAGZ,cAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAASnB,WAAW,SAA5C,SACE,cAAC,IAAD,UAAW,kBAAM,cAAC,GAAD,CAASkD,KAAMrB,EAAKkB,SAAU4G,SAAU9H,EAAK6O,mBAEhE,eAAC7Q,EAAA,EAAD,CAAMI,MAAI,EAACF,UAAU,MAAMoB,QAAQ,SAASrB,WAAS,EAArD,UACE,cAAC,IAAD,UACG,kBACC,cAACD,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACP,UAAWT,EAAQ+S,YAA7C,SACE,cAAC,GAAD,CACErC,WAAY9N,EAAK8N,WACjBC,aAAc/N,EAAKsO,YACnBd,UAAWxN,EAAKoP,kBAChBjB,aAAcnO,EAAK8O,sBAK3B,eAAC9Q,EAAA,EAAD,CAAMH,UAAWT,EAAQ6S,YAAa5R,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACH,WAAS,EAACC,UAAU,SAA9E,UACE,cAAC,IAAD,UACG,kBACC,cAACF,EAAA,EAAD,UACGgC,EAAKuO,YAAY7J,KAAI,SAAA1H,GAAO,OAC3B,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQ+B,YAKpD,cAACf,EAAA,EAAD,CAAMsB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAApD,SACE,cAAC,IAAD,UACG,kBACC,cAAC,IAAM6L,SAAP,UACG9J,EAAKwO,SAAW,GACf,cAACkC,EAAA,EAAD,CACEC,MAAO3Q,EAAKwO,SACZoC,KAAM5Q,EAAKgB,YACX8G,SAAU9H,EAAKyO,iBACf7Q,QAAQ,WACRoB,MAAM,UACNwL,MAAM,oCClG5BtP,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4U,YAAa,CACXhO,YAAa7G,EAAMM,QAAQ,GAC3BwG,WAAY9G,EAAMM,QAAQ,GAC1ByG,cAAe/G,EAAMM,QAAQ,IAE/ByU,YAAa,CACXjO,WAAY9G,EAAMM,QAAQ,SA2FjBmV,GAtFgB,WAC7B,IAAMC,EAAO,uCAAG,WAAOxT,GAAP,iBAAAuC,EAAA,sEACIkB,GAAYf,EAAKgB,YAAa,EAAGhB,EAAKkB,SAAUlB,EAAKsO,aADzD,OACRtL,EADQ,OAEV1F,IACIuS,EAAS,IAAIC,gBAAgB/K,SAASsF,QAC5CrK,EAAK+O,QAAQ/L,EAAI/E,UAAW+E,EAAIiM,QAASjM,EAAIkM,SAAUlM,EAAImM,UAC3DnP,EAAKuP,UAAUM,EAAOtP,IAAI,QAASsP,EAAOtP,IAAI,YAAasP,EAAOtP,IAAI,YAAasP,EAAOtP,IAAI,UALlF,2CAAH,sDASPiQ,EAASpC,GAAgB,sBAAC,4BAAAvO,EAAA,sEACZkB,GAAYf,EAAKgB,YAAa,EAAGhB,EAAKkB,SAAUlB,EAAKsO,aADzC,OACxBtL,EADwB,OAE9BhD,EAAK+O,QAAQ/L,EAAI/E,UAAW+E,EAAIiM,QAASjM,EAAIkM,SAAUlM,EAAImM,UAF7B,4CAK1BnP,EAAOyQ,aAAmB,kBAAMD,KAEtCnT,qBAAU,WACR,IAAIC,GAAY,EAEhB,OADAwT,EAAQxT,GACD,WACLA,GAAY,MAIhB,IAAMF,EAAUlC,KAEhB,OACE,eAAC,IAAM4O,SAAP,WACE,cAAC,GAAD,IACA,cAAC9L,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAA5D,SACE,cAACH,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACF,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAAxF,SACE,eAACD,EAAA,EAAD,CAAMI,MAAI,EAACF,UAAU,SAASoB,QAAQ,SAASrB,WAAS,EAAxD,UACE,cAACD,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAASnB,WAAW,SAA5C,SACE,cAAC,IAAD,UAAW,kBAAM,cAAC,GAAD,CAASkD,KAAMrB,EAAKkB,SAAU4G,SAAU9H,EAAK6O,mBAEhE,eAAC7Q,EAAA,EAAD,CAAMI,MAAI,EAACF,UAAU,MAAMoB,QAAQ,SAASrB,WAAS,EAArD,UACE,cAAC,IAAD,UACG,kBACC,cAACD,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACP,UAAWT,EAAQ+S,YAA7C,SACE,cAAC,GAAD,CACErC,WAAY9N,EAAK8N,WACjBC,aAAc/N,EAAKsO,YACnBd,UAAWxN,EAAKoP,kBAChBjB,aAAcnO,EAAK8O,sBAK3B,eAAC9Q,EAAA,EAAD,CAAMH,UAAWT,EAAQ6S,YAAa5R,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACH,WAAS,EAACC,UAAU,SAA9E,UACE,cAAC,IAAD,UACG,kBACC,cAACF,EAAA,EAAD,UACGgC,EAAKuO,YAAY7J,KAAI,SAAA1H,GAAO,OAC3B,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQ+B,YAKpD,cAACf,EAAA,EAAD,CAAMsB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAApD,SACE,cAAC,IAAD,UACG,kBACC,cAAC,IAAM6L,SAAP,UACG9J,EAAKwO,SAAW,GACf,cAACkC,EAAA,EAAD,CACEC,MAAO3Q,EAAKwO,SACZoC,KAAM5Q,EAAKgB,YACX8G,SAAU9H,EAAKyO,iBACf7Q,QAAQ,WACRoB,MAAM,UACNwL,MAAM,oCChF5BtP,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,QAAS,OACTC,UAAW,IACXc,OAAQlB,EAAMM,QAAQ,IAExBqV,KAAM,CACJvV,UAAW,IAEbG,QAAS,CACPJ,QAAS,OACTK,cAAe,UAEjBC,QAAS,CACPC,KAAM,YAERM,MAAO,CACLC,SAAU,IACVF,UAAW,IACXG,OAAQlB,EAAMM,QAAQ,IAExBa,KAAM,CACJC,WAAY,KAEdC,OAAQ,CACNH,OAAQlB,EAAMM,QAAQ,SAuCbsV,GAlCuC,SAAArU,GACpD,IAAMS,EAAUlC,KAEhB,OACE,cAACyC,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWT,EAAQ9B,KAA5C,SACE,eAAC0C,EAAA,EAAD,CAAMsB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAACC,UAAU,SAA/D,UACE,eAACF,EAAA,EAAD,CAAMH,UAAWT,EAAQ2T,KAAM9S,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAArF,UACE,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACH,WAAS,EAACC,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASE,GAAI,GAAIC,GAAI,EAAzF,UACE,cAACG,EAAA,EAAD,CAAYG,UAAU,KAAKhB,QAAQ,KAAKC,UAAWT,EAAQb,KAA3D,oBAGA,eAACkC,EAAA,EAAD,CAAYO,MAAM,UAAUJ,UAAU,KAAKhB,QAAQ,KAAKC,UAAWT,EAAQb,KAA3E,cACII,EAAMsC,YAGZ,eAACjB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGL,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAAhF,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGL,WAAS,EAACqB,QAAQ,aAA5C,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,YAAvB,SACE,cAAC,IAAD,QAGJ,cAACxB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACmB,EAAA,EAAD,CAAQT,MAAM,UAAUpB,QAAQ,YAAhC,yBAMN,cAACsB,EAAA,EAAD,CAAQrB,UAAWT,EAAQX,OAAQ+B,KAAK,YAAYW,MAAOxC,EAAMF,OAAQ4C,UAAQ,UC7DnFnE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4V,MAAO,CACL5U,SAAU,IACVF,UAAW,IACXG,OAAQlB,EAAMM,QAAQ,IAExBwV,KAAM,CACJnP,QAAS3G,EAAMM,QAAQ,SAqCdyV,GAhC6C,SAAAxU,GAAU,IAAD,QAC7DS,EAAUlC,KAWVkW,EAVc,WAAe,IAAD,EAC5B7H,EAAS,GAMb,OALA,UAAA5M,EAAMK,eAAN,SAAeqU,iBAAiB3M,KAAI,SAAA4M,GAC9BA,EAAMC,YACRhI,GAAM,UAAO+H,EAAM9S,KAAb,YAAqB8S,EAAMnS,MAA3B,UAGHoK,EAAOiI,UAAU,EAAGjI,EAAOG,OAAS,GAGrB+H,GACxB,OACE,eAAC9T,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWT,EAAQ8T,KAA5C,UACE,eAAClT,EAAA,EAAD,CAAME,UAAU,MAAMoB,QAAQ,SAASrB,WAAS,EAAhD,UACE,eAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAA3F,UACE,qBAAKJ,UAAWT,EAAQ6T,MAAOxT,IAAKd,EAAMsU,QAD5C,mBAEStU,EAAMK,eAFf,aAES,EAAe0B,cAExB,eAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAACG,EAAA,EAAD,CAAYb,QAAQ,KAAKgB,UAAU,KAAnC,SACGwS,IAEH,cAAC,GAAD,CAAkBnS,MAAK,UAAEtC,EAAMK,eAAR,aAAE,EAAeiC,MAAOxC,OAAM,UAAEE,EAAMK,eAAR,aAAE,EAAeoC,KAAML,GAAE,UAAEpC,EAAMK,eAAR,aAAE,EAAe+B,WAGnG,cAACf,EAAA,EAAD,CAAME,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,Q,8BC5CpE/C,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqW,SAAU,CACRjG,SAAU,IAAMrQ,EAAMuW,WAAWlG,SACjCjP,WAAYpB,EAAMuW,WAAWC,gBAE/BC,gBAAiB,CACfvV,OAAQlB,EAAMM,QAAQ,SAmBboW,GAd2C,SAAAnV,GACxD,IAAMS,EAAUlC,KAChB,OACE,eAAC8C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,SAASmB,QAAQ,SAA/D,UACE,cAACb,EAAA,EAAD,CAAYZ,UAAWT,EAAQsU,SAAU9T,QAAQ,WAAjD,iCACoBjB,EAAMoV,eAE1B,cAAC/T,EAAA,EAAD,CAAMH,UAAWT,EAAQyU,gBAAiB5T,WAAS,EAACqB,QAAQ,aAA5D,SACE,cAACb,EAAA,EAAD,CAAYb,QAAQ,QAApB,SAA6BjB,EAAMqV,2BCnBrC9W,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4W,KAAM,CACJC,aAAa,aAAD,OAAe9W,EAAMsP,QAAQyH,SACzCpQ,QAAS3G,EAAMM,QAAQ,EAAG,EAAG,EAAG,SAmBvB0W,GAduC,SAAAzV,GACpD,IAAMS,EAAUlC,KAChB,OACE,eAAC8C,EAAA,EAAD,CAAME,UAAU,MAAMD,WAAS,EAACE,WAAW,SAASmB,QAAQ,SAASzB,UAAWT,EAAQ6U,KAAxF,UACE,cAACjU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACG,EAAA,EAAD,CAAYb,QAAQ,QAApB,SAA6BjB,EAAM2U,MAAM9S,SAE3C,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACG,EAAA,EAAD,CAAYb,QAAQ,QAApB,SAA6BjB,EAAM2U,MAAMnS,cCf3CjE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqW,SAAU,CACRjG,SAAU,IAAMrQ,EAAMuW,WAAWlG,SACjCjP,WAAYpB,EAAMuW,WAAWC,qBAmBpBS,GAdiC,SAAA1V,GAAU,IAAD,EACjDS,EAAUlC,KAChB,OACE,eAAC8C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,SAASmB,QAAQ,SAA/D,UACE,cAACb,EAAA,EAAD,CAAYZ,UAAWT,EAAQsU,SAAU9T,QAAQ,WAAjD,iCACoBjB,EAAMoV,eAF5B,UAIGpV,EAAMkT,cAJT,aAIG,EAAcnL,KAAI,SAAC4M,EAAO1M,GAAR,OACjB,cAAC,GAAD,CAAkB0M,MAAOA,GAAY1M,UCjBvC1J,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4O,SAAU,CACRwB,SAAU,IAAMrQ,EAAMuW,WAAWlG,SACjCjP,WAAYpB,EAAMuW,WAAWC,gBAE/BU,aAAc,CACZvQ,QAAS3G,EAAMM,QAAQ,GACvBwW,aAAa,aAAD,OAAe9W,EAAMsP,QAAQyH,UAE3CI,eAAgB,CACd/W,UAAW,MACXuG,QAAS3G,EAAMM,QAAQ,IAEzBJ,KAAM,CACJgB,OAAQlB,EAAMM,QAAQ,EAAG,EAAG,EAAG,SAwBtB8W,GAnBgC,SAAA7V,GAC7C,IAAMS,EAAUlC,KAChB,OACE,cAACyC,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWT,EAAQ9B,KAA5C,SACE,eAAC0C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIJ,WAAS,EAACC,UAAU,SAASC,WAAW,aAAamB,QAAQ,aAAhF,UACE,eAACtB,EAAA,EAAD,CAAMH,UAAWT,EAAQkV,aAAcrU,WAAS,EAACC,UAAU,MAAMC,WAAW,SAASmB,QAAQ,aAA7F,UACE,cAACtB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACG,EAAA,EAAD,CAAYZ,UAAWT,EAAQ6M,SAA/B,SAA0CtN,EAAM8V,OAAOC,aAEzD,cAAC1U,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACY,EAAA,EAAD,CAAQC,MAAOxC,EAAM8V,OAAOrT,KAAMC,UAAQ,SAG9C,cAACZ,EAAA,EAAD,CAAYZ,UAAWT,EAAQmV,eAA/B,SAAgD5V,EAAM8V,OAAOhN,gBCpC/DvK,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJgB,OAAQlB,EAAMM,QAAQ,EAAG,EAAG,EAAG,IAEjCiX,SAAU,CACR5Q,QAAS3G,EAAMM,QAAQ,SA2DdkX,GA7C2B,SAAAjW,GACxC,IAAMS,EAAUlC,KAEhB,EAA4B0B,mBAAwB,CAAE6I,QAAS,GAAIrG,KAAM,IAAzE,mBAAOqT,EAAP,KAAeI,EAAf,KAeA,OACE,cAAClV,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWT,EAAQ9B,KAA5C,SACE,eAAC0C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIJ,WAAS,EAACC,UAAU,SAASC,WAAW,SAASmB,QAAQ,SAA5E,UACE,cAACtB,EAAA,EAAD,CAAMH,UAAWT,EAAQuV,SAAU1U,WAAS,EAACC,UAAU,MAAMC,WAAW,SAASmB,QAAQ,WAAzF,SACE,cAACJ,EAAA,EAAD,CAAQC,MAAOsT,EAAOrT,KAAM0I,SAlBjB,SAAC7D,EAAgB9E,GAClC0T,EAAU,CAAEpN,QAASgN,EAAOhN,QAASrG,KAAMD,SAmBvC,cAAC0I,GAAA,EAAD,CACE9I,GAAG,4BACHgJ,MAAM,SACN+K,WAAS,EACTC,KAAM,EACNzG,YAAY,yBACZ1O,QAAQ,WACRuB,MAAOsT,EAAOhN,QACdqC,SAzBc,SAAC7D,GACrB,IAAM9E,EAAQ8E,EAAME,OAAOhF,MAC3B0T,EAAU,CAAEpN,QAAStG,EAAOC,KAAMqT,EAAOrT,QAwBnC4T,WAAS,IAEX,cAAChV,EAAA,EAAD,CAAMH,UAAWT,EAAQuV,SAAU1U,WAAS,EAACE,WAAW,SAASmB,QAAQ,WAAzE,SACE,cAACG,EAAA,EAAD,CAAQT,MAAM,UAAUpB,QAAQ,YAAY2F,QAxBrC,WAEb5G,EAAMsW,UAAU,CAAExN,QAASgN,EAAOhN,QAASrG,KAAMqT,EAAOrT,KAAMsT,SAAU,QAsBlE,4BCpDJxX,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqW,SAAU,CACRjG,SAAU,IAAMrQ,EAAMuW,WAAWlG,SACjCjP,WAAYpB,EAAMuW,WAAWC,qBA+BpBsB,GA1BmC,SAAAvW,GAChD,IAAMS,EAAUlC,KAChB,EAA+B0B,mBAAmBD,EAAMwW,SAAxD,mBAAOA,EAAP,KAAgBC,EAAhB,KASA,OACE,eAACpV,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,SAASmB,QAAQ,SAA/D,UACE,cAACb,EAAA,EAAD,CAAYZ,UAAWT,EAAQsU,SAAU9T,QAAQ,WAAjD,8BACiBjB,EAAMoV,eAEvB,eAAC/T,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIH,UAAU,SAASD,WAAS,EAACqB,QAAQ,SAAxD,UACE,cAAC,GAAD,CAAY2T,UAdA,SAACI,GAEjB,IADA,IAAMC,EAAmB,GAClBH,EAAQzJ,OAAS,GACtB4J,EAAOC,KAAKJ,EAAQK,OAEtBF,EAAOC,KAAKF,GACZD,EAAYE,EAAOhS,cAOjB,OAEG6R,QAFH,IAEGA,OAFH,EAEGA,EAASzO,KAAI,SAAC+N,EAAQ7N,GAAT,OACZ,cAAC,GAAD,CAAa6N,OAAQA,GAAa7N,a,gCCzBtC6O,GAAW,SAAC9W,GAChB,IAAQyN,EAAqCzN,EAArCyN,SAAUjL,EAA2BxC,EAA3BwC,MAAOyF,EAAoBjI,EAApBiI,MAAU8O,EAAnC,aAA6C/W,EAA7C,IAEA,OACE,+CACEgH,KAAK,WACLgQ,OAAQxU,IAAUyF,EAClB7F,GAAE,4BAAuB6F,GACzB+D,kBAAA,uBAAiC/D,IAC7B8O,GALN,aAOGvU,IAAUyF,GAASwF,MAK1B,SAASwJ,GAAUhP,GACjB,MAAO,CACL7F,GAAG,gBAAD,OAAkB6F,GACpB,gBAAgB,qBAAhB,OAAsCA,IAI1C,IAAM1J,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CE,KAAM,CACJmP,gBAAiBrP,EAAMsP,QAAQmJ,WAAWhS,OAE5CiS,KAAM,CACJC,YAAY,aAAD,OAAe3Y,EAAMsP,QAAQyH,cAuD7B6B,GA/CU,SAACrX,GACxB,IAAMS,EAAUlC,KAChB,EAA0BmH,IAAMzF,SAAS,GAAzC,mBAAOuC,EAAP,KAAc8U,EAAd,KAYA,OACE,qBAAKpW,UAAWT,EAAQ9B,KAAxB,SACE,eAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAAxC,UACE,cAACtB,EAAA,EAAD,CAAMH,UAAWT,EAAQ0W,KAAM1V,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAhD,SACE,eAAC4V,GAAA,EAAD,CACEC,YAAY,WACZvW,QAAQ,aACRuB,MAAOA,EACP2I,SAlBW,SAAC7D,EAAgBoL,GACpC4E,EAAS5E,IAkBD7P,aAAW,gBACX4U,UAAU,UANZ,UAQE,cAACC,GAAA,EAAD,cAAKtM,MAAM,eAAkB6L,GAAU,KACvC,cAACS,GAAA,EAAD,cAAKtM,MAAM,cAAiB6L,GAAU,KACtC,cAACS,GAAA,EAAD,cAAKtM,MAAM,WAAc6L,GAAU,UAGvC,eAAC5V,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,cAAC,GAAD,CAAUa,MAAOA,EAAOyF,MAAO,EAA/B,SACE,cAAC,GAAD,CAAoBmN,YAAapV,EAAMK,QAAQwB,KAAMwT,mBAAoBrV,EAAMK,QAAQsX,gBAEzF,cAAC,GAAD,CAAUnV,MAAOA,EAAOyF,MAAO,EAA/B,SACE,cAAC,GAAD,CAAemN,YAAapV,EAAMK,QAAQwB,KAAMqR,OAAQlT,EAAMK,QAAQqU,qBAExE,cAAC,GAAD,CAAUlS,MAAOA,EAAOyF,MAAO,EAA/B,SACE,cAAC,GAAD,CAAgBmN,YAAapV,EAAMK,QAAQwB,KAAM2U,QA/B3C,CACd,CAAET,SAAU,QAASjN,QAAQ,2BAA6BrG,KAAM,GAChE,CAAEsT,SAAU,aAAcjN,QAAS,mCAAoCrG,KAAM,GAC7E,CAAEsT,SAAU,WAAYjN,QAAQ,oDAAsDrG,KAAM,iBChD1FlE,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqW,SAAU,CACRjG,SAAU,EAAIrQ,EAAMuW,WAAWlG,SAC/BjP,WAAYpB,EAAMuW,WAAWC,qBAwDpB2C,GAnDe,WAC5B,IAAM1E,EAAuBQ,cACvBjT,EAAUlC,KAEhB,EAA8B0B,qBAA9B,mBAAOI,EAAP,KAAgBwX,EAAhB,KACA,EAA8B5X,mBAAiB,IAA/C,mBAAOM,EAAP,KAAgBC,EAAhB,KACMJ,EAAS,mCAyBf,OAvBAM,qBAAU,WACR,IAAIC,GAAY,EAiBhB,OAhBa,uCAAG,8BAAAuC,EAAA,sEACI2B,GAAWqO,EAAO4E,WADtB,OACRzR,EADQ,OAEV1F,IACFkX,EAAWxR,IAELzF,EAAM,IAAIC,OACZC,IAAJ,UAAaV,GAAb,OAAsBiG,EAAI/F,QAEtBK,IACFC,EAAImX,OAAS,kBAAMvX,EAAW,GAAD,OAAIJ,GAAJ,OAAaiG,EAAI/F,UAC9CM,EAAIG,QAAU,kBAAMP,EAAW,GAAD,OAAIJ,EAAJ,iBAVpB,2CAAH,oDAcb+T,GAEO,WACLxT,GAAY,KAEb,CAACuS,EAAO4E,YAGT,eAAC,IAAM3K,SAAP,WACE,cAAC,GAAD,IACA,cAAC9L,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMoB,QAAQ,SAASnB,WAAW,SAA5D,SACE,cAACH,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACF,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAA3F,SACE,eAACN,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UACE,cAACS,EAAA,EAAD,CAAYZ,UAAWT,EAAQsU,SAAU9T,QAAQ,WAAWgB,UAAU,KAAtE,gBACG5B,QADH,IACGA,OADH,EACGA,EAASwB,SAGbxB,GAAW,cAAC,GAAD,CAAqBA,QAASA,EAASiU,MAAO/T,IACzDF,GAAW,cAAC,GAAD,CAAkBA,QAASA,eCzD7C9B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXuK,OAAQ,CACN5J,UAAWZ,EAAMM,QAAQ,IAE3BK,OAAQ,CACNC,UAAWZ,EAAMM,QAAQ,SAoKhBiZ,GA3JuC,SAAAhY,GACpD,IAAMS,EAAUlC,KAEV0Z,EAAY,SAACC,GAAD,MAAkC,CAClD/O,MAAO+O,EAAQ/O,MACfC,SAAU8O,EAAQ9O,SAClBwB,UAAWsN,EAAQtN,UACnBE,WAAYoN,EAAQpN,WACpBqN,YAAaD,EAAQC,YACrBlV,MAAOiV,EAAQjV,MACfyH,MAAOwN,EAAQxN,QAGjB,EAA4BhF,IAAMzF,SAAmB,IAArD,mBAAO8I,EAAP,KAAeS,EAAf,KACA,EAAwB9D,IAAMzF,UAAkB,GAAhD,mBAAO0F,EAAP,KAAaC,EAAb,KACA,EAA8BF,IAAMzF,SAAiB,IAArD,mBAAO6I,EAAP,KAAgBW,EAAhB,KAEA,EAAsC/D,IAAMzF,UAAS,GAArD,mBAAOmY,EAAP,KAAmBC,EAAnB,KACA,EAA8B3S,IAAMzF,SAAmB,CACrDkJ,MAAO,GACPC,SAAU,GACVwB,UAAW,GACXE,WAAY,GACZJ,MAAO,GACPyN,YAAa,GACblV,MAAO,KAPT,mBAAOwH,EAAP,KAAgB6N,EAAhB,KAUItY,EAAMyK,UAAY2N,IACpBE,EAAWtY,EAAMyK,SACjB4N,GAAgB,IAGlB,IAoCME,EAAqB,uCAAG,4BAAArV,EAAA,mEACvBlD,EAAMyK,eADiB,aACvB,EAAexH,MADQ,4BAE1B8G,EAF0B,SAETvG,EAAoBiH,GAFX,qEAI1BV,EAJ0B,UAITrG,EAAoB+G,GAJX,+EAAH,qDAQrBV,EAAa,SAACC,GAClB,OAAQA,EAASC,MACf,KAAKlH,EACHmH,OAAO9B,SAAS+B,QAAQ,KACxB,MACF,KAAKpH,EACH0G,EAAWO,EAASlB,SACpBU,EAAUQ,EAASjB,QACnBnD,GAAQ,KAKd,OACE,eAACvE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASoB,QAAQ,SAA3C,UACE,cAACuI,GAAA,EAAD,CACE9I,GAAG,WACHlB,UAAWT,EAAQwI,OACnBzG,MAAOiI,EAAQtB,MACfgC,SA/DoB,SAAC7D,GACzB,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQrP,MAAQ7B,EAAME,OAAOhF,MAC7B8V,EAAWE,IA6DPpN,MAAM,QACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,cACHlB,UAAWT,EAAQwI,OACnBvE,KAAK,WACLlC,MAAOiI,EAAQrB,SACf+B,SAlEuB,SAAC7D,GAC5B,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQpP,SAAW9B,EAAME,OAAOhF,MAChC8V,EAAWE,IAgEPpN,MAAM,WACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,WACHlB,UAAWT,EAAQwI,OACnBzG,MAAOiI,EAAQC,MACfS,SApEoB,SAAC7D,GACzB,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQ9N,MAAQpD,EAAME,OAAOhF,MAC7B8V,EAAWE,IAkEPpN,MAAM,QACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,gBACHlB,UAAWT,EAAQwI,OACnBzG,MAAOiI,EAAQG,UACfO,SAtEwB,SAAC7D,GAC7B,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQ5N,UAAYtD,EAAME,OAAOhF,MACjC8V,EAAWE,IAoEPpN,MAAM,aACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,iBACHlB,UAAWT,EAAQwI,OACnBzG,MAAOiI,EAAQK,WACfK,SAxEyB,SAAC7D,GAC9B,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQ1N,WAAaxD,EAAME,OAAOhF,MAClC8V,EAAWE,IAsEPpN,MAAM,cACNnK,QAAQ,aAEV,cAACiK,GAAA,EAAD,CACE9I,GAAG,WACHlB,UAAWT,EAAQwI,OACnBzG,MAAOiI,EAAQ0N,YACfhN,SA1EoB,SAAC7D,GACzB,IAAMkR,EAAUP,EAAUxN,GAC1B+N,EAAQL,YAAc7Q,EAAME,OAAOhF,MACnC8V,EAAWE,IAwEPpN,MAAM,eACNnK,QAAQ,aAEV,cAAC6B,EAAA,EAAD,CACE4B,KAAK,SACLxD,UAAWT,EAAQrB,OACnBiD,MAAM,UACNpB,QAAQ,YACR2F,QAAS2R,EALX,sBASA,cAAC,GAAD,CAAezP,QAASA,EAASC,OAAQA,EAAQpD,KAAMA,EAAMC,QAASA,QCpJ7D6S,GAjBmC,kBAChD,eAAC,IAAMtL,SAAP,WACE,wBAAQrM,IAAI,yCAAyC4X,OAAK,EAACC,OAAK,IAChE,cAAC,GAAD,IACA,cAACtX,EAAA,EAAD,CAAMC,WAAS,EAACqB,QAAQ,SAASnB,WAAW,SAA5C,SACE,cAACH,EAAA,EAAD,CAAMK,GAAI,GAAIC,GAAI,EAAGF,MAAI,EAACF,UAAU,SAASoB,QAAQ,SAASnB,WAAW,SAASF,WAAS,EAA3F,SACE,eAACN,EAAA,EAAD,CAAM4X,MAAO,CAAExT,QAAS,QAAUnE,QAAQ,WAA1C,UACE,cAACa,EAAA,EAAD,CAAYb,QAAQ,KAAK2X,MAAO,CAAEpT,cAAe,QAAjD,0BAGA,cAAC,GAAD,CAAkBiF,QAASO,QAAQ6N,mBCXvCC,GAAaC,YAAe,CAChChL,QAAS,CACPiL,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAoBGE,GAfO,kBACpB,qBAAKjY,UAAU,MAAf,SACE,cAACkY,EAAA,EAAD,CAAe3a,MAAOqa,GAAtB,SACE,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIrX,UAAWiS,KACjC,cAAC,IAAD,CAAOoF,KAAK,0BAA0BrX,UAAWwR,KACjD,cAAC,IAAD,CAAO6F,KAAK,sBAAsBrX,UAAW2V,KAC7C,cAAC,IAAD,CAAO0B,KAAK,gBAAgBrX,UAAWwW,eCflCc,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/R,SAASgS,eAAe,SAG1BZ,O","file":"static/js/main.59bb3ffa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nimport Product from 'src/Types/Product';\n\ninterface IProductCard {\n  product: Product;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      marginBottom: theme.spacing(1),\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    button: {\n      marginBottom: theme.spacing(5),\n      marginTop: theme.spacing(5),\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      maxHeight: 50,\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(2),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    rating: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductCard: React.FC<IProductCard> = props => {\n  const [isShown, setIsShown] = useState(false);\n  const picUrl = 'https://localhost:5001/products/';\n  const [picture, setPicture] = useState(`${picUrl}${props.product.picURL}`);\n  const classes = useStyles();\n\n  useEffect(() => {\n    let isMounted = true;\n    const img = new Image();\n    img.src = `${picUrl}${props.product.picURL}`;\n\n    if (isMounted) {\n      img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n    >\n      <Grid container direction=\"column\" alignItems=\"center\" item xs={12} sm={3}>\n        <img className={classes.cover} src={picture} alt={props.product.name} />\n        <Typography variant=\"body1\">{isShown && props.product.vendorCode}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6} container direction=\"column\">\n        <CardContent className={classes.content}>\n          <Grid>\n            <Typography component=\"h5\" variant=\"h5\">\n              <Link href={`/product/${props.product.id}`} color=\"inherit\">\n                {props.product.name}\n              </Link>\n            </Typography>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\n              ${props.product.price}\n            </Typography>\n          </Grid>\n        </CardContent>\n        <Grid className={classes.rating}>\n          <Rating name=\"read-only\" value={props.product.mark} readOnly />\n        </Grid>\n      </Grid>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" item xs={12} sm={3}>\n        <Grid item xs={12} sm={4}>\n          <IconButton aria-label=\"favourite\" className={classes.button}>\n            <FavoriteIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Button className={classes.button} variant=\"outlined\">\n            Buy\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ProductCard;\n","import axios from 'axios';\n\nimport Login from 'src/Types/Login';\nimport Register from 'src/Types/Register';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport UserInfo from 'src/Types/UserInfo';\n\nconst serverAnswers = {\n  noCommand: 0,\n  signedIn: 3,\n  userNotFound: 10,\n};\n\nconst authViaGoogle = async (token: string): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/GoogleAuth', { token: token })).data;\n\nconst logInRequest = async (logInData: Login): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Login', logInData)).data;\n\nconst registrationRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/Register', registrationData)).data;\n\nconst regViaGoogleRequest = async (registrationData: Register): Promise<ServerResponse> =>\n  (await axios.post('/api/Account/RegisterViaGoogle', registrationData)).data;\n\nconst getRole = async (): Promise<string> => (await axios.get('/api/Account/Role')).data;\n\nconst getUserInfo = async (): Promise<UserInfo> => (await axios.get('/api/Account/GetCurrentUserInfo')).data;\n\nexport { serverAnswers, authViaGoogle, logInRequest, registrationRequest, regViaGoogleRequest, getRole, getUserInfo };\n","const Roles = {\n  guest: 'Guest',\n  admin: 'Admin',\n  customer: 'Customer',\n};\n\nexport default Roles;\n","import axios from 'axios';\n\nimport Sorting from 'src/Types/Sorting';\n\nasync function getRequest(url: string) {\n  return (await axios.get(url)).data;\n}\n\nasync function getProducts(currentPage: number, itemsOnPage: number, sortType: string, price: number[]) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const url = `/api/Product?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n  return await getRequest(url);\n}\n\nasync function getCategories() {\n  return await getRequest('/api/Category');\n}\n\nasync function getProduct(id: string) {\n  return await getRequest(`/api/Product/${id}`);\n}\n\nasync function getProductsOfCategory(\n  categoryName: string,\n  currentPage: number,\n  itemsOnPage: number,\n  sortType: string,\n  price: number[],\n) {\n  const sortparams: Sorting = sortTypeParsing(sortType);\n  const url = `/api/Category/name/${categoryName}?PageNumber=${currentPage}&ItemsOnPage=${itemsOnPage}&SortingType=${sortparams.type}&ReverseSorting=${sortparams.reverse}&MinPrice=${price[0]}&MaxPrice=${price[1]}`;\n  return await getRequest(url);\n}\n\nfunction sortTypeParsing(sortType: string): Sorting {\n  if (sortType.includes('reverse')) {\n    return { type: sortType.split(' ')[0], reverse: true };\n  } else {\n    return { type: sortType.split(' ')[0], reverse: false };\n  }\n}\n\nexport default getRequest;\n\nexport { getProducts, getRequest, getCategories, getProductsOfCategory, getProduct };\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { Typography } from '@material-ui/core';\n\nimport Category from 'src/Types/Category';\nimport { getCategories } from 'src/Requests/GetRequests';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    paper: {\n      marginRight: theme.spacing(2),\n    },\n    menu: {\n      padding: theme.spacing(1),\n    },\n    item: {\n      paddingRight: theme.spacing(4),\n      paddingLeft: theme.spacing(4),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n  }),\n);\n\nconst CategorySelector: React.FC = () => {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [categories, setCategories] = React.useState<Category[]>([]);\n\n  const anchorRef = React.useRef<HTMLButtonElement>(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = (event: React.MouseEvent<EventTarget>) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event: React.KeyboardEvent) {\n    const keyValue = 'Tab';\n    if (event.key === keyValue) {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false && anchorRef.current !== null) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  React.useEffect(() => {\n    let isMounted = true;\n    const getCategs = async () => {\n      const res = await getCategories();\n      if (isMounted) {\n        setCategories(res);\n      }\n    };\n    getCategs();\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {open ? (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"secondary\"\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          endIcon={<ArrowDropUpIcon />}\n        >\n          Categories\n        </Button>\n      ) : (\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          color=\"secondary\"\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onClick={handleToggle}\n          endIcon={<ArrowDropDownIcon />}\n        >\n          Categories\n        </Button>\n      )}\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        <Paper>\n          <ClickAwayListener onClickAway={handleClose}>\n            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown} className={classes.menu}>\n              {categories instanceof Array &&\n                categories.map((category, index) => (\n                  <MenuItem\n                    className={classes.item}\n                    key={index}\n                    onClick={() => {\n                      document.location.href = `/category/${category.name}`;\n                    }}\n                  >\n                    <Typography variant=\"h6\" component=\"h6\">\n                      {category.name}\n                    </Typography>\n                  </MenuItem>\n                ))}\n            </MenuList>\n          </ClickAwayListener>\n        </Paper>\n      </Popper>\n    </div>\n  );\n};\n\nexport default CategorySelector;\n","import React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport { AlertTitle } from '@material-ui/lab';\nimport MuiAlert from '@mui/material/Alert';\n\ninterface IErrorSnackBar {\n  open: boolean;\n  setOpen: (b: boolean) => void;\n  message: string;\n  errors: string[];\n}\n\nconst ErrorSnackBar: React.FC<IErrorSnackBar> = props => {\n  const handleClose = () => {\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={props?.open} onClose={handleClose}>\n      <MuiAlert onClose={handleClose} severity=\"warning\">\n        <AlertTitle>{props?.message}</AlertTitle>\n        <ul>\n          {props?.errors.map((er, key) => (\n            <li key={key}>{er}</li>\n          ))}\n        </ul>\n      </MuiAlert>\n    </Snackbar>\n  );\n};\n\nexport default ErrorSnackBar;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Checkbox, FormControlLabel, Grid, TextField, Typography } from '@material-ui/core';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\n\nimport Login from 'src/Types/Login';\nimport { authViaGoogle, logInRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst LoginForm: React.FC = () => {\n  const classes = useStyles();\n\n  const [loginData, setLoginData] = React.useState<Login>({ login: '', password: '', rememberMe: true });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const handleRememberMeChange = () => {\n    setLoginData({ login: loginData.login, password: loginData.password, rememberMe: !loginData.rememberMe });\n  };\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: event.target.value as string,\n      password: loginData.password,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setLoginData({\n      login: loginData.login,\n      password: event.target.value as string,\n      rememberMe: loginData.rememberMe,\n    });\n  };\n\n  const handleGoogleLoginSuccess = async (googleData: unknown) => {\n    if (googleData) {\n      const authResponse = (googleData as GoogleLoginResponse)?.getAuthResponse();\n      if (authResponse) {\n        googleRedirectTo(googleData as GoogleLoginResponse);\n      }\n    }\n  };\n\n  const logInButtonClicked = async () => {\n    redirectTo(await logInRequest(loginData));\n  };\n\n  const redirectTo = async (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const googleRedirectTo = async (googleData: GoogleLoginResponse) => {\n    const id = googleData?.getAuthResponse()?.id_token;\n    const serverResult = await authViaGoogle(id);\n    switch (serverResult.code) {\n      case serverAnswers.userNotFound:\n        redirectToRegistrationPage(id, googleData);\n        break;\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(serverResult.message);\n        setErrors(serverResult.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  const redirectToRegistrationPage = (id: string, googleData: GoogleLoginResponse) => {\n    const profile = googleData.getBasicProfile();\n    const regData: Register = {\n      login: '',\n      password: '',\n      email: profile.getEmail(),\n      firstName: profile.getGivenName(),\n      secondName: profile.getFamilyName(),\n      token: id,\n    };\n\n    history.pushState(regData, '', '/registration');\n    window.location.replace('/registration');\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={loginData.login}\n        onChange={handleLoginChange}\n        label=\"Login\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={loginData.password}\n        onChange={handlePasswordChange}\n        label=\"Password\"\n        variant=\"outlined\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={loginData.rememberMe}\n            onChange={handleRememberMeChange}\n            name=\"rememberMe\"\n            color=\"primary\"\n          />\n        }\n        label=\"Remember me\"\n        className={classes.spaces}\n      />\n      <Grid container justify=\"flex-end\">\n        <Button\n          type=\"submit\"\n          className={classes.spaces}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={logInButtonClicked}\n        >\n          LogIn\n        </Button>\n      </Grid>\n      <Grid className={classes.spaces} container justify=\"center\">\n        <Typography component=\"div\">Sign in with other services</Typography>\n      </Grid>\n      <Grid container justify=\"center\">\n        <GoogleLogin\n          clientId={'1036988036938-9u2bo3aiqo038ehm8tlb3vl9lq6bm27f.apps.googleusercontent.com'}\n          buttonText=\"Log in with Google\"\n          onSuccess={handleGoogleLoginSuccess}\n          cookiePolicy={'single_host_origin'}\n        />\n      </Grid>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  Link,\n  Typography,\n} from '@material-ui/core';\n\nimport LoginForm from './LoginForm';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst LoginModal: React.FC = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button className={classes.buttons} color=\"secondary\" variant=\"outlined\" onClick={handleClickOpen}>\n        LogIn\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Sign in</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <LoginForm />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Grid container justify=\"center\">\n            <Typography>You are new here?</Typography>\n            <Link href=\"/Registration\"> Regiser </Link>\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LoginModal;\n","import Avatar from '@material-ui/core/Avatar';\nimport React, { useEffect, useState } from 'react';\n\nimport { getUserInfo } from 'src/Requests/AccountRequests';\nimport UserInfo from 'src/Types/UserInfo';\n\nconst UserMiniPanel: React.FC = () => {\n  const [userInfo, setUserInfo] = useState<UserInfo>();\n  const picUrl = 'https://localhost:5001/users/';\n\n  useEffect(() => {\n    let isMounted = true;\n    getUserInformation(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const getUserInformation = async (isMounted: boolean) => {\n    const userInformation = await getUserInfo();\n\n    if (isMounted) {\n      setUserInfo(userInformation);\n    }\n  };\n\n  function stringToColor(string: string) {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.substr(-2);\n    }\n\n    return color;\n  }\n\n  function stringAvatar(name: string) {\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name[0]}`,\n    };\n  }\n\n  return (\n    <React.Fragment>\n      {userInfo &&\n        (userInfo.avatar ? (\n          <Avatar alt={userInfo.userName} src={`${picUrl}${userInfo.avatar}`} />\n        ) : (\n          <Avatar {...stringAvatar(userInfo.userName)} />\n        ))}\n    </React.Fragment>\n  );\n};\nexport default UserMiniPanel;\n","import React, { useEffect, useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Grid from '@material-ui/core/Grid';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport DevicesIcon from '@material-ui/icons/Devices';\n\nimport { getRole } from 'src/Requests/AccountRequests';\nimport Roles from 'src/Types/Roles';\n\nimport CategorySelector from './CategorySelector';\nimport LoginModal from './LoginModal';\nimport UserMiniPanel from './UserMiniPanel';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttons: {\n      margin: theme.spacing(2),\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.common.white,\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    inputRoot: {\n      color: '#000',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    searchIcon: {\n      color: '#999',\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    logoButton: {\n      fontSize: '30px',\n      fontFamily: 'cursive',\n    },\n  }),\n);\n\nconst NavigationBar: React.FC = () => {\n  const classes = useStyles();\n\n  const [isAuth, setAuth] = useState<boolean>(false);\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  useEffect(() => {\n    let isMounted = true;\n    checkAuth(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const checkAuth = async (isMounted: boolean) => {\n    const authres = await getRole();\n\n    if (isMounted) {\n      if (authres !== Roles.guest) {\n        setAuth(true);\n      } else {\n        setAuth(false);\n      }\n      setLoaded(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <AppBar>\n        <Toolbar>\n          <Grid item xs={12} sm={2}>\n            <Button\n              variant=\"text\"\n              size=\"large\"\n              color=\"secondary\"\n              href=\"/\"\n              className={classes.logoButton}\n              startIcon={<DevicesIcon />}\n            >\n              DDoS\n            </Button>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <CategorySelector />\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <ButtonGroup variant=\"outlined\" color=\"secondary\" size=\"large\" aria-label=\"text primary button group\">\n              <Button startIcon={<FavoriteBorderIcon />}>Favorite</Button>\n              <Button startIcon={<ShoppingCartOutlinedIcon />}>Cart</Button>\n            </ButtonGroup>\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            {loaded && (isAuth ? <UserMiniPanel /> : <LoginModal />)}\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\nexport default NavigationBar;\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { Observer } from 'mobx-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    selector: {\n      marginLeft: theme.spacing(6),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n    },\n  }),\n);\n\ninterface ISortBar {\n  type: string;\n  onChange: (sortType: string) => void;\n}\n\nconst SortBar: React.FC<ISortBar> = props => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleSortTypeChanged = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.onChange(event.target.value as string);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Card variant=\"outlined\">\n        <Grid className={classes.selector} container alignItems=\"center\" justify=\"flex-start\">\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"sorting-controlled-open-select-label\">Sort by</InputLabel>\n            <Observer>\n              {() => (\n                <Select\n                  labelId=\"sorting-controlled-open-select-label\"\n                  id=\"sorting-controlled-open-select\"\n                  open={open}\n                  onClick={handleOpen}\n                  value={props.type}\n                  onChange={handleSortTypeChanged}\n                >\n                  <MenuItem value={'price'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Price\n                  </MenuItem>\n                  <MenuItem value={'price reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Price\n                  </MenuItem>\n                  <MenuItem value={'name'}>\n                    <ArrowDownwardIcon fontSize=\"small\" /> Name\n                  </MenuItem>\n                  <MenuItem value={'name reverse'}>\n                    <ArrowUpwardIcon fontSize=\"small\" /> Name\n                  </MenuItem>\n                </Select>\n              )}\n            </Observer>\n          </FormControl>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SortBar;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Observer } from 'mobx-react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rightTextField: {\n      marginLeft: theme.spacing(1),\n    },\n    leftTextField: {\n      marginRight: theme.spacing(1),\n    },\n  }),\n);\n\ninterface IFilterBar {\n  priceRange: number[];\n  pickedPrices: number[];\n  applyChanges: () => void;\n  setPrices: (i: number, newValue: unknown) => void;\n}\n\nconst FilterBar: React.FC<IFilterBar> = props => {\n  const handleMinChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(0, event.target.value);\n  };\n\n  const handleMaxChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    props.setPrices(1, event.target.value);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Card variant=\"outlined\">\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <ListItem>\n            <Typography variant=\"h5\" component=\"h5\">\n              Filters\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Typography id=\"price-slider\" gutterBottom>\n              Price\n            </Typography>\n          </ListItem>\n          <ListItem>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"minPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[0].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.leftTextField}\n                  value={props.pickedPrices[0]}\n                  onChange={handleMinChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n            <Observer>\n              {() => (\n                <TextField\n                  id=\"maxPrice\"\n                  variant=\"outlined\"\n                  placeholder={props.priceRange[1].toString()}\n                  size=\"small\"\n                  type=\"number\"\n                  className={classes.rightTextField}\n                  value={props.pickedPrices[1]}\n                  onChange={handleMaxChange}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n                  }}\n                />\n              )}\n            </Observer>\n          </ListItem>\n          <Divider />\n          <ListItem>\n            <Grid container justify=\"center\">\n              <Button variant=\"contained\" color=\"primary\" onClick={props.applyChanges}>\n                Apply\n              </Button>\n            </Grid>\n          </ListItem>\n        </List>\n      </Card>\n    </Grid>\n  );\n};\nexport default FilterBar;\n","import Product from 'src/Types/Product';\n\ninterface ISettings {\n  currentPage: number;\n  sortType: string;\n  pickedPrice: number[];\n  productList: Product[];\n  lastPage: number;\n  priceRange: number[];\n\n  handlePageChange(event: React.ChangeEvent<unknown>, value: number): void;\n  setPage(value: number): void;\n  setSortType(type: string): void;\n  filtersApplied(): void;\n  setInfo(prodList: unknown, maxPage: number, minPrice: number, maxPrice: number): void;\n  checkPickedPrices(i: number, newValue: unknown): void;\n  setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown): void;\n  isItNumber(value: unknown): boolean;\n  createURL(): void;\n}\n\nfunction createProdParams(getItems: () => void): ISettings {\n  const settings: ISettings = {\n    currentPage: 1,\n    sortType: 'price',\n    pickedPrice: [0, 0],\n    productList: [],\n    lastPage: 0,\n    priceRange: [0, 0],\n\n    handlePageChange(event: React.ChangeEvent<unknown>, value: number) {\n      this.setPage(value);\n      getItems();\n    },\n\n    setPage(value: number) {\n      if (value <= this.lastPage && value > 0 && value !== 1) {\n        this.currentPage = value;\n      } else {\n        this.currentPage = 1;\n      }\n      this.createURL();\n    },\n\n    setSortType(type: string) {\n      if (this.sortType !== type) {\n        this.setPage(1);\n        this.sortType = type;\n        this.createURL();\n        getItems();\n      }\n    },\n\n    filtersApplied() {\n      this.setPage(1);\n      this.createURL();\n      getItems();\n    },\n\n    setInfo(prodList: Product[], maxPage: number, minPrice: number, maxPrice: number) {\n      this.productList = prodList;\n      this.lastPage = maxPage;\n      this.priceRange = [minPrice, maxPrice];\n      if (this.pickedPrice[0] === 0) {\n        this.pickedPrice[0] = minPrice;\n      }\n      if (this.pickedPrice[1] === 0) {\n        this.pickedPrice[1] = maxPrice;\n      }\n    },\n\n    checkPickedPrices(i: number, newValue: unknown) {\n      const regexFull = /^\\d*$/;\n      const regexPunct = /\\d+\\.\\d+/;\n      if ((regexFull.test(newValue as string) || regexPunct.test(newValue as string)) && (i === 0 || i === 1)) {\n        if ((newValue as string) === '') {\n          this.pickedPrice[i] = 0;\n        } else {\n          this.pickedPrice[i] = newValue as number;\n        }\n      }\n    },\n\n    setParams(currPage: unknown, minPrice: unknown, maxPrice: unknown, sort: unknown) {\n      if (this.isItNumber(minPrice)) {\n        this.checkPickedPrices(0, minPrice as number);\n      }\n      if (this.isItNumber(maxPrice)) {\n        this.checkPickedPrices(1, maxPrice as number);\n      }\n      if (sort !== null && sort !== this.sortType) {\n        this.sortType = sort as string;\n      }\n      if (this.isItNumber(currPage)) {\n        this.setPage(parseInt(currPage as string));\n      }\n      this.createURL();\n      getItems();\n    },\n\n    isItNumber(value: unknown): boolean {\n      if (!isNaN(parseInt(value as string))) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    createURL() {\n      const params = new URLSearchParams(location.search);\n      if (this.currentPage === 1) {\n        params.delete('page');\n      } else {\n        params.set('page', this.currentPage.toString());\n      }\n      if (this.sortType === 'price') {\n        params.delete('sort');\n      } else {\n        params.set('sort', this.sortType);\n      }\n      if (this.pickedPrice[0] === this.priceRange[0] && this.pickedPrice[1] === this.priceRange[1]) {\n        params.delete('minPrice');\n        params.delete('maxPrice');\n      } else {\n        params.set('minPrice', this.pickedPrice[0].toString());\n        params.set('maxPrice', this.pickedPrice[1].toString());\n      }\n      history.pushState({}, 'Products', `?${params.toString()}`);\n    },\n  };\n\n  return settings;\n}\n\nexport { createProdParams };\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProductsOfCategory } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\ninterface ICategoryPage {\n  categoryName: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryWord: {\n      fontWeight: 600,\n      padding: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst CategoryPage: React.FC = () => {\n  const params: ICategoryPage = useParams();\n\n  const getProducts = async (isMounted: boolean) => {\n    const res = await getProductsOfCategory(params.categoryName, data.currentPage, 9, data.sortType, data.pickedPrice);\n    if (isMounted !== false && res.container !== undefined) {\n      const qParams = new URLSearchParams(location.search);\n      data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice);\n      data.setParams(qParams.get('page'), qParams.get('minPrice'), qParams.get('maxPrice'), qParams.get('sort'));\n    }\n  };\n\n  const object = createProdParams(async () => {\n    const res = await getProductsOfCategory(params.categoryName, data.currentPage, 9, data.sortType, data.pickedPrice);\n    data.setInfo(res.container.products, res.maxPage, res.minPrice, res.maxPrice);\n  });\n  const data = useLocalObservable(() => object);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProducts(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n            <Grid>\n              <Typography className={classes.categoryWord} variant=\"h5\" component=\"h5\">\n                {params.categoryName}\n              </Typography>\n            </Grid>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justify=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CategoryPage;\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Observer, useLocalObservable } from 'mobx-react';\n\nimport ProductCard from 'src/Components/Parts/ProductCard';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProducts } from 'src/Requests/GetRequests';\nimport SortBar from 'src/Components/Parts/SortBar';\nimport FilterBar from 'src/Components/Parts/FilterBar';\nimport { createProdParams } from 'src/Components/Parts/ProductListParams';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    productGrid: {\n      paddingLeft: theme.spacing(1),\n      paddingTop: theme.spacing(1),\n      paddingBottom: theme.spacing(2),\n    },\n    filterPanel: {\n      paddingTop: theme.spacing(1),\n    },\n  }),\n);\n\nconst ProductsPage: React.FC = () => {\n  const getProd = async (isMounted: boolean) => {\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\n    if (isMounted) {\n      const params = new URLSearchParams(location.search);\n      data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice);\n      data.setParams(params.get('page'), params.get('minPrice'), params.get('maxPrice'), params.get('sort'));\n    }\n  };\n\n  const object = createProdParams(async () => {\n    const res = await getProducts(data.currentPage, 9, data.sortType, data.pickedPrice);\n    data.setInfo(res.container, res.maxPage, res.minPrice, res.maxPrice);\n  });\n\n  const data = useLocalObservable(() => object);\n\n  useEffect(() => {\n    let isMounted = true;\n    getProd(isMounted);\n    return () => {\n      isMounted = false;\n    };\n  });\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={9} item direction=\"row\" justify=\"center\" alignItems=\"center\" container>\n          <Grid item direction=\"column\" justify=\"center\" container>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Observer>{() => <SortBar type={data.sortType} onChange={data.setSortType} />}</Observer>\n            </Grid>\n            <Grid item direction=\"row\" justify=\"center\" container>\n              <Observer>\n                {() => (\n                  <Grid xs={12} sm={3} item className={classes.filterPanel}>\n                    <FilterBar\n                      priceRange={data.priceRange}\n                      pickedPrices={data.pickedPrice}\n                      setPrices={data.checkPickedPrices}\n                      applyChanges={data.filtersApplied}\n                    />\n                  </Grid>\n                )}\n              </Observer>\n              <Grid className={classes.productGrid} xs={12} sm={9} item container direction=\"column\">\n                <Observer>\n                  {() => (\n                    <Grid>\n                      {data.productList.map(product => (\n                        <ProductCard product={product} key={product.id} />\n                      ))}\n                    </Grid>\n                  )}\n                </Observer>\n                <Grid justify=\"center\" alignItems=\"center\" container>\n                  <Observer>\n                    {() => (\n                      <React.Fragment>\n                        {data.lastPage > 1 && (\n                          <Pagination\n                            count={data.lastPage}\n                            page={data.currentPage}\n                            onChange={data.handlePageChange}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            shape=\"rounded\"\n                          />\n                        )}\n                      </React.Fragment>\n                    )}\n                  </Observer>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductsPage;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Rating from '@material-ui/lab/Rating';\nimport { Button } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IPriceLikeBuyCard {\n  price?: number;\n  id?: string;\n  rating?: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minHeight: 180,\n      margin: theme.spacing(1),\n    },\n    grid: {\n      minHeight: 80,\n    },\n    details: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    content: {\n      flex: '1 0 auto',\n    },\n    cover: {\n      maxWidth: 151,\n      maxHeight: 120,\n      margin: theme.spacing(2),\n    },\n    bold: {\n      fontWeight: 600,\n    },\n    rating: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst PriceLikeBuyCard: React.FC<IPriceLikeBuyCard> = props => {\n  const classes = useStyles();\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid justify=\"center\" alignItems=\"center\" container direction=\"column\">\n        <Grid className={classes.grid} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Grid item container direction=\"column\" justify=\"center\" alignItems=\"center\" xs={12} sm={6}>\n            <Typography component=\"h5\" variant=\"h5\" className={classes.bold}>\n              Price:\n            </Typography>\n            <Typography color=\"primary\" component=\"h5\" variant=\"h5\" className={classes.bold}>\n              ${props.price}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid item xs={12} sm={3} container justify=\"flex-start\">\n              <IconButton aria-label=\"favourite\">\n                <FavoriteIcon />\n              </IconButton>\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              <Button color=\"primary\" variant=\"contained\">\n                Buy\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Rating className={classes.rating} name=\"read-only\" value={props.rating} readOnly />\n      </Grid>\n    </Card>\n  );\n};\n\nexport default PriceLikeBuyCard;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport PriceLikeBuyCard from 'src/Components/Parts/PriceLikeBuyCard';\n\ninterface IDetailedProductCard {\n  product?: Product;\n  image?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    image: {\n      maxWidth: 260,\n      maxHeight: 400,\n      margin: theme.spacing(2),\n    },\n    card: {\n      padding: theme.spacing(2),\n    },\n  }),\n);\n\nconst DetailedProductCard: React.FC<IDetailedProductCard> = props => {\n  const classes = useStyles();\n  const paramString = (): string => {\n    let string = '';\n    props.product?.productParameter.map(param => {\n      if (param.important) {\n        string += `${param.name}:${param.value}, `;\n      }\n    });\n    return string.substring(0, string.length - 2);\n  };\n\n  const strinTechParams = paramString();\n  return (\n    <Card variant=\"outlined\" className={classes.card}>\n      <Grid direction=\"row\" justify=\"center\" container>\n        <Grid item xs={12} sm={6} direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n          <img className={classes.image} src={props.image} />\n          Code: {props.product?.vendorCode}\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" component=\"h6\">\n            {strinTechParams}\n          </Typography>\n          <PriceLikeBuyCard price={props.product?.price} rating={props.product?.mark} id={props.product?.id} />\n        </Grid>\n      </Grid>\n      <Grid direction=\"row\" justify=\"center\" alignItems=\"center\" container />\n    </Card>\n  );\n};\n\nexport default DetailedProductCard;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\ninterface IProductDescription {\n  productName: string;\n  productDescription: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    descriptionText: {\n      margin: theme.spacing(2),\n    },\n  }),\n);\n\nconst ProductDescription: React.FC<IProductDescription> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Descripton of ${props.productName}`}\n      </Typography>\n      <Grid className={classes.descriptionText} container justify=\"flex-start\">\n        <Typography variant=\"body2\">{props.productDescription}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductDescription;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\n\ninterface IProductParameter {\n  param: Parameter;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    line: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      padding: theme.spacing(1, 0, 1, 0),\n    },\n  }),\n);\n\nconst ProductParameter: React.FC<IProductParameter> = props => {\n  const classes = useStyles();\n  return (\n    <Grid direction=\"row\" container alignItems=\"center\" justify=\"center\" className={classes.line}>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.name}</Typography>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography variant=\"body2\">{props.param.value}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductParameter;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Parameter from 'src/Types/Parameter';\nimport ProductParameter from 'src/Components/Parts/ProductParameter';\n\ninterface IProductParams {\n  productName: string;\n  params: Parameter[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductParams: React.FC<IProductParams> = props => {\n  const classes = useStyles();\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Parameters of ${props.productName}`}\n      </Typography>\n      {props.params?.map((param, index) => (\n        <ProductParameter param={param} key={index} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default ProductParams;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\n\nimport Review from 'src/Types/Review';\n\ninterface IProductReviews {\n  review: Review;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    userName: {\n      fontSize: 1.1 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    reviewHeader: {\n      padding: theme.spacing(1),\n      borderBottom: `1px solid ${theme.palette.divider}`,\n    },\n    commentSection: {\n      minHeight: '6em',\n      padding: theme.spacing(2),\n    },\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n  }),\n);\n\nconst ReviewBlock: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"flex-start\" justify=\"flex-start\">\n        <Grid className={classes.reviewHeader} container direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item xs={12} sm={8}>\n            <Typography className={classes.userName}>{props.review.username}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Rating value={props.review.mark} readOnly />\n          </Grid>\n        </Grid>\n        <Typography className={classes.commentSection}>{props.review.message}</Typography>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewBlock;\n","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Rating from '@material-ui/lab/Rating';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Review from 'src/Types/Review';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: theme.spacing(2, 1, 0, 1),\n    },\n    cardPart: {\n      padding: theme.spacing(1),\n    },\n  }),\n);\n\ninterface ICreateReview {\n  mark: number;\n  message: string;\n}\n\ninterface IReviewForm {\n  addReview: (newReview: Review) => void;\n}\n\nconst ReviewForm: React.FC<IReviewForm> = props => {\n  const classes = useStyles();\n\n  const [review, setReview] = useState<ICreateReview>({ message: '', mark: 0 });\n  const handleMark = (event: unknown, value: unknown) => {\n    setReview({ message: review.message, mark: value as number });\n  };\n  const handleMessage = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const value = event.target.value as string;\n    setReview({ message: value, mark: review.mark });\n  };\n\n  const submit = () => {\n    // sent request, wait for result\n    props.addReview({ message: review.message, mark: review.mark, username: 'me' });\n    // if there is user's comment -> redraw form (new values) and button label = 'update'\n  };\n\n  return (\n    <Card variant=\"outlined\" className={classes.root}>\n      <Grid item xs={12} container direction=\"column\" alignItems=\"center\" justify=\"center\">\n        <Grid className={classes.cardPart} container direction=\"row\" alignItems=\"center\" justify=\"flex-end\">\n          <Rating value={review.mark} onChange={handleMark} />\n        </Grid>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Review\"\n          multiline\n          rows={4}\n          placeholder=\"Write your review here\"\n          variant=\"outlined\"\n          value={review.message}\n          onChange={handleMessage}\n          fullWidth\n        />\n        <Grid className={classes.cardPart} container alignItems=\"center\" justify=\"flex-end\">\n          <Button color=\"primary\" variant=\"contained\" onClick={submit}>\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default ReviewForm;\n","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport ReviewBlock from 'src/Components/Parts/ReviewBlock';\nimport Review from 'src/Types/Review';\nimport ReviewForm from 'src/Components/Parts/ReviewForm';\n\ninterface IProductReviews {\n  productName: string;\n  reviews: Review[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 1.3 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductReviews: React.FC<IProductReviews> = props => {\n  const classes = useStyles();\n  const [reviews, setRerviews] = useState<Review[]>(props.reviews);\n  const addReview = (newReview: Review): void => {\n    const newVar: Review[] = [];\n    while (reviews.length > 0) {\n      newVar.push(reviews.pop() as Review);\n    }\n    newVar.push(newReview);\n    setRerviews(newVar.reverse());\n  };\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\n      <Typography className={classes.prodName} variant=\"overline\">\n        {`Reviews on ${props.productName}`}\n      </Typography>\n      <Grid item xs={12} direction=\"column\" container justify=\"center\">\n        <ReviewForm addReview={addReview} />\n        {reviews?.map((review, index) => (\n          <ReviewBlock review={review} key={index} />\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProductReviews;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\n\nimport Product from 'src/Types/Product';\nimport ProductDescription from 'src/Components/Parts/ProductDescription';\nimport ProductParams from 'src/Components/Parts/ProductParams';\nimport ProductReviews from 'src/Components/Parts/ProductReviews';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: unknown;\n  value: unknown;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n};\n\nfunction a11yProps(index: unknown) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\ninterface IVerticalTabs {\n  product: Product;\n}\n\nconst ProductInfoPanel = (props: IVerticalTabs) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: unknown, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const reviews = [\n    { username: 'user1', message: `Not funny, didn't laught`, mark: 3 },\n    { username: '-user2011-', message: 'The best thing happened with me!', mark: 5 },\n    { username: 'User1984', message: `It's not about the product - it's about lifestyle`, mark: 4 },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Grid className={classes.tabs} item xs={12} sm={3}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs\"\n            textColor=\"primary\"\n          >\n            <Tab label=\"Description\" {...a11yProps(0)} />\n            <Tab label=\"Parameters\" {...a11yProps(1)} />\n            <Tab label=\"Reviews\" {...a11yProps(2)} />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <TabPanel value={value} index={0}>\n            <ProductDescription productName={props.product.name} productDescription={props.product.description} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <ProductParams productName={props.product.name} params={props.product.productParameter} />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <ProductReviews productName={props.product.name} reviews={reviews} />\n          </TabPanel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ProductInfoPanel;\n","import React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useParams } from 'react-router-dom';\nimport { Card, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport { getProduct } from 'src/Requests/GetRequests';\nimport Product from 'src/Types/Product';\nimport DetailedProductCard from 'src/Components/Parts/DetailedProductCard';\nimport ProductInfoPanel from 'src/Components/Parts/ProductInfoPanel';\n\ninterface IProductPage {\n  productID: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    prodName: {\n      fontSize: 2 * theme.typography.fontSize,\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  }),\n);\n\nconst ProductPage: React.FC = () => {\n  const params: IProductPage = useParams();\n  const classes = useStyles();\n\n  const [product, setProduct] = useState<Product>();\n  const [picture, setPicture] = useState<string>('');\n  const picUrl = 'https://localhost:5001/products/';\n\n  useEffect(() => {\n    let isMounted = true;\n    const getProd = async () => {\n      const res = await getProduct(params.productID);\n      if (isMounted) {\n        setProduct(res);\n\n        const img = new Image();\n        img.src = `${picUrl}${res.picURL}`;\n\n        if (isMounted) {\n          img.onload = () => setPicture(`${picUrl}${res.picURL}`);\n          img.onerror = () => setPicture(`${picUrl}noPic.jpg`);\n        }\n      }\n    };\n    getProd();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [params.productID]);\n\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid xs={12} sm={7} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n          <Card>\n            <Grid>\n              <Typography className={classes.prodName} variant=\"overline\" component=\"h4\">\n                {product?.name}\n              </Typography>\n            </Grid>\n            {product && <DetailedProductCard product={product} image={picture} />}\n            {product && <ProductInfoPanel product={product} />}\n          </Card>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default ProductPage;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Grid, TextField } from '@material-ui/core';\n\nimport { registrationRequest, regViaGoogleRequest, serverAnswers } from 'src/Requests/AccountRequests';\nimport ServerResponse from 'src/Types/ServerResponse';\nimport Register from 'src/Types/Register';\n\nimport ErrorSnackBar from './ErrorSnackBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    spaces: {\n      marginTop: theme.spacing(1),\n    },\n    button: {\n      marginTop: theme.spacing(3),\n    },\n  }),\n);\n\ninterface IRegistrationForm {\n  regData?: Register;\n}\n\nconst RegistrationForm: React.FC<IRegistrationForm> = props => {\n  const classes = useStyles();\n\n  const newObject = (oldData: Register): Register => ({\n    login: oldData.login,\n    password: oldData.password,\n    firstName: oldData.firstName,\n    secondName: oldData.secondName,\n    phoneNumber: oldData.phoneNumber,\n    token: oldData.token,\n    email: oldData.email,\n  });\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [message, setMessage] = React.useState<string>('');\n\n  const [rerendered, setRererendered] = React.useState(false);\n  const [regData, setRegData] = React.useState<Register>({\n    login: '',\n    password: '',\n    firstName: '',\n    secondName: '',\n    email: '',\n    phoneNumber: '',\n    token: '',\n  });\n\n  if (props.regData && !rerendered) {\n    setRegData(props.regData);\n    setRererendered(true);\n  }\n\n  const handleLoginChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.login = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePasswordChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.password = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleEMailChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.email = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleFirstNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.firstName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handleSecondNameChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.secondName = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const handlePhoneChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const newData = newObject(regData);\n    newData.phoneNumber = event.target.value as string;\n    setRegData(newData);\n  };\n\n  const registerButtonClicked = async () => {\n    if (!props.regData?.token) {\n      redirectTo(await registrationRequest(regData));\n    } else {\n      redirectTo(await regViaGoogleRequest(regData));\n    }\n  };\n\n  const redirectTo = (response: ServerResponse) => {\n    switch (response.code) {\n      case serverAnswers.signedIn:\n        window.location.replace('/');\n        break;\n      case serverAnswers.noCommand:\n        setMessage(response.message);\n        setErrors(response.errors);\n        setOpen(true);\n        break;\n    }\n  };\n\n  return (\n    <Grid container direction=\"column\" justify=\"center\">\n      <TextField\n        id=\"login-tf\"\n        className={classes.spaces}\n        value={regData.login}\n        onChange={handleLoginChange}\n        label=\"Login\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"password-tf\"\n        className={classes.spaces}\n        type=\"password\"\n        value={regData.password}\n        onChange={handlePasswordChange}\n        label=\"Password\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"email-tf\"\n        className={classes.spaces}\n        value={regData.email}\n        onChange={handleEMailChange}\n        label=\"Email\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"first-name-tf\"\n        className={classes.spaces}\n        value={regData.firstName}\n        onChange={handleFirstNameChange}\n        label=\"First Name\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"second-name-tf\"\n        className={classes.spaces}\n        value={regData.secondName}\n        onChange={handleSecondNameChange}\n        label=\"Second Name\"\n        variant=\"outlined\"\n      />\n      <TextField\n        id=\"phone-tf\"\n        className={classes.spaces}\n        value={regData.phoneNumber}\n        onChange={handlePhoneChange}\n        label=\"Phone Number\"\n        variant=\"outlined\"\n      />\n      <Button\n        type=\"submit\"\n        className={classes.button}\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={registerButtonClicked}\n      >\n        Register\n      </Button>\n      <ErrorSnackBar message={message} errors={errors} open={open} setOpen={setOpen} />\n    </Grid>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport { Typography, Card, Grid } from '@material-ui/core';\n\nimport RegistrationForm from 'src/Components/Parts/RegistrationForm';\nimport NavigationBar from 'src/Components/Parts/NavigationBar';\nimport Register from 'src/Types/Register';\n\ninterface IRegistration {\n  regData?: Register;\n}\n\nconst RegistrationPage: React.FC<IRegistration> = () => (\n  <React.Fragment>\n    <script src=\"https://apis.google.com/js/platform.js\" async defer />\n    <NavigationBar />\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid xs={12} sm={9} item direction=\"column\" justify=\"center\" alignItems=\"center\" container>\n        <Card style={{ padding: '35px' }} variant=\"outlined\">\n          <Typography variant=\"h4\" style={{ paddingBottom: '10px' }}>\n            Registration\n          </Typography>\n          <RegistrationForm regData={history.state} />\n        </Card>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n);\n\nexport default RegistrationPage;\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nimport './App.css';\nimport CategoryPage from './Components/Pages/CategoryPage';\nimport ProductsPage from './Components/Pages/ProductsPage';\nimport ProductPage from './Components/Pages/ProductPage';\nimport RegistrationPage from './Components/Pages/RegistrationPage';\n\nconst innerTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ef6c00',\n    },\n    secondary: {\n      main: '#FFF',\n    },\n  },\n});\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <ThemeProvider theme={innerTheme}>\n      <BrowserRouter>\n        <div>\n          <Route exact path=\"/\" component={ProductsPage} />\n          <Route path=\"/category/:categoryName\" component={CategoryPage} />\n          <Route path=\"/product/:productID\" component={ProductPage} />\n          <Route path=\"/registration\" component={RegistrationPage} />\n        </div>\n      </BrowserRouter>\n    </ThemeProvider>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from 'src/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}